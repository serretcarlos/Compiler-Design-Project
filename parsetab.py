
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et false float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string true var void while\n    PROGRAMA : program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO nt_endQuad\n    \n    nt_cambiarScope : empty\n    \n    nt_ambienteMain : nt_cambiarScope\n    \n    nt_endQuad : empty\n    \n    nt_pushJmpMain : empty\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list nt_hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    nt_hacerLista : empty\n    \n    VARS_LIST_AUX : id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n                  | VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n    \n    nt_agregarId : empty\n    \n    nt_agregarCteLista : empty\n    \n    nt_agregarDicVar : empty\n    \n    VARS_VAR : var nt_hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    nt_hacerVar : empty\n    \n    VARS_VAR_AUX : id nt_agregarId nt_agregarDicVar\n                 | VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar\n    \n    TIPO : int nt_cambioTipoActual\n         | float nt_cambioTipoActual\n         | bool nt_cambioTipoActual\n         | string nt_cambioTipoActual\n    \n    nt_cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n    \n    nt_funcInicio : empty\n    \n    CUERPOFUNC_VARS : VARS \n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP nt_checaRet semicolon\n    \n    nt_checaRet : empty\n    \n    FUNC : TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub\n         | VOIDFUNC nt_pushEndsub\n    \n    nt_pushEndsub : empty\n    \n    nt_cambioFuncActual : empty\n    \n    nt_agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id nt_agregarParametro\n              | FUNC_PARA comma TIPO id nt_agregarParametro\n              | empty\n    \n    nt_agregarParametro : empty\n    \n    VOIDFUNC : void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    nt_hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id nt_agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id nt_agregarParametro\n                  | empty\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_AUX\n    \n    CONDICION_AUX : left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto\n    \n    ELSE_ELIF : ELSE\n              | ELIF\n              | empty\n    \n    ELSE : else nt_pushElse CUERPO\n    \n    ELIF : elseif nt_pushElse CONDICION_AUX\n    \n    nt_checarBool : empty\n    \n    nt_pushSalto : empty\n    \n    nt_pushElse : empty\n    \n    CICLO : while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop\n    \n    nt_saltoLoop : empty\n    \n    nt_pushLoop : empty\n    \n    LECTURA : cread left_par id nt_leer right_par semicolon\n    \n    nt_leer : empty\n    \n    ESCRITURA : cwrite left_par EXPRESION nt_escribir right_par semicolon\n    \n    nt_escribir : empty\n    \n    LLAMADA : id nt_verificaFuncId left_par nt_pushPOper nt_startERA LLAMADA_EXPRESION nt_verificaUltimo right_par nt_popPOper semicolon nt_pushGoSub\n    \n    LLAMADA_EXPRESION : LLAMADA_EXPRESION_AUX\n                      | empty\n    \n    LLAMADA_EXPRESION_AUX : EXPRESION nt_verifyArgType\n                      | LLAMADA_EXPRESION_AUX comma nt_paramPP EXPRESION nt_verifyArgType\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B\n    \n    nt_checaAndOrNot : empty\n    \n    EXPRESION_NOT : not nt_pushPOper\n                | empty\n    \n\tEXPRESION_B : and nt_pushPOper EXPRESION\n\t           | or nt_pushPOper EXPRESION\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt nt_pushPOper EXP nt_checarRelop\n                        | gt nt_pushPOper EXP nt_checarRelop\n                        | ne nt_pushPOper EXP nt_checarRelop\n                        | ge nt_pushPOper EXP nt_checarRelop\n                        | le nt_pushPOper EXP nt_checarRelop\n                        | et nt_pushPOper EXP nt_checarRelop\n                        | empty\n    \n    nt_checarRelop : empty\n    \n    EXP : TERMINO nt_checar_sumas EXP_AUX\n    \n    nt_checar_sumas : empty\n    \n    EXP_AUX : plus nt_pushPOper EXP\n            | minus nt_pushPOper EXP\n            | empty\n    \n    TERMINO : FACTOR nt_checar_multis TERMINO_AUX\n    \n    nt_checar_multis : empty\n    \n    TERMINO_AUX : multiply nt_pushPOper TERMINO\n                | divide nt_pushPOper TERMINO\n                | empty\n    \n    FACTOR : left_par nt_pushPOper EXPRESION right_par nt_popPOper\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id nt_pushPilaO\n                | id nt_verificaFuncId LLAMADA_F\n    \n    nt_verificaFuncId : empty\n    \n    LLAMADA_F : left_par nt_pushPOper nt_startERA LLAMADAF_AUX nt_verificaUltimo right_par nt_popPOper nt_pushGoSub nt_asignarRet\n    \n    LLAMADAF_AUX : LLAMADAF_AUX2\n                 | empty\n    \n    LLAMADAF_AUX2 : EXPRESION nt_verifyArgType\n                  | LLAMADAF_AUX2 comma nt_paramPP EXPRESION nt_verifyArgType\n    \n    nt_paramPP : empty\n    \n    nt_startERA : empty\n    \n    nt_verifyArgType : empty\n    \n    nt_verificaUltimo : empty\n    \n    nt_pushGoSub : empty\n    \n    nt_asignarRet : empty\n    \n    LISTA : id left_sb EXP right_sb\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus nt_sigMas NUMERICA_AUX\n             | minus nt_sigMenos NUMERICA_AUX\n    \n    nt_sigMas : empty\n    \n    nt_sigMenos : empty\n    \n    NUMERICA_AUX : cteInt nt_pushInt\n                 | cteFloat nt_pushFloat\n    \n    nt_pushInt : empty\n    \n    nt_pushFloat : empty\n    \n    BOOLEANA : true\n             | false\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon\n    \n    nt_checaEquals : empty\n    \n    ASIGNACION_AUX : id nt_pushPilaO\n                   | LISTA\n    \n    nt_pushPilaO : empty\n    \n    nt_pushPOper : empty\n    \n    nt_popPOper : empty\n    \n    empty :\n    '
    
_lr_action_items = {'and':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,199,200,203,204,205,207,208,211,212,214,215,216,217,235,236,239,244,248,249,251,253,255,258,259,286,301,302,303,304,305,306,313,314,315,316,317,318,327,328,329,330,331,332,333,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,-164,-164,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,269,-98,-104,-111,-128,-146,-117,-113,-118,-122,-147,-164,-164,-164,-164,-164,-164,-164,-116,-115,-123,-163,-121,-120,-108,-112,-106,-107,-105,-109,-110,-164,-139,-164,-164,-130,-140,]),'gt':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,200,203,204,205,207,208,211,212,214,215,216,217,248,249,251,253,255,258,259,286,313,314,315,316,317,318,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,238,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-128,-146,-117,-113,-118,-122,-147,-164,-116,-115,-123,-163,-121,-120,-164,-139,-164,-164,-130,-140,]),'false':([129,133,135,136,156,157,158,159,169,180,181,182,190,201,202,213,237,238,240,241,242,243,245,246,247,250,252,256,257,269,271,273,274,275,276,277,278,281,283,284,285,287,288,299,300,311,312,335,336,340,349,353,],[-164,160,-164,-164,160,-164,-100,-164,-164,-162,-164,-164,160,-99,-164,-164,-164,-164,-164,-164,-164,-164,-164,-136,-164,-164,-164,-164,-164,-164,-164,160,160,160,160,160,160,-100,-164,160,160,160,160,-164,-164,-164,-164,-164,-135,-100,-164,-164,]),'right_sb':([80,95,96,121,143,160,161,162,163,164,166,167,168,170,171,172,173,174,175,176,177,203,204,205,207,208,211,212,214,215,216,217,248,249,251,253,255,258,259,286,313,314,315,316,317,318,352,355,356,358,360,361,],[-164,122,-22,-164,186,-155,203,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-128,-146,-117,-113,-118,-122,-147,-164,-116,-115,-123,-163,-121,-120,-164,-139,-164,-164,-130,-140,]),'semicolon':([3,4,5,50,51,52,59,60,69,70,71,78,93,122,144,160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,186,199,200,203,204,205,207,208,211,212,214,215,216,217,222,226,229,233,235,236,239,244,248,249,251,253,255,258,259,260,261,262,265,266,270,272,286,301,302,303,304,305,306,313,314,315,316,317,318,325,326,327,328,329,330,331,332,333,334,345,352,355,356,358,360,361,],[-164,6,-5,57,-164,61,-21,-164,-164,-26,-23,-164,-27,-164,-19,-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,-164,-164,-164,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-164,-20,-164,267,-164,-98,-104,-111,-128,-146,-117,-113,-118,-122,-147,289,290,-158,-54,292,-97,-103,-164,-164,-164,-164,-164,-164,-164,-116,-115,-123,-163,-121,-120,-101,-102,-108,-112,-106,-107,-105,-109,-110,-164,350,-164,-139,-164,-164,-130,-140,]),'int':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,188,224,],[-164,-6,-164,-15,-164,-7,-13,-16,-164,-12,23,-2,23,-25,23,-18,-14,23,-8,-164,-11,-10,-9,-11,-56,-57,-24,-17,23,23,23,23,-164,-55,-48,-64,]),'float':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,188,224,],[-164,-6,-164,-15,-164,-7,-13,-16,-164,-12,24,-2,24,-25,24,-18,-14,24,-8,-164,-11,-10,-9,-11,-56,-57,-24,-17,24,24,24,24,-164,-55,-48,-64,]),'cteFloat':([129,133,135,136,156,157,158,159,165,169,178,180,181,182,190,201,202,209,210,213,218,219,237,238,240,241,242,243,245,246,247,250,252,256,257,269,271,273,274,275,276,277,278,281,283,284,285,287,288,299,300,311,312,335,336,340,349,353,],[-164,162,-164,-164,162,-164,-100,-164,-164,-164,-164,-162,-164,-164,162,-99,-164,162,-148,-164,-149,162,-164,-164,-164,-164,-164,-164,-164,-136,-164,-164,-164,-164,-164,-164,-164,162,162,162,162,162,162,-100,-164,162,162,162,162,-164,-164,-164,-164,-164,-135,-100,-164,-164,]),'left_sb':([53,59,63,72,79,106,164,],[-164,-21,73,-164,94,133,133,]),'multiply':([160,162,163,164,166,168,170,171,172,173,174,175,176,177,203,204,205,207,208,214,215,216,217,248,249,259,286,315,316,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-156,-154,-144,-124,-164,-145,-142,-164,-125,-141,-151,-153,-127,-161,-152,-150,257,-119,-128,-146,-147,-164,-123,-163,-164,-139,-164,-164,-130,-140,]),'ge':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,200,203,204,205,207,208,211,212,214,215,216,217,248,249,251,253,255,258,259,286,313,314,315,316,317,318,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,237,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-128,-146,-117,-113,-118,-122,-147,-164,-116,-115,-123,-163,-121,-120,-164,-139,-164,-164,-130,-140,]),'comma':([50,51,52,59,60,69,70,71,74,77,78,82,83,90,91,93,97,120,122,123,124,142,144,153,160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,185,186,194,199,200,203,204,205,207,208,211,212,214,215,216,217,225,226,235,236,239,244,248,249,251,253,255,258,259,270,272,279,282,286,301,302,303,304,305,306,307,308,313,314,315,316,317,318,325,326,327,328,329,330,331,332,333,337,339,346,347,351,352,355,356,357,358,359,360,361,],[58,-164,62,-21,-164,-164,-26,-23,-164,-164,-164,-62,99,119,-68,-27,-164,-164,-164,-63,-60,-66,-19,-164,-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,-164,-164,-61,-164,-164,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-67,-20,-164,-98,-104,-111,-128,-146,-117,-113,-118,-122,-147,-97,-103,-164,311,-164,-164,-164,-164,-164,-164,-164,-137,-95,-116,-115,-123,-163,-121,-120,-101,-102,-108,-112,-106,-107,-105,-109,-110,-164,349,-164,-133,-96,-164,-139,-164,-164,-164,-134,-130,-140,]),'cread':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,184,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[-15,-13,-16,-12,-14,-24,-17,-164,101,-36,-37,-164,-71,-72,-69,-38,-73,-39,-74,-70,-34,101,-33,-164,-75,-35,-164,-164,-164,-44,-164,-45,-45,-164,-49,-43,101,-50,101,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'right_par':([74,77,82,83,90,91,97,120,123,124,142,153,154,155,159,160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,179,180,185,194,195,196,197,198,199,200,202,203,204,205,207,208,211,212,214,215,216,217,220,221,223,225,235,236,239,244,245,246,247,248,249,251,253,254,255,258,259,263,270,272,279,280,281,282,283,286,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,325,326,327,328,329,330,331,332,333,337,338,339,340,346,347,348,351,352,355,356,357,358,359,360,361,],[-164,-164,-62,98,118,-68,-164,-164,-63,-60,-66,-164,-164,-164,-164,-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,-164,-162,-164,-61,233,-89,234,-82,-164,-164,-164,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,260,-91,-164,-67,-164,-98,-104,-111,-164,-136,-164,-128,-146,-117,-113,286,-118,-122,-147,291,-97,-103,-164,-164,-94,-93,-164,-164,-164,-164,-164,-164,-164,-164,-137,-95,334,-138,-164,-116,-115,-123,-163,-121,-120,-101,-102,-108,-112,-106,-107,-105,-109,-110,-164,-164,-131,-132,-164,-133,352,-96,-164,-139,-164,-164,-164,-134,-130,-140,]),'cteString':([129,133,135,136,156,157,158,159,169,180,181,182,190,201,202,213,237,238,240,241,242,243,245,246,247,250,252,256,257,269,271,273,274,275,276,277,278,281,283,284,285,287,288,299,300,311,312,335,336,340,349,353,],[-164,168,-164,-164,168,-164,-100,-164,-164,-162,-164,-164,168,-99,-164,-164,-164,-164,-164,-164,-164,-164,-164,-136,-164,-164,-164,-164,-164,-164,-164,168,168,168,168,168,168,-100,-164,168,168,168,168,-164,-164,-164,-164,-164,-135,-100,-164,-164,]),'id':([1,9,12,13,15,22,23,24,25,28,31,32,34,35,36,37,38,39,40,44,47,48,49,57,58,61,62,76,81,86,87,88,89,92,100,102,104,105,109,110,111,112,113,116,117,126,127,128,129,130,133,135,136,139,140,141,147,148,150,151,152,156,157,158,159,169,180,181,182,184,189,190,191,192,193,201,202,213,227,228,230,231,232,237,238,240,241,242,243,245,246,247,250,252,256,257,264,267,268,269,271,273,274,275,276,277,278,281,283,284,285,287,288,289,290,292,293,294,295,298,299,300,311,312,319,320,321,335,336,340,341,342,343,344,349,350,353,354,355,],[3,-15,-13,-16,-12,-14,-164,-164,-164,-164,-164,-164,51,53,-28,-32,-29,54,-58,-30,-31,-65,56,-24,69,-17,72,-164,97,106,-36,-37,-164,120,-71,-72,-69,-38,-73,-39,-74,-70,-34,106,-33,-164,153,154,-164,-75,164,-164,-164,-35,-164,185,-164,-164,-44,-164,-45,164,-164,-100,-164,-164,-162,-164,-164,-45,-164,164,-49,-43,106,-99,-164,-164,-50,106,-41,-46,-47,-164,-164,-164,-164,-164,-164,-164,-136,-164,-164,-164,-164,-164,-42,-88,-164,-164,-164,164,164,164,164,164,164,-100,-164,164,164,164,164,-90,-157,-53,-164,-78,-77,-79,-164,-164,-164,-164,-164,-76,-83,-164,-135,-100,-85,-87,-81,-80,-164,-164,-164,-92,-139,]),'if':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,184,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[-15,-13,-16,-12,-14,-24,-17,-164,103,-36,-37,-164,-71,-72,-69,-38,-73,-39,-74,-70,-34,103,-33,-164,-75,-35,-164,-164,-164,-44,-164,-45,-45,-164,-49,-43,103,-50,103,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'le':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,200,203,204,205,207,208,211,212,214,215,216,217,248,249,251,253,255,258,259,286,313,314,315,316,317,318,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,242,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-128,-146,-117,-113,-118,-122,-147,-164,-116,-115,-123,-163,-121,-120,-164,-139,-164,-164,-130,-140,]),'divide':([160,162,163,164,166,168,170,171,172,173,174,175,176,177,203,204,205,207,208,214,215,216,217,248,249,259,286,315,316,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-156,-154,-144,-124,-164,-145,-142,-164,-125,-141,-151,-153,-127,-161,-152,-150,256,-119,-128,-146,-147,-164,-123,-163,-164,-139,-164,-164,-130,-140,]),'right_cb':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,130,139,140,147,148,150,151,183,184,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[-15,-13,-16,-12,-14,-24,-17,-164,-164,-36,-37,117,-71,-72,-69,-38,-73,-39,-74,-70,-34,-164,-33,-75,-35,-164,188,-40,-44,-164,224,-45,-164,-49,-43,-164,-50,-164,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'ne':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,200,203,204,205,207,208,211,212,214,215,216,217,248,249,251,253,255,258,259,286,313,314,315,316,317,318,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,240,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-128,-146,-117,-113,-118,-122,-147,-164,-116,-115,-123,-163,-121,-120,-164,-139,-164,-164,-130,-140,]),'lt':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,200,203,204,205,207,208,211,212,214,215,216,217,248,249,251,253,255,258,259,286,313,314,315,316,317,318,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,241,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-128,-146,-117,-113,-118,-122,-147,-164,-116,-115,-123,-163,-121,-120,-164,-139,-164,-164,-130,-140,]),'program':([0,],[1,]),'bool':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,188,224,],[-164,-6,-164,-15,-164,-7,-13,-16,-164,-12,28,-2,28,-25,28,-18,-14,28,-8,-164,-11,-10,-9,-11,-56,-57,-24,-17,28,28,28,28,-164,-55,-48,-64,]),'cwrite':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,184,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[-15,-13,-16,-12,-14,-24,-17,-164,107,-36,-37,-164,-71,-72,-69,-38,-73,-39,-74,-70,-34,107,-33,-164,-75,-35,-164,-164,-164,-44,-164,-45,-45,-164,-49,-43,107,-50,107,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'var':([6,9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,184,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[10,-15,-13,-16,10,-14,-24,-17,10,-164,-36,-37,10,-71,-72,-69,-38,-73,-39,-74,-70,-34,-164,-33,10,-75,-35,10,10,10,-44,-164,-45,-45,-164,-49,-43,-164,-50,-164,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'main':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,43,45,46,57,61,125,145,188,224,],[-164,-6,-164,-15,-7,-13,-16,-12,-164,-2,-14,-164,-8,-164,-11,-10,-9,-2,55,-56,-57,-24,-17,-164,-55,-48,-64,]),'$end':([2,75,84,85,117,],[0,-164,-4,-1,-33,]),'return':([9,12,13,15,22,57,61,100,102,104,109,111,112,117,126,130,146,147,148,149,150,151,152,184,187,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[-15,-13,-16,-12,-14,-24,-17,-71,-72,-69,-73,-74,-70,-33,-164,-75,-51,-164,-40,190,-44,-164,-45,-45,190,-164,-49,-43,-164,-50,-164,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'string':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,188,224,],[-164,-6,-164,-15,-164,-7,-13,-16,-164,-12,31,-2,31,-25,31,-18,-14,31,-8,-164,-11,-10,-9,-11,-56,-57,-24,-17,31,31,31,31,-164,-55,-48,-64,]),'et':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,200,203,204,205,207,208,211,212,214,215,216,217,248,249,251,253,255,258,259,286,313,314,315,316,317,318,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,243,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,-128,-146,-117,-113,-118,-122,-147,-164,-116,-115,-123,-163,-121,-120,-164,-139,-164,-164,-130,-140,]),'void':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,45,46,57,61,125,145,188,224,],[-164,-6,-164,-15,-7,-13,-16,-12,32,-2,-14,32,-8,-164,-11,-10,-9,-11,-56,-57,-24,-17,-164,-55,-48,-64,]),'equals':([106,108,115,132,134,203,],[-164,136,-160,-159,-161,-141,]),'else':([117,268,],[-33,297,]),'elseif':([117,268,],[-33,296,]),'left_par':([54,56,64,65,68,101,103,106,107,114,129,131,133,134,135,136,137,138,156,157,158,159,164,169,180,181,182,190,201,202,206,208,213,237,238,240,241,242,243,245,246,247,250,252,256,257,269,271,273,274,275,276,277,278,281,283,284,285,287,288,296,299,300,311,312,322,323,335,336,340,349,353,],[-164,-164,74,-59,77,128,129,-164,135,-164,-164,159,169,-129,-164,-164,-86,182,169,-164,-100,-164,-164,-164,-162,-164,-164,169,-99,-164,247,-129,-164,-164,-164,-164,-164,-164,-164,-164,-136,-164,-164,-164,-164,-164,-164,-164,169,169,169,169,169,169,-100,-164,169,169,169,169,-164,-164,-164,-164,-164,129,-84,-164,-135,-100,-164,-164,]),'not':([129,135,136,159,169,180,181,182,202,213,245,246,247,269,271,283,299,300,311,312,335,336,349,353,],[157,157,-164,-164,-164,-162,157,157,-164,157,157,-136,-164,-164,-164,-164,157,157,-164,157,157,-135,-164,157,]),'true':([129,133,135,136,156,157,158,159,169,180,181,182,190,201,202,213,237,238,240,241,242,243,245,246,247,250,252,256,257,269,271,273,274,275,276,277,278,281,283,284,285,287,288,299,300,311,312,335,336,340,349,353,],[-164,170,-164,-164,170,-164,-100,-164,-164,-162,-164,-164,170,-99,-164,-164,-164,-164,-164,-164,-164,-164,-164,-136,-164,-164,-164,-164,-164,-164,-164,170,170,170,170,170,170,-100,-164,170,170,170,170,-164,-164,-164,-164,-164,-135,-100,-164,-164,]),'left_cb':([17,55,66,67,98,118,234,291,297,323,324,],[-2,-164,76,-3,126,140,76,76,-164,-84,76,]),'cteInt':([73,94,129,133,135,136,156,157,158,159,165,169,178,180,181,182,190,201,202,209,210,213,218,219,237,238,240,241,242,243,245,246,247,250,252,256,257,269,271,273,274,275,276,277,278,281,283,284,285,287,288,299,300,311,312,335,336,340,349,353,],[80,121,-164,173,-164,-164,173,-164,-100,-164,-164,-164,-164,-162,-164,-164,173,-99,-164,173,-148,-164,-149,173,-164,-164,-164,-164,-164,-164,-164,-136,-164,-164,-164,-164,-164,-164,-164,173,173,173,173,173,173,-100,-164,173,173,173,173,-164,-164,-164,-164,-164,-135,-100,-164,-164,]),'list':([6,9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,184,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[14,-15,-13,-16,14,-14,-24,-17,14,-164,-36,-37,14,-71,-72,-69,-38,-73,-39,-74,-70,-34,-164,-33,14,-75,-35,14,14,14,-44,-164,-45,-45,-164,-49,-43,-164,-50,-164,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'or':([160,162,163,164,166,167,168,170,171,172,173,174,175,176,177,199,200,203,204,205,207,208,211,212,214,215,216,217,235,236,239,244,248,249,251,253,255,258,259,286,301,302,303,304,305,306,313,314,315,316,317,318,327,328,329,330,331,332,333,352,355,356,358,360,361,],[-155,-164,-143,-164,-126,-164,-156,-154,-144,-124,-164,-145,-142,-164,-125,-164,-164,-141,-151,-153,-127,-161,-114,-164,-152,-150,-164,-119,271,-98,-104,-111,-128,-146,-117,-113,-118,-122,-147,-164,-164,-164,-164,-164,-164,-164,-116,-115,-123,-163,-121,-120,-108,-112,-106,-107,-105,-109,-110,-164,-139,-164,-164,-130,-140,]),'while':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,184,189,191,192,193,227,228,230,231,232,264,267,268,289,290,292,293,294,295,298,319,320,321,341,342,343,344,350,354,355,],[-15,-13,-16,-12,-14,-24,-17,-164,114,-36,-37,-164,-71,-72,-69,-38,-73,-39,-74,-70,-34,114,-33,-164,-75,-35,-164,-164,-164,-44,-164,-45,-45,-164,-49,-43,114,-50,114,-41,-46,-47,-42,-88,-164,-90,-157,-53,-164,-78,-77,-79,-164,-76,-83,-85,-87,-81,-80,-164,-92,-139,]),'plus':([129,133,135,136,156,157,158,159,160,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,180,181,182,190,201,202,203,204,205,207,208,211,212,213,214,215,216,217,237,238,240,241,242,243,245,246,247,248,249,250,252,255,256,257,258,259,269,271,273,274,275,276,277,278,281,283,284,285,286,287,288,299,300,311,312,315,316,317,318,335,336,340,349,352,353,355,356,358,360,361,],[-164,165,-164,-164,165,-164,-100,-164,-155,-164,-143,-164,-126,-164,-156,-164,-154,-144,-124,-164,-145,-142,-164,-125,-162,-164,-164,165,-99,-164,-141,-151,-153,-127,-161,-114,252,-164,-152,-150,-164,-119,-164,-164,-164,-164,-164,-164,-164,-136,-164,-128,-146,-164,-164,-118,-164,-164,-122,-147,-164,-164,165,165,165,165,165,165,-100,-164,165,165,-164,165,165,-164,-164,-164,-164,-123,-163,-121,-120,-164,-135,-100,-164,-164,-164,-139,-164,-164,-130,-140,]),'minus':([129,133,135,136,156,157,158,159,160,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,180,181,182,190,201,202,203,204,205,207,208,211,212,213,214,215,216,217,237,238,240,241,242,243,245,246,247,248,249,250,252,255,256,257,258,259,269,271,273,274,275,276,277,278,281,283,284,285,286,287,288,299,300,311,312,315,316,317,318,335,336,340,349,352,353,355,356,358,360,361,],[-164,178,-164,-164,178,-164,-100,-164,-155,-164,-143,-164,-126,-164,-156,-164,-154,-144,-124,-164,-145,-142,-164,-125,-162,-164,-164,178,-99,-164,-141,-151,-153,-127,-161,-114,250,-164,-152,-150,-164,-119,-164,-164,-164,-164,-164,-164,-164,-136,-164,-128,-146,-164,-164,-118,-164,-164,-122,-147,-164,-164,178,178,178,178,178,178,-100,-164,178,178,-164,178,178,-164,-164,-164,-164,-123,-163,-121,-120,-164,-135,-100,-164,-164,-164,-139,-164,-164,-130,-140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'nt_asignarRet':([358,],[360,]),'nt_cambioFuncActual':([25,],[39,]),'CICLO':([86,116,193,228,],[100,100,100,100,]),'VARS_LIST':([6,15,76,89,126,140,147,148,],[9,9,9,9,9,9,9,9,]),'TERMINO_AUX':([216,],[255,]),'CUERPO':([66,234,291,324,],[75,268,319,344,]),'EXP':([133,156,190,273,274,275,276,277,278,284,285,],[161,200,229,301,302,303,304,305,306,313,314,]),'CUERPO_AUX':([76,],[89,]),'nt_hacerVoid':([32,],[49,]),'LECTURA':([86,116,193,228,],[102,102,102,102,]),'ESCRITURA':([86,116,193,228,],[109,109,109,109,]),'nt_checarRelop':([301,302,303,304,305,306,],[327,329,330,331,332,333,]),'VOIDFUNC_PARA':([77,],[90,]),'nt_pushLoop':([319,],[341,]),'VOIDFUNC':([16,26,],[29,29,]),'EXPRESION_B':([235,],[270,]),'LLAMADA':([86,116,193,228,],[111,111,111,111,]),'nt_checar_multis':([176,],[216,]),'CONDICION':([86,116,193,228,],[112,112,112,112,]),'nt_pushGoSub':([350,356,],[354,358,]),'RETORNO':([149,187,],[191,227,]),'STRINGS':([133,156,190,273,274,275,276,277,278,284,285,287,288,],[171,171,171,171,171,171,171,171,171,171,171,171,171,]),'nt_agregarId':([51,53,69,72,],[60,63,78,79,]),'CUERPORETORNO_AUX':([126,],[147,]),'nt_pushPilaO':([106,164,],[132,207,]),'PROGRAMA':([0,],[2,]),'nt_sigMas':([165,],[209,]),'nt_cambiarScope':([8,26,55,],[16,43,67,]),'LISTA':([86,116,133,156,190,193,228,273,274,275,276,277,278,284,285,287,288,],[115,115,177,177,177,115,115,177,177,177,177,177,177,177,177,177,177,]),'FUNC_PARA':([74,],[83,]),'EXPRESIONLOGICA':([156,],[199,]),'nt_pushEndsub':([29,125,],[45,145,]),'PROGRAMA_VARS':([6,],[8,]),'nt_pushFloat':([162,],[204,]),'nt_funcInicio':([151,189,],[193,228,]),'nt_leer':([154,],[195,]),'CUERPOFUNC_AUX':([126,140,147,],[148,148,148,]),'CONDICION_AUX':([103,322,],[130,343,]),'nt_saltoLoop':([114,],[138,]),'CUERPOFUNC_ESTATUTO':([193,228,],[230,264,]),'nt_checaEquals':([222,],[261,]),'ASIGNACION':([86,116,193,228,],[104,104,104,104,]),'VARS_AUX':([6,76,89,126,140,147,148,],[15,15,15,15,15,15,15,]),'VARS_LIST_AUX':([35,],[52,]),'nt_pushElse':([296,297,],[322,324,]),'PROGRAMA_FUNC_AUX':([16,26,],[27,41,]),'nt_popPOper':([286,334,352,],[315,345,356,]),'CUERPOFUNC_VARS':([126,140,147,148,],[151,151,151,189,]),'ASIGNACION_AUX':([86,116,193,228,],[108,108,108,108,]),'FACTOR_AUX':([133,156,190,273,274,275,276,277,278,284,285,287,288,],[166,166,166,166,166,166,166,166,166,166,166,166,166,]),'NUMERICA_AUX':([133,156,190,209,219,273,274,275,276,277,278,284,285,287,288,],[174,174,174,249,259,174,174,174,174,174,174,174,174,174,174,]),'nt_startERA':([202,283,],[245,312,]),'nt_sigMenos':([178,],[219,]),'ELSE':([268,],[295,]),'CUERPORETORNO':([98,],[125,]),'FUNC':([16,26,],[33,33,]),'CUERPO_ESTATUTO':([86,116,],[113,139,]),'nt_hacerVar':([10,],[18,]),'CONSTANTE':([133,156,190,273,274,275,276,277,278,284,285,287,288,],[172,172,172,172,172,172,172,172,172,172,172,172,172,]),'nt_verificaFuncId':([106,164,],[131,206,]),'nt_verificaUltimo':([280,338,],[309,348,]),'NUMERICA':([133,156,190,273,274,275,276,277,278,284,285,287,288,],[175,175,175,175,175,175,175,175,175,175,175,175,175,]),'FACTOR':([133,156,190,273,274,275,276,277,278,284,285,287,288,],[176,176,176,176,176,176,176,176,176,176,176,176,176,]),'nt_checar_sumas':([167,],[212,]),'EXPRESION':([129,135,181,182,213,245,299,300,312,335,353,],[155,179,222,223,254,279,325,326,337,346,357,]),'EXPRESION_NOT':([129,135,181,182,213,245,299,300,312,335,353,],[156,156,156,156,156,156,156,156,156,156,156,]),'ELSE_ELIF':([268,],[293,]),'nt_agregarDicVar':([60,78,122,186,],[70,93,144,226,]),'BOOLEANA':([133,156,190,273,274,275,276,277,278,284,285,287,288,],[163,163,163,163,163,163,163,163,163,163,163,163,163,]),'nt_pushJmpMain':([3,],[4,]),'CUERPORETORNO_CF_AUX':([126,147,],[149,187,]),'CUERPOFUNC':([126,140,147,],[146,183,146,]),'nt_checaAndOrNot':([199,],[235,]),'PROGRAMA_FUNC':([16,],[26,]),'TERMINO':([133,156,190,273,274,275,276,277,278,284,285,287,288,],[167,167,167,167,167,167,167,167,167,167,167,317,318,]),'nt_pushInt':([173,],[215,]),'EXP_AUX':([212,],[253,]),'empty':([3,6,8,10,14,16,23,24,25,26,28,29,31,32,51,53,54,55,56,60,69,72,74,75,76,77,78,80,86,89,97,106,114,116,120,121,122,125,126,129,135,136,140,147,148,151,153,154,155,157,159,162,164,165,167,169,173,176,178,179,181,182,185,186,189,193,199,200,202,212,213,216,222,223,228,229,235,237,238,240,241,242,243,245,247,250,252,256,257,268,269,271,279,280,283,286,293,296,297,299,300,301,302,303,304,305,306,311,312,319,334,335,337,338,346,349,350,352,353,356,357,358,],[5,11,17,19,21,30,37,37,40,42,37,46,37,48,59,59,65,17,65,71,59,59,82,84,88,91,71,96,110,88,123,134,137,110,123,96,71,46,152,158,158,180,184,152,184,192,123,196,198,180,180,205,208,210,211,180,214,217,218,221,158,158,123,71,192,232,236,244,246,251,158,258,262,198,232,265,272,180,180,180,180,180,180,281,180,180,180,180,180,298,180,180,307,310,246,316,321,323,323,158,158,328,328,328,328,328,328,336,340,342,316,158,307,310,307,336,355,316,158,355,307,361,]),'nt_pushSalto':([293,],[320,]),'nt_verifyArgType':([279,337,346,357,],[308,347,351,359,]),'VARS_VAR_AUX':([34,],[50,]),'VARS_LIST_VAR':([6,15,76,89,126,140,147,148,],[12,22,12,12,12,12,12,12,]),'nt_agregarIdFunc':([54,56,],[64,68,]),'VARS_VAR':([6,15,76,89,126,140,147,148,],[13,13,13,13,13,13,13,13,]),'CUERPO_VARS':([76,89,],[86,116,]),'nt_hacerLista':([14,],[20,]),'nt_escribir':([179,],[220,]),'LLAMADA_EXPRESION_AUX':([245,],[282,]),'nt_agregarCteLista':([80,121,],[95,143,]),'nt_paramPP':([311,349,],[335,353,]),'ELIF':([268,],[294,]),'LLAMADA_EXPRESION':([245,],[280,]),'nt_ambienteMain':([55,],[66,]),'VARS':([6,76,89,126,140,147,148,],[7,87,87,150,150,150,150,]),'nt_checarBool':([155,223,],[197,263,]),'LLAMADA_F':([206,],[248,]),'TIPO':([16,18,20,26,74,77,99,119,],[25,34,35,25,81,92,127,141,]),'ESTATUTO':([86,116,193,228,],[105,105,231,231,]),'LLAMADAF_AUX2':([312,],[339,]),'nt_cambioTipoActual':([23,24,28,31,],[36,38,44,47,]),'nt_agregarParametro':([97,120,153,185,],[124,142,194,225,]),'nt_checaRet':([229,],[266,]),'nt_pushPOper':([136,157,159,169,237,238,240,241,242,243,247,250,252,256,257,269,271,],[181,201,202,213,273,274,275,276,277,278,283,284,285,287,288,299,300,]),'LLAMADAF_AUX':([312,],[338,]),'EXPRESIONLOGICA_AUX':([200,],[239,]),'nt_endQuad':([75,],[85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO nt_endQuad','PROGRAMA',12,'p_PROGRAMA','CSP_yacc.py',66),
  ('nt_cambiarScope -> empty','nt_cambiarScope',1,'p_nt_cambiarScope','CSP_yacc.py',107),
  ('nt_ambienteMain -> nt_cambiarScope','nt_ambienteMain',1,'p_nt_ambienteMain','CSP_yacc.py',117),
  ('nt_endQuad -> empty','nt_endQuad',1,'p_nt_endQuad','CSP_yacc.py',126),
  ('nt_pushJmpMain -> empty','nt_pushJmpMain',1,'p_nt_pushJmpMain','CSP_yacc.py',136),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',148),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',149),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',154),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',155),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',160),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',161),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',166),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',171),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',172),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',177),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',178),
  ('VARS_LIST -> list nt_hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',183),
  ('nt_hacerLista -> empty','nt_hacerLista',1,'p_nt_hacerLista','CSP_yacc.py',188),
  ('VARS_LIST_AUX -> id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',195),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',196),
  ('nt_agregarId -> empty','nt_agregarId',1,'p_nt_agregarId','CSP_yacc.py',201),
  ('nt_agregarCteLista -> empty','nt_agregarCteLista',1,'p_nt_agregarCteLista','CSP_yacc.py',208),
  ('nt_agregarDicVar -> empty','nt_agregarDicVar',1,'p_nt_agregarDicVar','CSP_yacc.py',215),
  ('VARS_VAR -> var nt_hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',239),
  ('nt_hacerVar -> empty','nt_hacerVar',1,'p_nt_hacerVar','CSP_yacc.py',244),
  ('VARS_VAR_AUX -> id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',251),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',252),
  ('TIPO -> int nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',257),
  ('TIPO -> float nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',258),
  ('TIPO -> bool nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',259),
  ('TIPO -> string nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',260),
  ('nt_cambioTipoActual -> empty','nt_cambioTipoActual',1,'p_nt_cambioTipoActual','CSP_yacc.py',265),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',272),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',277),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',278),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',283),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',284),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',289),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',290),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',295),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',300),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',4,'p_CUERPOFUNC_AUX','CSP_yacc.py',301),
  ('nt_funcInicio -> empty','nt_funcInicio',1,'p_nt_funcInicio','CSP_yacc.py',305),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',314),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',315),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',320),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',321),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',327),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',332),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',333),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',338),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',339),
  ('RETORNO -> return EXP nt_checaRet semicolon','RETORNO',4,'p_RETORNO','CSP_yacc.py',346),
  ('nt_checaRet -> empty','nt_checaRet',1,'p_nt_checaRet','CSP_yacc.py',351),
  ('FUNC -> TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub','FUNC',9,'p_FUNC','CSP_yacc.py',385),
  ('FUNC -> VOIDFUNC nt_pushEndsub','FUNC',2,'p_FUNC','CSP_yacc.py',386),
  ('nt_pushEndsub -> empty','nt_pushEndsub',1,'p_nt_pushEndsub','CSP_yacc.py',424),
  ('nt_cambioFuncActual -> empty','nt_cambioFuncActual',1,'p_nt_cambioFuncActual','CSP_yacc.py',434),
  ('nt_agregarIdFunc -> empty','nt_agregarIdFunc',1,'p_nt_agregarIdFunc','CSP_yacc.py',445),
  ('FUNC_PARA -> TIPO id nt_agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',471),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id nt_agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',472),
  ('FUNC_PARA -> empty','FUNC_PARA',1,'p_FUNC_PARA','CSP_yacc.py',473),
  ('nt_agregarParametro -> empty','nt_agregarParametro',1,'p_nt_agregarParametro','CSP_yacc.py',485),
  ('VOIDFUNC -> void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',504),
  ('nt_hacerVoid -> empty','nt_hacerVoid',1,'p_nt_hacerVoid','CSP_yacc.py',509),
  ('VOIDFUNC_PARA -> TIPO id nt_agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',517),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id nt_agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',518),
  ('VOIDFUNC_PARA -> empty','VOIDFUNC_PARA',1,'p_VOIDFUNC_PARA','CSP_yacc.py',519),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',524),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',525),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',526),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',527),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',528),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',529),
  ('CONDICION -> if CONDICION_AUX','CONDICION',2,'p_CONDICION','CSP_yacc.py',534),
  ('CONDICION_AUX -> left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto','CONDICION_AUX',7,'p_CONDICION_AUX','CSP_yacc.py',539),
  ('ELSE_ELIF -> ELSE','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',543),
  ('ELSE_ELIF -> ELIF','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',544),
  ('ELSE_ELIF -> empty','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',545),
  ('ELSE -> else nt_pushElse CUERPO','ELSE',3,'p_ELSE','CSP_yacc.py',550),
  ('ELIF -> elseif nt_pushElse CONDICION_AUX','ELIF',3,'p_ELIF','CSP_yacc.py',555),
  ('nt_checarBool -> empty','nt_checarBool',1,'p_nt_checarBool','CSP_yacc.py',560),
  ('nt_pushSalto -> empty','nt_pushSalto',1,'p_nt_pushSalto','CSP_yacc.py',584),
  ('nt_pushElse -> empty','nt_pushElse',1,'p_nt_pushElse','CSP_yacc.py',596),
  ('CICLO -> while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop','CICLO',8,'p_CICLO','CSP_yacc.py',613),
  ('nt_saltoLoop -> empty','nt_saltoLoop',1,'p_nt_saltoLoop','CSP_yacc.py',618),
  ('nt_pushLoop -> empty','nt_pushLoop',1,'p_nt_pushLoop','CSP_yacc.py',627),
  ('LECTURA -> cread left_par id nt_leer right_par semicolon','LECTURA',6,'p_LECTURA','CSP_yacc.py',641),
  ('nt_leer -> empty','nt_leer',1,'p_nt_leer','CSP_yacc.py',647),
  ('ESCRITURA -> cwrite left_par EXPRESION nt_escribir right_par semicolon','ESCRITURA',6,'p_ESCRITURA','CSP_yacc.py',671),
  ('nt_escribir -> empty','nt_escribir',1,'p_nt_escribir','CSP_yacc.py',676),
  ('LLAMADA -> id nt_verificaFuncId left_par nt_pushPOper nt_startERA LLAMADA_EXPRESION nt_verificaUltimo right_par nt_popPOper semicolon nt_pushGoSub','LLAMADA',11,'p_LLAMADA','CSP_yacc.py',692),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION_AUX','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',697),
  ('LLAMADA_EXPRESION -> empty','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',698),
  ('LLAMADA_EXPRESION_AUX -> EXPRESION nt_verifyArgType','LLAMADA_EXPRESION_AUX',2,'p_LLAMADA_EXPRESION_AUX','CSP_yacc.py',703),
  ('LLAMADA_EXPRESION_AUX -> LLAMADA_EXPRESION_AUX comma nt_paramPP EXPRESION nt_verifyArgType','LLAMADA_EXPRESION_AUX',5,'p_LLAMADA_EXPRESION_AUX','CSP_yacc.py',704),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B','EXPRESION',4,'p_EXPRESION','CSP_yacc.py',709),
  ('nt_checaAndOrNot -> empty','nt_checaAndOrNot',1,'p_nt_checaAndOrNot','CSP_yacc.py',714),
  ('EXPRESION_NOT -> not nt_pushPOper','EXPRESION_NOT',2,'p_EXPRESION_NOT','CSP_yacc.py',771),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',772),
  ('EXPRESION_B -> and nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',777),
  ('EXPRESION_B -> or nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',778),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',779),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',784),
  ('EXPRESIONLOGICA_AUX -> lt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',789),
  ('EXPRESIONLOGICA_AUX -> gt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',790),
  ('EXPRESIONLOGICA_AUX -> ne nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',791),
  ('EXPRESIONLOGICA_AUX -> ge nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',792),
  ('EXPRESIONLOGICA_AUX -> le nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',793),
  ('EXPRESIONLOGICA_AUX -> et nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',794),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',795),
  ('nt_checarRelop -> empty','nt_checarRelop',1,'p_nt_checarRelop','CSP_yacc.py',800),
  ('EXP -> TERMINO nt_checar_sumas EXP_AUX','EXP',3,'p_EXP','CSP_yacc.py',837),
  ('nt_checar_sumas -> empty','nt_checar_sumas',1,'p_nt_checar_sumas','CSP_yacc.py',842),
  ('EXP_AUX -> plus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',881),
  ('EXP_AUX -> minus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',882),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',883),
  ('TERMINO -> FACTOR nt_checar_multis TERMINO_AUX','TERMINO',3,'p_TERMINO','CSP_yacc.py',889),
  ('nt_checar_multis -> empty','nt_checar_multis',1,'p_nt_checar_multis','CSP_yacc.py',894),
  ('TERMINO_AUX -> multiply nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',932),
  ('TERMINO_AUX -> divide nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',933),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',934),
  ('FACTOR -> left_par nt_pushPOper EXPRESION right_par nt_popPOper','FACTOR',5,'p_FACTOR','CSP_yacc.py',939),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',940),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',941),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',942),
  ('FACTOR_AUX -> id nt_pushPilaO','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',947),
  ('FACTOR_AUX -> id nt_verificaFuncId LLAMADA_F','FACTOR_AUX',3,'p_FACTOR_AUX','CSP_yacc.py',948),
  ('nt_verificaFuncId -> empty','nt_verificaFuncId',1,'p_nt_verificaFuncId','CSP_yacc.py',953),
  ('LLAMADA_F -> left_par nt_pushPOper nt_startERA LLAMADAF_AUX nt_verificaUltimo right_par nt_popPOper nt_pushGoSub nt_asignarRet','LLAMADA_F',9,'p_LLAMADAF','CSP_yacc.py',975),
  ('LLAMADAF_AUX -> LLAMADAF_AUX2','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',980),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',981),
  ('LLAMADAF_AUX2 -> EXPRESION nt_verifyArgType','LLAMADAF_AUX2',2,'p_LLAMADAF_AUX2','CSP_yacc.py',986),
  ('LLAMADAF_AUX2 -> LLAMADAF_AUX2 comma nt_paramPP EXPRESION nt_verifyArgType','LLAMADAF_AUX2',5,'p_LLAMADAF_AUX2','CSP_yacc.py',987),
  ('nt_paramPP -> empty','nt_paramPP',1,'p_nt_paramPP','CSP_yacc.py',992),
  ('nt_startERA -> empty','nt_startERA',1,'p_nt_startERA','CSP_yacc.py',999),
  ('nt_verifyArgType -> empty','nt_verifyArgType',1,'p_nt_verifyArgType','CSP_yacc.py',1012),
  ('nt_verificaUltimo -> empty','nt_verificaUltimo',1,'p_nt_verificaUltimo','CSP_yacc.py',1039),
  ('nt_pushGoSub -> empty','nt_pushGoSub',1,'p_nt_pushGoSub','CSP_yacc.py',1055),
  ('nt_asignarRet -> empty','nt_asignarRet',1,'p_nt_asignarRet','CSP_yacc.py',1068),
  ('LISTA -> id left_sb EXP right_sb','LISTA',4,'p_LISTA','CSP_yacc.py',1095),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',1100),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',1101),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',1102),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',1108),
  ('NUMERICA -> plus nt_sigMas NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',1109),
  ('NUMERICA -> minus nt_sigMenos NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',1110),
  ('nt_sigMas -> empty','nt_sigMas',1,'p_nt_sigMas','CSP_yacc.py',1115),
  ('nt_sigMenos -> empty','nt_sigMenos',1,'p_nt_sigMenos','CSP_yacc.py',1122),
  ('NUMERICA_AUX -> cteInt nt_pushInt','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',1129),
  ('NUMERICA_AUX -> cteFloat nt_pushFloat','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',1130),
  ('nt_pushInt -> empty','nt_pushInt',1,'p_nt_pushInt','CSP_yacc.py',1136),
  ('nt_pushFloat -> empty','nt_pushFloat',1,'p_nt_pushFloat','CSP_yacc.py',1164),
  ('BOOLEANA -> true','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',1192),
  ('BOOLEANA -> false','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',1193),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',1210),
  ('ASIGNACION -> ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon','ASIGNACION',6,'p_ASIGNACION','CSP_yacc.py',1227),
  ('nt_checaEquals -> empty','nt_checaEquals',1,'p_nt_checaEquals','CSP_yacc.py',1232),
  ('ASIGNACION_AUX -> id nt_pushPilaO','ASIGNACION_AUX',2,'p_ASIGNACION_AUX','CSP_yacc.py',1259),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',1260),
  ('nt_pushPilaO -> empty','nt_pushPilaO',1,'p_nt_pushPilaO','CSP_yacc.py',1265),
  ('nt_pushPOper -> empty','nt_pushPOper',1,'p_nt_pushPOper','CSP_yacc.py',1285),
  ('nt_popPOper -> empty','nt_popPOper',1,'p_nt_popPOper','CSP_yacc.py',1294),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',1301),
]
