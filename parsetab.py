
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et false float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string true var void while\n    PROGRAMA : program id semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO\n    \n    nt_cambiarScope : empty\n    \n    nt_ambienteMain : nt_cambiarScope\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list nt_hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    nt_hacerLista : empty\n    \n    VARS_LIST_AUX : id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n                  | VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n    \n    nt_agregarId : empty\n    \n    nt_agregarCteLista : empty\n    \n    nt_agregarDicVar : empty\n    \n    VARS_VAR : var nt_hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    nt_hacerVar : empty\n    \n    VARS_VAR_AUX : id nt_agregarId nt_agregarDicVar\n                 | VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar\n    \n    TIPO : int nt_cambioTipoActual\n         | float nt_cambioTipoActual\n         | bool nt_cambioTipoActual\n         | string nt_cambioTipoActual\n    \n    nt_cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n    \n    nt_funcInicio : empty\n    \n    CUERPOFUNC_VARS : VARS \n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP semicolon\n    \n    FUNC : TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub\n         | VOIDFUNC nt_pushEndsub\n    \n    nt_pushEndsub : empty\n    \n    test_print : empty\n    \n    nt_cambioFuncActual : empty\n    \n    nt_agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id nt_agregarParametro\n              | FUNC_PARA comma TIPO id nt_agregarParametro\n              | empty\n    \n    nt_agregarParametro : empty\n    \n    VOIDFUNC : void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    nt_hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id nt_agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id nt_agregarParametro\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_AUX\n    \n    CONDICION_AUX : left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto\n    \n    ELSE_ELIF : ELSE\n              | ELIF\n              | empty\n    \n    ELSE : else nt_pushElse CUERPO\n    \n    ELIF : elseif nt_pushElse CONDICION_AUX\n    \n    nt_checarBool : empty\n    \n    nt_pushSalto : empty\n    \n    nt_pushElse : empty\n    \n    CICLO : while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop\n    \n    nt_saltoLoop : empty\n    \n    nt_pushLoop : empty\n    \n    LECTURA : cread left_par id nt_leer right_par semicolon\n    \n    nt_leer : empty\n    \n    ESCRITURA : cwrite left_par EXPRESION nt_escribir right_par semicolon\n    \n    nt_escribir : empty\n    \n    LLAMADA : left_par LLAMADA_EXPRESION right_par semicolon\n    \n    LLAMADA_EXPRESION : EXPRESION\n                      | LLAMADA_EXPRESION comma EXPRESION\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B\n    \n    nt_checaAndOrNot : empty\n    \n    EXPRESION_NOT : not nt_pushPOper\n                | empty\n    \n\tEXPRESION_B : and nt_pushPOper EXPRESION\n\t           | or nt_pushPOper EXPRESION\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt nt_pushPOper EXP nt_checarRelop\n                        | gt nt_pushPOper EXP nt_checarRelop\n                        | ne nt_pushPOper EXP nt_checarRelop\n                        | ge nt_pushPOper EXP nt_checarRelop\n                        | le nt_pushPOper EXP nt_checarRelop\n                        | et nt_pushPOper EXP nt_checarRelop\n                        | empty\n    \n    nt_checarRelop : empty\n    \n    EXP : TERMINO nt_checar_sumas EXP_AUX\n    \n    nt_checar_sumas : empty\n    \n    EXP_AUX : plus nt_pushPOper EXP\n            | minus nt_pushPOper EXP\n            | empty\n    \n    TERMINO : FACTOR nt_checar_multis TERMINO_AUX\n    \n    nt_checar_multis : empty\n    \n    TERMINO_AUX : multiply nt_pushPOper TERMINO\n                | divide nt_pushPOper TERMINO\n                | empty\n    \n    FACTOR : left_par nt_pushPOper EXPRESION right_par nt_popPOper\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id nt_pushPilaO\n                | id LLAMADA_F\n    \n    LLAMADA_F : left_par EXPRESION LLAMADAF_AUX right_par\n    \n    LLAMADAF_AUX : comma EXPRESION LLAMADAF_AUX\n                    | empty\n    \n    LISTA : id left_sb EXP right_sb\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus nt_sigMas NUMERICA_AUX\n             | minus nt_sigMenos NUMERICA_AUX\n    \n    nt_sigMas : empty\n    \n    nt_sigMenos : empty\n    \n    NUMERICA_AUX : cteInt nt_pushInt\n                 | cteFloat nt_pushFloat\n    \n    nt_pushInt : empty\n    \n    nt_pushFloat : empty\n    \n    BOOLEANA : true\n             | false\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon\n    \n    nt_checaEquals : empty\n    \n    ASIGNACION_AUX : id nt_pushPilaO\n                   | LISTA\n    \n    nt_pushPilaO : empty\n    \n    nt_pushPOper : empty\n    \n    nt_popPOper : empty\n    \n    empty :\n    '
    
_lr_action_items = {'and':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,169,170,192,193,194,195,197,200,201,203,204,205,206,212,213,216,221,239,241,243,245,248,249,277,284,285,286,287,288,289,299,301,302,303,304,305,306,309,310,311,312,313,314,315,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,-150,-150,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,253,-93,-99,-106,-132,-112,-108,-113,-117,-133,-150,-150,-150,-150,-150,-150,-150,-124,-111,-110,-118,-149,-116,-115,-103,-107,-101,-102,-100,-104,-105,]),'gt':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,170,192,193,194,195,197,200,201,203,204,205,206,239,241,243,245,248,249,277,299,301,302,303,304,305,306,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,215,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-132,-112,-108,-113,-117,-133,-150,-124,-111,-110,-118,-149,-116,-115,]),'false':([105,120,122,125,126,128,130,131,156,167,168,171,173,174,196,202,214,215,217,218,219,220,229,240,242,246,247,253,255,257,258,259,260,261,262,273,275,276,278,279,282,283,],[-150,-150,147,-150,-150,147,-150,-95,-150,-148,-150,-150,-94,-150,-150,-150,-150,-150,-150,-150,-150,-150,147,-150,-150,-150,-150,-150,-150,147,147,147,147,147,147,-150,147,147,147,147,-150,-150,]),'right_sb':([78,90,91,117,124,143,147,148,149,150,151,153,154,155,157,158,159,160,161,162,163,164,192,193,194,195,197,200,201,203,204,205,206,239,241,243,245,248,249,277,299,301,302,303,304,305,306,],[-150,118,-20,-150,-147,187,-141,192,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-132,-112,-108,-113,-117,-133,-150,-124,-111,-110,-118,-149,-116,-115,]),'semicolon':([3,48,49,50,57,58,67,68,69,76,88,118,124,144,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,169,170,172,187,192,193,194,195,197,200,201,203,204,205,206,211,212,213,216,221,235,236,239,241,243,245,248,249,250,251,252,254,256,266,277,284,285,286,287,288,289,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,],[4,55,-150,59,-19,-150,-150,-24,-21,-150,-25,-150,-147,-17,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,-150,-150,223,-150,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-150,-150,-93,-99,-106,-18,270,-132,-112,-108,-113,-117,-133,280,281,-144,-92,-98,292,-150,-150,-150,-150,-150,-150,-150,-124,-111,-110,-118,-149,-116,-115,-96,-97,-103,-107,-101,-102,-100,-104,-105,]),'int':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,35,43,44,55,59,74,75,113,115,137,175,226,233,],[-150,-4,-13,-150,-150,-5,-11,-14,-150,-10,22,-2,22,-23,22,-16,-12,22,-6,-150,-9,-8,-7,-9,-53,-54,-22,-15,22,22,22,22,-150,-52,-46,-62,]),'float':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,35,43,44,55,59,74,75,113,115,137,175,226,233,],[-150,-4,-13,-150,-150,-5,-11,-14,-150,-10,23,-2,23,-23,23,-16,-12,23,-6,-150,-9,-8,-7,-9,-53,-54,-22,-15,23,23,23,23,-150,-52,-46,-62,]),'cteFloat':([105,120,122,125,126,128,130,131,152,156,165,167,168,171,173,174,196,198,199,202,207,208,214,215,217,218,219,220,229,240,242,246,247,253,255,257,258,259,260,261,262,273,275,276,278,279,282,283,],[-150,-150,149,-150,-150,149,-150,-95,-150,-150,-150,-148,-150,-150,-94,-150,-150,149,-134,-150,-135,149,-150,-150,-150,-150,-150,-150,149,-150,-150,-150,-150,-150,-150,149,149,149,149,149,149,-150,149,149,149,149,-150,-150,]),'left_sb':([51,57,61,70,77,98,151,],[-150,-19,71,-150,89,122,122,]),'multiply':([124,147,149,150,151,153,155,157,158,159,160,161,162,163,164,192,193,194,195,197,203,204,205,206,239,249,277,299,303,304,],[-147,-141,-150,-129,-150,-121,-142,-140,-130,-119,-150,-131,-128,-150,-120,-127,-137,-139,-122,-123,-138,-136,247,-114,-132,-133,-150,-124,-118,-149,]),'ge':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,170,192,193,194,195,197,200,201,203,204,205,206,239,241,243,245,248,249,277,299,301,302,303,304,305,306,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,214,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-132,-112,-108,-113,-117,-133,-150,-124,-111,-110,-118,-149,-116,-115,]),'comma':([48,49,50,57,58,67,68,69,74,76,84,85,86,88,111,116,118,124,127,129,135,136,142,144,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,169,170,183,186,187,192,193,194,195,197,200,201,203,204,205,206,212,213,216,221,222,232,234,235,238,239,241,243,245,248,249,254,256,277,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,],[56,-150,60,-19,-150,-150,-24,-21,-150,-150,-60,113,115,-25,-150,-150,-150,-147,-90,171,-61,-58,-64,-17,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,-150,-150,-150,-150,-150,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-150,-93,-99,-106,-91,-59,-65,-18,273,-132,-112,-108,-113,-117,-133,-92,-98,-150,-150,-150,-150,-150,-150,-150,-124,273,-111,-110,-118,-149,-116,-115,-96,-97,-103,-107,-101,-102,-100,-104,-105,]),'cread':([6,10,11,13,20,55,59,73,79,80,81,82,92,94,96,97,101,102,103,104,106,109,110,121,134,138,140,177,178,180,181,182,185,223,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[-13,-11,-14,-10,-12,-22,-15,-150,93,-34,-35,-150,-68,-69,-66,-36,-70,-37,-71,-67,-32,93,-31,-72,-33,-150,-150,-150,-150,-42,-150,-43,-43,-89,-150,-47,-41,93,-48,93,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'right_par':([74,84,85,86,111,116,124,127,129,135,136,142,145,146,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,166,169,170,183,186,188,189,190,191,192,193,194,195,197,200,201,203,204,205,206,209,210,212,213,216,221,222,224,232,234,238,239,241,243,244,245,248,249,254,256,263,272,274,277,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,322,],[-150,-60,112,114,-150,-150,-147,-90,172,-61,-58,-64,-150,-150,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,-150,-150,-150,-150,-150,236,-86,237,-79,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,250,-88,-150,-93,-99,-106,-91,-150,-59,-65,-150,-132,-112,-108,277,-113,-117,-133,-92,-98,290,299,-126,-150,-150,-150,-150,-150,-150,-150,-124,-150,-111,-110,-118,-149,-116,-115,-96,-97,-103,-107,-101,-102,-100,-104,-105,-125,]),'cteString':([105,120,122,125,126,128,130,131,156,167,168,171,173,174,196,202,214,215,217,218,219,220,229,240,242,246,247,253,255,257,258,259,260,261,262,273,275,276,278,279,282,283,],[-150,-150,155,-150,-150,155,-150,-95,-150,-148,-150,-150,-94,-150,-150,-150,-150,-150,-150,-150,-150,-150,155,-150,-150,-150,-150,-150,-150,155,155,155,155,155,155,-150,155,155,155,155,-150,-150,]),'id':([1,6,10,11,13,20,22,23,24,26,29,30,32,33,37,38,39,40,41,42,45,46,47,55,56,59,60,73,79,80,81,82,83,87,92,94,96,97,101,102,103,104,105,106,109,110,119,120,121,122,125,126,128,130,131,134,138,139,140,141,156,167,168,171,173,174,177,178,180,181,182,185,196,202,214,215,217,218,219,220,223,227,228,229,230,231,240,242,246,247,253,255,257,258,259,260,261,262,264,265,267,268,269,270,271,273,275,276,278,279,280,281,282,283,291,292,293,294,295,298,316,317,318,323,324,325,326,],[3,-13,-11,-14,-10,-12,-150,-150,-150,-150,-150,-150,49,51,-26,-30,-27,53,-56,-28,-29,-63,54,-22,67,-15,70,-150,98,-34,-35,-150,111,116,-68,-69,-66,-36,-70,-37,-71,-67,-150,-32,98,-31,145,-150,-72,151,-150,-150,151,-150,-95,-33,-150,183,-150,186,-150,-148,-150,-150,-94,-150,-150,-150,-42,-150,-43,-43,-150,-150,-150,-150,-150,-150,-150,-150,-89,-150,-47,151,-41,98,-150,-150,-150,-150,-150,-150,151,151,151,151,151,151,-48,98,-39,-44,-45,-85,-150,-150,151,151,151,151,-87,-143,-150,-150,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'if':([6,10,11,13,20,55,59,73,79,80,81,82,92,94,96,97,101,102,103,104,106,109,110,121,134,138,140,177,178,180,181,182,185,223,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[-13,-11,-14,-10,-12,-22,-15,-150,95,-34,-35,-150,-68,-69,-66,-36,-70,-37,-71,-67,-32,95,-31,-72,-33,-150,-150,-150,-150,-42,-150,-43,-43,-89,-150,-47,-41,95,-48,95,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'le':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,170,192,193,194,195,197,200,201,203,204,205,206,239,241,243,245,248,249,277,299,301,302,303,304,305,306,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,219,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-132,-112,-108,-113,-117,-133,-150,-124,-111,-110,-118,-149,-116,-115,]),'divide':([124,147,149,150,151,153,155,157,158,159,160,161,162,163,164,192,193,194,195,197,203,204,205,206,239,249,277,299,303,304,],[-147,-141,-150,-129,-150,-121,-142,-140,-130,-119,-150,-131,-128,-150,-120,-127,-137,-139,-122,-123,-138,-136,246,-114,-132,-133,-150,-124,-118,-149,]),'right_cb':([6,10,11,13,20,55,59,73,79,80,81,82,92,94,96,97,101,102,103,104,106,109,110,121,134,140,177,178,180,181,184,185,223,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[-13,-11,-14,-10,-12,-22,-15,-150,-150,-34,-35,110,-68,-69,-66,-36,-70,-37,-71,-67,-32,-150,-31,-72,-33,-150,226,-38,-42,-150,233,-43,-89,-150,-47,-41,-150,-48,-150,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'ne':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,170,192,193,194,195,197,200,201,203,204,205,206,239,241,243,245,248,249,277,299,301,302,303,304,305,306,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,217,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-132,-112,-108,-113,-117,-133,-150,-124,-111,-110,-118,-149,-116,-115,]),'lt':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,170,192,193,194,195,197,200,201,203,204,205,206,239,241,243,245,248,249,277,299,301,302,303,304,305,306,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,218,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-132,-112,-108,-113,-117,-133,-150,-124,-111,-110,-118,-149,-116,-115,]),'program':([0,],[1,]),'bool':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,35,43,44,55,59,74,75,113,115,137,175,226,233,],[-150,-4,-13,-150,-150,-5,-11,-14,-150,-10,26,-2,26,-23,26,-16,-12,26,-6,-150,-9,-8,-7,-9,-53,-54,-22,-15,26,26,26,26,-150,-52,-46,-62,]),'cwrite':([6,10,11,13,20,55,59,73,79,80,81,82,92,94,96,97,101,102,103,104,106,109,110,121,134,138,140,177,178,180,181,182,185,223,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[-13,-11,-14,-10,-12,-22,-15,-150,99,-34,-35,-150,-68,-69,-66,-36,-70,-37,-71,-67,-32,99,-31,-72,-33,-150,-150,-150,-150,-42,-150,-43,-43,-89,-150,-47,-41,99,-48,99,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'var':([4,6,10,11,13,20,55,59,73,79,80,81,82,92,94,96,97,101,102,103,104,106,109,110,121,134,138,140,177,178,180,181,182,185,223,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[8,-13,-11,-14,8,-12,-22,-15,8,-150,-34,-35,8,-68,-69,-66,-36,-70,-37,-71,-67,-32,-150,-31,-72,-33,8,8,8,8,-42,-150,-43,-43,-89,-150,-47,-41,-150,-48,-150,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'main':([4,5,6,7,9,10,11,13,14,15,20,21,25,27,28,31,34,35,36,43,44,55,59,137,175,226,233,],[-150,-4,-13,-150,-5,-11,-14,-10,-150,-2,-12,-150,-6,-150,-9,-8,-7,-2,52,-53,-54,-22,-15,-150,-52,-46,-62,]),'$end':([2,72,110,],[0,-1,-31,]),'return':([6,10,11,13,20,55,59,92,94,96,101,103,104,110,121,138,176,177,178,179,180,181,182,185,223,225,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[-13,-11,-14,-10,-12,-22,-15,-68,-69,-66,-70,-71,-67,-31,-72,-150,-49,-150,-38,229,-42,-150,-43,-43,-89,229,-150,-47,-41,-150,-48,-150,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'string':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,35,43,44,55,59,74,75,113,115,137,175,226,233,],[-150,-4,-13,-150,-150,-5,-11,-14,-150,-10,29,-2,29,-23,29,-16,-12,29,-6,-150,-9,-8,-7,-9,-53,-54,-22,-15,29,29,29,29,-150,-52,-46,-62,]),'et':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,170,192,193,194,195,197,200,201,203,204,205,206,239,241,243,245,248,249,277,299,301,302,303,304,305,306,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,220,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,-132,-112,-108,-113,-117,-133,-150,-124,-111,-110,-118,-149,-116,-115,]),'void':([4,5,6,7,9,10,11,13,14,15,20,21,25,27,28,31,34,35,43,44,55,59,137,175,226,233,],[-150,-4,-13,-150,-5,-11,-14,-10,30,-2,-12,30,-6,-150,-9,-8,-7,-9,-53,-54,-22,-15,-150,-52,-46,-62,]),'equals':([98,100,108,123,124,192,],[-150,126,-146,-145,-147,-127,]),'else':([110,271,],[-31,297,]),'elseif':([110,271,],[-31,296,]),'left_par':([6,10,11,13,20,53,54,55,59,64,65,66,73,79,80,81,82,92,93,94,95,96,97,99,101,102,103,104,105,106,107,109,110,120,121,122,125,126,128,130,131,132,133,134,138,140,151,156,167,168,171,173,174,177,178,180,181,182,185,196,202,214,215,217,218,219,220,223,227,228,229,230,231,240,242,246,247,253,255,257,258,259,260,261,262,264,265,267,268,269,270,271,273,275,276,278,279,280,281,282,283,291,292,293,294,295,296,298,316,317,318,319,320,323,324,325,326,],[-13,-11,-14,-10,-12,-150,-150,-22,-15,74,-57,75,-150,105,-34,-35,-150,-68,119,-69,120,-66,-36,125,-70,-37,-71,-67,-150,-32,-150,105,-31,-150,-72,156,-150,-150,156,-150,-95,-83,174,-33,-150,-150,196,-150,-148,-150,-150,-94,-150,-150,-150,-42,-150,-43,-43,-150,-150,-150,-150,-150,-150,-150,-150,-89,-150,-47,156,-41,105,-150,-150,-150,-150,-150,-150,156,156,156,156,156,156,-48,105,-39,-44,-45,-85,-150,-150,156,156,156,156,-87,-143,-150,-150,-40,-51,-150,-75,-74,-150,-76,-150,-73,-80,120,-81,-82,-84,-78,-77,]),'not':([105,120,125,126,156,167,168,171,174,196,202,253,255,273,282,283,],[130,130,130,-150,-150,-148,130,130,130,130,130,-150,-150,130,130,130,]),'true':([105,120,122,125,126,128,130,131,156,167,168,171,173,174,196,202,214,215,217,218,219,220,229,240,242,246,247,253,255,257,258,259,260,261,262,273,275,276,278,279,282,283,],[-150,-150,157,-150,-150,157,-150,-95,-150,-148,-150,-150,-94,-150,-150,-150,-150,-150,-150,-150,-150,-150,157,-150,-150,-150,-150,-150,-150,157,157,157,157,157,157,-150,157,157,157,157,-150,-150,]),'left_cb':([15,52,62,63,112,114,237,290,297,320,321,],[-2,-150,73,-3,138,140,73,73,-150,-81,73,]),'cteInt':([71,89,105,120,122,125,126,128,130,131,152,156,165,167,168,171,173,174,196,198,199,202,207,208,214,215,217,218,219,220,229,240,242,246,247,253,255,257,258,259,260,261,262,273,275,276,278,279,282,283,],[78,117,-150,-150,160,-150,-150,160,-150,-95,-150,-150,-150,-148,-150,-150,-94,-150,-150,160,-134,-150,-135,160,-150,-150,-150,-150,-150,-150,160,-150,-150,-150,-150,-150,-150,160,160,160,160,160,160,-150,160,160,160,160,-150,-150,]),'list':([4,6,10,11,13,20,55,59,73,79,80,81,82,92,94,96,97,101,102,103,104,106,109,110,121,134,138,140,177,178,180,181,182,185,223,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[12,-13,-11,-14,12,-12,-22,-15,12,-150,-34,-35,12,-68,-69,-66,-36,-70,-37,-71,-67,-32,-150,-31,-72,-33,12,12,12,12,-42,-150,-43,-43,-89,-150,-47,-41,-150,-48,-150,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'or':([124,147,149,150,151,153,154,155,157,158,159,160,161,162,163,164,169,170,192,193,194,195,197,200,201,203,204,205,206,212,213,216,221,239,241,243,245,248,249,277,284,285,286,287,288,289,299,301,302,303,304,305,306,309,310,311,312,313,314,315,],[-147,-141,-150,-129,-150,-121,-150,-142,-140,-130,-119,-150,-131,-128,-150,-120,-150,-150,-127,-137,-139,-122,-123,-109,-150,-138,-136,-150,-114,255,-93,-99,-106,-132,-112,-108,-113,-117,-133,-150,-150,-150,-150,-150,-150,-150,-124,-111,-110,-118,-149,-116,-115,-103,-107,-101,-102,-100,-104,-105,]),'while':([6,10,11,13,20,55,59,73,79,80,81,82,92,94,96,97,101,102,103,104,106,109,110,121,134,138,140,177,178,180,181,182,185,223,227,228,230,231,264,265,267,268,269,270,271,280,281,291,292,293,294,295,298,316,317,318,323,324,325,326,],[-13,-11,-14,-10,-12,-22,-15,-150,107,-34,-35,-150,-68,-69,-66,-36,-70,-37,-71,-67,-32,107,-31,-72,-33,-150,-150,-150,-150,-42,-150,-43,-43,-89,-150,-47,-41,107,-48,107,-39,-44,-45,-85,-150,-87,-143,-40,-51,-150,-75,-74,-76,-150,-73,-80,-82,-84,-78,-77,]),'plus':([105,120,122,124,125,126,128,130,131,147,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,167,168,171,173,174,192,193,194,195,196,197,200,201,202,203,204,205,206,214,215,217,218,219,220,229,239,240,242,245,246,247,248,249,253,255,257,258,259,260,261,262,273,275,276,277,278,279,282,283,299,303,304,305,306,],[-150,-150,152,-147,-150,-150,152,-150,-95,-141,-150,-129,-150,-121,-150,-142,-150,-140,-130,-119,-150,-131,-128,-150,-120,-148,-150,-150,-94,-150,-127,-137,-139,-122,-150,-123,-109,242,-150,-138,-136,-150,-114,-150,-150,-150,-150,-150,-150,152,-132,-150,-150,-113,-150,-150,-117,-133,-150,-150,152,152,152,152,152,152,-150,152,152,-150,152,152,-150,-150,-124,-118,-149,-116,-115,]),'minus':([105,120,122,124,125,126,128,130,131,147,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,167,168,171,173,174,192,193,194,195,196,197,200,201,202,203,204,205,206,214,215,217,218,219,220,229,239,240,242,245,246,247,248,249,253,255,257,258,259,260,261,262,273,275,276,277,278,279,282,283,299,303,304,305,306,],[-150,-150,165,-147,-150,-150,165,-150,-95,-141,-150,-129,-150,-121,-150,-142,-150,-140,-130,-119,-150,-131,-128,-150,-120,-148,-150,-150,-94,-150,-127,-137,-139,-122,-150,-123,-109,240,-150,-138,-136,-150,-114,-150,-150,-150,-150,-150,-150,165,-132,-150,-150,-113,-150,-150,-117,-133,-150,-150,165,165,165,165,165,165,-150,165,165,-150,165,165,-150,-150,-124,-118,-149,-116,-115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'nt_cambioFuncActual':([24,],[40,]),'CICLO':([79,109,231,265,],[92,92,92,92,]),'VARS_LIST':([4,13,73,82,138,140,177,178,],[6,6,6,6,6,6,6,6,]),'TERMINO_AUX':([205,],[245,]),'CUERPO':([62,237,290,321,],[72,271,316,326,]),'EXP':([122,128,229,257,258,259,260,261,262,275,276,],[148,170,266,284,285,286,287,288,289,301,302,]),'CUERPO_AUX':([73,],[82,]),'nt_hacerVoid':([30,],[47,]),'LECTURA':([79,109,231,265,],[94,94,94,94,]),'ESCRITURA':([79,109,231,265,],[101,101,101,101,]),'nt_checarRelop':([284,285,286,287,288,289,],[309,311,312,313,314,315,]),'VOIDFUNC_PARA':([75,],[86,]),'nt_pushLoop':([316,],[323,]),'VOIDFUNC':([14,21,],[27,27,]),'EXPRESION_B':([212,],[254,]),'LLAMADA':([79,109,231,265,],[103,103,103,103,]),'nt_checar_multis':([163,],[205,]),'CONDICION':([79,109,231,265,],[104,104,104,104,]),'RETORNO':([179,225,],[228,264,]),'STRINGS':([122,128,229,257,258,259,260,261,262,275,276,278,279,],[158,158,158,158,158,158,158,158,158,158,158,158,158,]),'nt_agregarId':([49,51,67,70,],[58,61,76,77,]),'CUERPORETORNO_AUX':([138,],[177,]),'nt_pushPilaO':([98,151,],[123,195,]),'PROGRAMA':([0,],[2,]),'nt_sigMas':([152,],[198,]),'nt_cambiarScope':([7,21,52,],[14,36,63,]),'LISTA':([79,109,122,128,229,231,257,258,259,260,261,262,265,275,276,278,279,],[108,108,164,164,164,108,164,164,164,164,164,164,108,164,164,164,164,]),'FUNC_PARA':([74,],[85,]),'EXPRESIONLOGICA':([128,],[169,]),'nt_pushEndsub':([27,137,],[43,175,]),'PROGRAMA_VARS':([4,],[7,]),'nt_pushFloat':([149,],[193,]),'nt_funcInicio':([181,227,],[231,265,]),'nt_leer':([145,],[188,]),'CUERPOFUNC_AUX':([138,140,177,],[178,178,178,]),'CONDICION_AUX':([95,319,],[121,325,]),'nt_saltoLoop':([107,],[133,]),'CUERPOFUNC_ESTATUTO':([231,265,],[267,291,]),'nt_checaEquals':([211,],[251,]),'ASIGNACION':([79,109,231,265,],[96,96,96,96,]),'VARS_AUX':([4,73,82,138,140,177,178,],[13,13,13,13,13,13,13,]),'VARS_LIST_AUX':([33,],[50,]),'nt_pushElse':([296,297,],[319,321,]),'PROGRAMA_FUNC_AUX':([14,21,],[25,34,]),'nt_popPOper':([277,],[303,]),'CUERPOFUNC_VARS':([138,140,177,178,],[181,181,181,227,]),'ASIGNACION_AUX':([79,109,231,265,],[100,100,100,100,]),'FACTOR_AUX':([122,128,229,257,258,259,260,261,262,275,276,278,279,],[153,153,153,153,153,153,153,153,153,153,153,153,153,]),'NUMERICA_AUX':([122,128,198,208,229,257,258,259,260,261,262,275,276,278,279,],[161,161,239,249,161,161,161,161,161,161,161,161,161,161,161,]),'nt_sigMenos':([165,],[208,]),'ELSE':([271,],[295,]),'CUERPORETORNO':([112,],[137,]),'FUNC':([14,21,],[31,31,]),'CUERPO_ESTATUTO':([79,109,],[106,134,]),'nt_hacerVar':([8,],[16,]),'CONSTANTE':([122,128,229,257,258,259,260,261,262,275,276,278,279,],[159,159,159,159,159,159,159,159,159,159,159,159,159,]),'NUMERICA':([122,128,229,257,258,259,260,261,262,275,276,278,279,],[162,162,162,162,162,162,162,162,162,162,162,162,162,]),'FACTOR':([122,128,229,257,258,259,260,261,262,275,276,278,279,],[163,163,163,163,163,163,163,163,163,163,163,163,163,]),'nt_checar_sumas':([154,],[201,]),'EXPRESION':([105,120,125,168,171,174,196,202,273,282,283,],[127,146,166,211,222,224,238,244,300,307,308,]),'EXPRESION_NOT':([105,120,125,168,171,174,196,202,273,282,283,],[128,128,128,128,128,128,128,128,128,128,128,]),'ELSE_ELIF':([271,],[293,]),'nt_agregarDicVar':([58,76,118,187,],[68,88,144,235,]),'BOOLEANA':([122,128,229,257,258,259,260,261,262,275,276,278,279,],[150,150,150,150,150,150,150,150,150,150,150,150,150,]),'CUERPORETORNO_CF_AUX':([138,177,],[179,225,]),'CUERPOFUNC':([138,140,177,],[176,184,176,]),'nt_checaAndOrNot':([169,],[212,]),'PROGRAMA_FUNC':([14,],[21,]),'TERMINO':([122,128,229,257,258,259,260,261,262,275,276,278,279,],[154,154,154,154,154,154,154,154,154,154,154,305,306,]),'nt_pushInt':([160,],[204,]),'EXP_AUX':([201,],[243,]),'empty':([4,7,8,12,14,21,22,23,24,26,27,29,30,49,51,52,53,54,58,67,70,73,74,76,78,79,82,98,105,107,109,111,116,117,118,120,125,126,130,137,138,140,145,146,149,151,152,154,156,160,163,165,166,168,169,170,171,174,177,178,181,183,186,187,196,201,202,205,211,212,214,215,217,218,219,220,224,227,231,238,240,242,246,247,253,255,265,271,273,277,282,283,284,285,286,287,288,289,293,296,297,300,316,],[9,15,17,19,28,35,38,38,41,38,44,38,46,57,57,15,65,65,69,57,57,81,84,69,91,102,81,124,131,132,102,135,135,91,69,131,131,167,167,44,182,185,189,191,194,124,199,200,167,203,206,207,210,131,213,221,131,131,182,185,230,135,135,69,131,241,131,248,252,256,167,167,167,167,167,167,191,230,269,274,167,167,167,167,167,167,269,298,131,304,131,131,310,310,310,310,310,310,318,320,320,274,324,]),'nt_pushSalto':([293,],[317,]),'VARS_VAR_AUX':([32,],[48,]),'VARS_LIST_VAR':([4,13,73,82,138,140,177,178,],[10,20,10,10,10,10,10,10,]),'nt_agregarIdFunc':([53,54,],[64,66,]),'VARS_VAR':([4,13,73,82,138,140,177,178,],[11,11,11,11,11,11,11,11,]),'CUERPO_VARS':([73,82,],[79,109,]),'nt_hacerLista':([12,],[18,]),'nt_escribir':([166,],[209,]),'nt_agregarCteLista':([78,117,],[90,143,]),'ELIF':([271,],[294,]),'LLAMADA_EXPRESION':([105,],[129,]),'nt_ambienteMain':([52,],[62,]),'VARS':([4,73,82,138,140,177,178,],[5,80,80,180,180,180,180,]),'nt_checarBool':([146,224,],[190,263,]),'LLAMADA_F':([151,],[197,]),'TIPO':([14,16,18,21,74,75,113,115,],[24,32,33,24,83,87,139,141,]),'ESTATUTO':([79,109,231,265,],[97,97,268,268,]),'nt_cambioTipoActual':([22,23,26,29,],[37,39,42,45,]),'nt_agregarParametro':([111,116,183,186,],[136,142,232,234,]),'nt_pushPOper':([126,130,156,214,215,217,218,219,220,240,242,246,247,253,255,],[168,173,202,257,258,259,260,261,262,275,276,278,279,282,283,]),'LLAMADAF_AUX':([238,300,],[272,322,]),'EXPRESIONLOGICA_AUX':([170,],[216,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO','PROGRAMA',10,'p_PROGRAMA','CSP_yacc.py',33),
  ('nt_cambiarScope -> empty','nt_cambiarScope',1,'p_nt_cambiarScope','CSP_yacc.py',63),
  ('nt_ambienteMain -> nt_cambiarScope','nt_ambienteMain',1,'p_nt_ambienteMain','CSP_yacc.py',73),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',79),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',80),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',85),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',86),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',91),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',92),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',97),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',102),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',103),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',108),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',109),
  ('VARS_LIST -> list nt_hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',114),
  ('nt_hacerLista -> empty','nt_hacerLista',1,'p_nt_hacerLista','CSP_yacc.py',119),
  ('VARS_LIST_AUX -> id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',126),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',127),
  ('nt_agregarId -> empty','nt_agregarId',1,'p_nt_agregarId','CSP_yacc.py',132),
  ('nt_agregarCteLista -> empty','nt_agregarCteLista',1,'p_nt_agregarCteLista','CSP_yacc.py',139),
  ('nt_agregarDicVar -> empty','nt_agregarDicVar',1,'p_nt_agregarDicVar','CSP_yacc.py',146),
  ('VARS_VAR -> var nt_hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',162),
  ('nt_hacerVar -> empty','nt_hacerVar',1,'p_nt_hacerVar','CSP_yacc.py',166),
  ('VARS_VAR_AUX -> id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',173),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',174),
  ('TIPO -> int nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',179),
  ('TIPO -> float nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',180),
  ('TIPO -> bool nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',181),
  ('TIPO -> string nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',182),
  ('nt_cambioTipoActual -> empty','nt_cambioTipoActual',1,'p_nt_cambioTipoActual','CSP_yacc.py',187),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',194),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',199),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',200),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',206),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',207),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',212),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',213),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',218),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',223),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',4,'p_CUERPOFUNC_AUX','CSP_yacc.py',224),
  ('nt_funcInicio -> empty','nt_funcInicio',1,'p_nt_funcInicio','CSP_yacc.py',228),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',237),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',238),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',243),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',244),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',250),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',255),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',256),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',261),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',262),
  ('RETORNO -> return EXP semicolon','RETORNO',3,'p_RETORNO','CSP_yacc.py',269),
  ('FUNC -> TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub','FUNC',9,'p_FUNC','CSP_yacc.py',274),
  ('FUNC -> VOIDFUNC nt_pushEndsub','FUNC',2,'p_FUNC','CSP_yacc.py',275),
  ('nt_pushEndsub -> empty','nt_pushEndsub',1,'p_nt_pushEndsub','CSP_yacc.py',291),
  ('test_print -> empty','test_print',1,'p_test_print','CSP_yacc.py',302),
  ('nt_cambioFuncActual -> empty','nt_cambioFuncActual',1,'p_nt_cambioFuncActual','CSP_yacc.py',321),
  ('nt_agregarIdFunc -> empty','nt_agregarIdFunc',1,'p_nt_agregarIdFunc','CSP_yacc.py',329),
  ('FUNC_PARA -> TIPO id nt_agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',336),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id nt_agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',337),
  ('FUNC_PARA -> empty','FUNC_PARA',1,'p_FUNC_PARA','CSP_yacc.py',338),
  ('nt_agregarParametro -> empty','nt_agregarParametro',1,'p_nt_agregarParametro','CSP_yacc.py',343),
  ('VOIDFUNC -> void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',356),
  ('nt_hacerVoid -> empty','nt_hacerVoid',1,'p_nt_hacerVoid','CSP_yacc.py',361),
  ('VOIDFUNC_PARA -> TIPO id nt_agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',370),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id nt_agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',371),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',376),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',377),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',378),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',379),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',380),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',381),
  ('CONDICION -> if CONDICION_AUX','CONDICION',2,'p_CONDICION','CSP_yacc.py',386),
  ('CONDICION_AUX -> left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto','CONDICION_AUX',7,'p_CONDICION_AUX','CSP_yacc.py',391),
  ('ELSE_ELIF -> ELSE','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',395),
  ('ELSE_ELIF -> ELIF','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',396),
  ('ELSE_ELIF -> empty','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',397),
  ('ELSE -> else nt_pushElse CUERPO','ELSE',3,'p_ELSE','CSP_yacc.py',402),
  ('ELIF -> elseif nt_pushElse CONDICION_AUX','ELIF',3,'p_ELIF','CSP_yacc.py',407),
  ('nt_checarBool -> empty','nt_checarBool',1,'p_nt_checarBool','CSP_yacc.py',414),
  ('nt_pushSalto -> empty','nt_pushSalto',1,'p_nt_pushSalto','CSP_yacc.py',438),
  ('nt_pushElse -> empty','nt_pushElse',1,'p_nt_pushElse','CSP_yacc.py',450),
  ('CICLO -> while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop','CICLO',8,'p_CICLO','CSP_yacc.py',467),
  ('nt_saltoLoop -> empty','nt_saltoLoop',1,'p_nt_saltoLoop','CSP_yacc.py',472),
  ('nt_pushLoop -> empty','nt_pushLoop',1,'p_nt_pushLoop','CSP_yacc.py',481),
  ('LECTURA -> cread left_par id nt_leer right_par semicolon','LECTURA',6,'p_LECTURA','CSP_yacc.py',495),
  ('nt_leer -> empty','nt_leer',1,'p_nt_leer','CSP_yacc.py',501),
  ('ESCRITURA -> cwrite left_par EXPRESION nt_escribir right_par semicolon','ESCRITURA',6,'p_ESCRITURA','CSP_yacc.py',525),
  ('nt_escribir -> empty','nt_escribir',1,'p_nt_escribir','CSP_yacc.py',530),
  ('LLAMADA -> left_par LLAMADA_EXPRESION right_par semicolon','LLAMADA',4,'p_LLAMADA','CSP_yacc.py',546),
  ('LLAMADA_EXPRESION -> EXPRESION','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',551),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION comma EXPRESION','LLAMADA_EXPRESION',3,'p_LLAMADA_EXPRESION','CSP_yacc.py',552),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B','EXPRESION',4,'p_EXPRESION','CSP_yacc.py',557),
  ('nt_checaAndOrNot -> empty','nt_checaAndOrNot',1,'p_nt_checaAndOrNot','CSP_yacc.py',562),
  ('EXPRESION_NOT -> not nt_pushPOper','EXPRESION_NOT',2,'p_EXPRESION_NOT','CSP_yacc.py',609),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',610),
  ('EXPRESION_B -> and nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',615),
  ('EXPRESION_B -> or nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',616),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',617),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',622),
  ('EXPRESIONLOGICA_AUX -> lt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',627),
  ('EXPRESIONLOGICA_AUX -> gt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',628),
  ('EXPRESIONLOGICA_AUX -> ne nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',629),
  ('EXPRESIONLOGICA_AUX -> ge nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',630),
  ('EXPRESIONLOGICA_AUX -> le nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',631),
  ('EXPRESIONLOGICA_AUX -> et nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',632),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',633),
  ('nt_checarRelop -> empty','nt_checarRelop',1,'p_nt_checarRelop','CSP_yacc.py',638),
  ('EXP -> TERMINO nt_checar_sumas EXP_AUX','EXP',3,'p_EXP','CSP_yacc.py',670),
  ('nt_checar_sumas -> empty','nt_checar_sumas',1,'p_nt_checar_sumas','CSP_yacc.py',675),
  ('EXP_AUX -> plus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',709),
  ('EXP_AUX -> minus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',710),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',711),
  ('TERMINO -> FACTOR nt_checar_multis TERMINO_AUX','TERMINO',3,'p_TERMINO','CSP_yacc.py',717),
  ('nt_checar_multis -> empty','nt_checar_multis',1,'p_nt_checar_multis','CSP_yacc.py',722),
  ('TERMINO_AUX -> multiply nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',755),
  ('TERMINO_AUX -> divide nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',756),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',757),
  ('FACTOR -> left_par nt_pushPOper EXPRESION right_par nt_popPOper','FACTOR',5,'p_FACTOR','CSP_yacc.py',762),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',763),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',764),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',765),
  ('FACTOR_AUX -> id nt_pushPilaO','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',770),
  ('FACTOR_AUX -> id LLAMADA_F','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',771),
  ('LLAMADA_F -> left_par EXPRESION LLAMADAF_AUX right_par','LLAMADA_F',4,'p_LLAMADAF','CSP_yacc.py',776),
  ('LLAMADAF_AUX -> comma EXPRESION LLAMADAF_AUX','LLAMADAF_AUX',3,'p_LLAMADAF_AUX','CSP_yacc.py',781),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',782),
  ('LISTA -> id left_sb EXP right_sb','LISTA',4,'p_LISTA','CSP_yacc.py',787),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',792),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',793),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',794),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',800),
  ('NUMERICA -> plus nt_sigMas NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',801),
  ('NUMERICA -> minus nt_sigMenos NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',802),
  ('nt_sigMas -> empty','nt_sigMas',1,'p_nt_sigMas','CSP_yacc.py',807),
  ('nt_sigMenos -> empty','nt_sigMenos',1,'p_nt_sigMenos','CSP_yacc.py',814),
  ('NUMERICA_AUX -> cteInt nt_pushInt','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',821),
  ('NUMERICA_AUX -> cteFloat nt_pushFloat','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',822),
  ('nt_pushInt -> empty','nt_pushInt',1,'p_nt_pushInt','CSP_yacc.py',828),
  ('nt_pushFloat -> empty','nt_pushFloat',1,'p_nt_pushFloat','CSP_yacc.py',847),
  ('BOOLEANA -> true','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',866),
  ('BOOLEANA -> false','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',867),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',877),
  ('ASIGNACION -> ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon','ASIGNACION',6,'p_ASIGNACION','CSP_yacc.py',887),
  ('nt_checaEquals -> empty','nt_checaEquals',1,'p_nt_checaEquals','CSP_yacc.py',892),
  ('ASIGNACION_AUX -> id nt_pushPilaO','ASIGNACION_AUX',2,'p_ASIGNACION_AUX','CSP_yacc.py',920),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',921),
  ('nt_pushPilaO -> empty','nt_pushPilaO',1,'p_nt_pushPilaO','CSP_yacc.py',926),
  ('nt_pushPOper -> empty','nt_pushPOper',1,'p_nt_pushPOper','CSP_yacc.py',946),
  ('nt_popPOper -> empty','nt_popPOper',1,'p_nt_popPOper','CSP_yacc.py',955),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',962),
]
