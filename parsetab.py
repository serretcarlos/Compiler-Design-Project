
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et false float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string true var void while\n    PROGRAMA : program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO\n    \n    nt_cambiarScope : empty\n    \n    nt_ambienteMain : nt_cambiarScope\n    \n    nt_pushJmpMain : empty\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list nt_hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    nt_hacerLista : empty\n    \n    VARS_LIST_AUX : id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n                  | VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n    \n    nt_agregarId : empty\n    \n    nt_agregarCteLista : empty\n    \n    nt_agregarDicVar : empty\n    \n    VARS_VAR : var nt_hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    nt_hacerVar : empty\n    \n    VARS_VAR_AUX : id nt_agregarId nt_agregarDicVar\n                 | VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar\n    \n    TIPO : int nt_cambioTipoActual\n         | float nt_cambioTipoActual\n         | bool nt_cambioTipoActual\n         | string nt_cambioTipoActual\n    \n    nt_cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n    \n    nt_funcInicio : empty\n    \n    CUERPOFUNC_VARS : VARS \n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP semicolon\n    \n    FUNC : TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub\n         | VOIDFUNC nt_pushEndsub\n    \n    nt_pushEndsub : empty\n    \n    nt_cambioFuncActual : empty\n    \n    nt_agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id nt_agregarParametro\n              | FUNC_PARA comma TIPO id nt_agregarParametro\n              | empty\n    \n    nt_agregarParametro : empty\n    \n    VOIDFUNC : void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    nt_hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id nt_agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id nt_agregarParametro\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_AUX\n    \n    CONDICION_AUX : left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto\n    \n    ELSE_ELIF : ELSE\n              | ELIF\n              | empty\n    \n    ELSE : else nt_pushElse CUERPO\n    \n    ELIF : elseif nt_pushElse CONDICION_AUX\n    \n    nt_checarBool : empty\n    \n    nt_pushSalto : empty\n    \n    nt_pushElse : empty\n    \n    CICLO : while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop\n    \n    nt_saltoLoop : empty\n    \n    nt_pushLoop : empty\n    \n    LECTURA : cread left_par id nt_leer right_par semicolon\n    \n    nt_leer : empty\n    \n    ESCRITURA : cwrite left_par EXPRESION nt_escribir right_par semicolon\n    \n    nt_escribir : empty\n    \n    LLAMADA : id nt_verificaFuncId left_par nt_startERA LLAMADA_EXPRESION nt_verificaUltimo right_par semicolon nt_pushGoSub\n    \n    LLAMADA_EXPRESION : LLAMADA_EXPRESION_AUX\n                      | empty\n    \n    LLAMADA_EXPRESION_AUX : EXPRESION nt_verifyArgType\n                      | LLAMADA_EXPRESION_AUX comma nt_paramPP EXPRESION nt_verifyArgType\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B\n    \n    nt_checaAndOrNot : empty\n    \n    EXPRESION_NOT : not nt_pushPOper\n                | empty\n    \n\tEXPRESION_B : and nt_pushPOper EXPRESION\n\t           | or nt_pushPOper EXPRESION\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt nt_pushPOper EXP nt_checarRelop\n                        | gt nt_pushPOper EXP nt_checarRelop\n                        | ne nt_pushPOper EXP nt_checarRelop\n                        | ge nt_pushPOper EXP nt_checarRelop\n                        | le nt_pushPOper EXP nt_checarRelop\n                        | et nt_pushPOper EXP nt_checarRelop\n                        | empty\n    \n    nt_checarRelop : empty\n    \n    EXP : TERMINO nt_checar_sumas EXP_AUX\n    \n    nt_checar_sumas : empty\n    \n    EXP_AUX : plus nt_pushPOper EXP\n            | minus nt_pushPOper EXP\n            | empty\n    \n    TERMINO : FACTOR nt_checar_multis TERMINO_AUX\n    \n    nt_checar_multis : empty\n    \n    TERMINO_AUX : multiply nt_pushPOper TERMINO\n                | divide nt_pushPOper TERMINO\n                | empty\n    \n    FACTOR : left_par nt_pushPOper EXPRESION right_par nt_popPOper\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id nt_pushPilaO\n                | id nt_verificaFuncId LLAMADA_F\n    \n    nt_verificaFuncId : empty\n    \n    LLAMADA_F : left_par nt_startERA LLAMADAF_AUX nt_verificaUltimo right_par nt_pushGoSub\n    \n    LLAMADAF_AUX : LLAMADAF_AUX2\n                 | empty\n    \n    LLAMADAF_AUX2 : EXPRESION nt_verifyArgType\n                  | LLAMADAF_AUX2 comma nt_paramPP EXPRESION nt_verifyArgType\n    \n    nt_paramPP : empty\n    \n    nt_startERA : empty\n    \n    nt_verifyArgType : empty\n    \n    nt_verificaUltimo : empty\n    \n    nt_pushGoSub : empty\n    \n    LISTA : id left_sb EXP right_sb\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus nt_sigMas NUMERICA_AUX\n             | minus nt_sigMenos NUMERICA_AUX\n    \n    nt_sigMas : empty\n    \n    nt_sigMenos : empty\n    \n    NUMERICA_AUX : cteInt nt_pushInt\n                 | cteFloat nt_pushFloat\n    \n    nt_pushInt : empty\n    \n    nt_pushFloat : empty\n    \n    BOOLEANA : true\n             | false\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon\n    \n    nt_checaEquals : empty\n    \n    ASIGNACION_AUX : id nt_pushPilaO\n                   | LISTA\n    \n    nt_pushPilaO : empty\n    \n    nt_pushPOper : empty\n    \n    nt_popPOper : empty\n    \n    empty :\n    '
    
_lr_action_items = {'and':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,196,197,201,202,203,205,206,209,210,212,213,214,215,233,234,237,242,248,249,251,253,255,258,259,286,300,301,302,303,304,305,313,314,315,316,317,318,327,328,329,330,331,332,333,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,-160,-160,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,268,-95,-101,-108,-125,-142,-114,-110,-115,-119,-143,-160,-160,-160,-160,-160,-160,-160,-113,-112,-120,-159,-118,-117,-105,-109,-103,-104,-102,-106,-107,-136,-160,-127,]),'gt':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,197,201,202,203,205,206,209,210,212,213,214,215,248,249,251,253,255,258,259,286,313,314,315,316,317,318,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,236,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-125,-142,-114,-110,-115,-119,-143,-160,-113,-112,-120,-159,-118,-117,-136,-160,-127,]),'false':([126,130,132,133,153,154,155,156,166,177,178,179,188,198,199,200,211,235,236,238,239,240,241,246,247,250,252,256,257,268,270,272,273,274,275,276,277,282,283,284,285,287,288,298,299,307,308,312,338,347,],[-160,157,-160,-160,157,-160,-97,-160,-160,-158,-160,-160,157,-96,-160,-133,-160,-160,-160,-160,-160,-160,-160,-97,-160,-160,-160,-160,-160,-160,-160,157,157,157,157,157,157,-160,-160,157,157,157,157,-160,-160,-160,-132,-97,-160,-160,]),'right_sb':([80,92,93,118,140,157,158,159,160,161,163,164,165,167,168,169,170,171,172,173,174,201,202,203,205,206,209,210,212,213,214,215,248,249,251,253,255,258,259,286,313,314,315,316,317,318,344,346,348,],[-160,119,-21,-160,183,-151,201,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-125,-142,-114,-110,-115,-119,-143,-160,-113,-112,-120,-159,-118,-117,-136,-160,-127,]),'semicolon':([3,4,5,50,51,52,59,60,69,70,71,78,90,119,141,157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,183,196,197,201,202,203,205,206,209,210,212,213,214,215,220,224,227,231,233,234,237,242,248,249,251,253,255,258,259,260,261,262,269,271,286,300,301,302,303,304,305,306,313,314,315,316,317,318,325,326,327,328,329,330,331,332,333,344,346,348,],[-160,6,-4,57,-160,61,-20,-160,-160,-25,-22,-160,-26,-160,-18,-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,-160,-160,-160,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-160,-19,265,266,-160,-95,-101,-108,-125,-142,-114,-110,-115,-119,-143,289,290,-154,-94,-100,-160,-160,-160,-160,-160,-160,-160,334,-113,-112,-120,-159,-118,-117,-98,-99,-105,-109,-103,-104,-102,-106,-107,-136,-160,-127,]),'int':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,116,122,142,185,222,],[-160,-5,-160,-14,-160,-6,-12,-15,-160,-11,23,-2,23,-24,23,-17,-13,23,-7,-160,-10,-9,-8,-10,-54,-55,-23,-16,23,23,23,23,-160,-53,-47,-62,]),'float':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,116,122,142,185,222,],[-160,-5,-160,-14,-160,-6,-12,-15,-160,-11,24,-2,24,-24,24,-17,-13,24,-7,-160,-10,-9,-8,-10,-54,-55,-23,-16,24,24,24,24,-160,-53,-47,-62,]),'cteFloat':([126,130,132,133,153,154,155,156,162,166,175,177,178,179,188,198,199,200,207,208,211,216,217,235,236,238,239,240,241,246,247,250,252,256,257,268,270,272,273,274,275,276,277,282,283,284,285,287,288,298,299,307,308,312,338,347,],[-160,159,-160,-160,159,-160,-97,-160,-160,-160,-160,-158,-160,-160,159,-96,-160,-133,159,-144,-160,-145,159,-160,-160,-160,-160,-160,-160,-97,-160,-160,-160,-160,-160,-160,-160,159,159,159,159,159,159,-160,-160,159,159,159,159,-160,-160,-160,-132,-97,-160,-160,]),'left_sb':([53,59,63,72,79,103,161,],[-160,-20,73,-160,91,130,130,]),'multiply':([157,159,160,161,163,165,167,168,169,170,171,172,173,174,201,202,203,205,206,212,213,214,215,248,249,259,286,315,316,344,346,348,],[-151,-160,-139,-160,-123,-152,-150,-140,-121,-160,-141,-138,-160,-122,-137,-147,-149,-124,-157,-148,-146,257,-116,-125,-142,-143,-160,-120,-159,-136,-160,-127,]),'ge':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,197,201,202,203,205,206,209,210,212,213,214,215,248,249,251,253,255,258,259,286,313,314,315,316,317,318,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,235,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-125,-142,-114,-110,-115,-119,-143,-160,-113,-112,-120,-159,-118,-117,-136,-160,-127,]),'comma':([50,51,52,59,60,69,70,71,74,78,82,83,88,90,94,117,119,120,121,139,141,150,157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,182,183,191,196,197,201,202,203,205,206,209,210,212,213,214,215,223,224,233,234,237,242,243,245,248,249,251,253,255,258,259,269,271,278,279,286,300,301,302,303,304,305,309,311,313,314,315,316,317,318,325,326,327,328,329,330,331,332,333,335,336,344,345,346,348,349,350,],[58,-160,62,-20,-160,-160,-25,-22,-160,-160,-60,96,116,-26,-160,-160,-160,-61,-58,-64,-18,-160,-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,-160,-160,-59,-160,-160,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-65,-19,-160,-95,-101,-108,-160,282,-125,-142,-114,-110,-115,-119,-143,-94,-100,-134,-92,-160,-160,-160,-160,-160,-160,-160,-160,338,-113,-112,-120,-159,-118,-117,-98,-99,-105,-109,-103,-104,-102,-106,-107,-160,-130,-136,-93,-160,-127,-160,-131,]),'cread':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,110,113,114,123,127,136,137,144,145,147,148,149,181,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[-14,-12,-15,-11,-13,-23,-16,-160,98,-35,-36,-160,-68,-69,-66,-37,-70,-38,-71,-67,-33,98,-32,-160,-72,-34,-160,-160,-160,-43,-160,-44,-44,-160,-48,-42,98,-49,98,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'right_par':([74,82,83,88,94,117,120,121,139,150,151,152,156,157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,176,182,191,192,193,194,195,196,197,199,200,201,202,203,205,206,209,210,212,213,214,215,218,219,221,223,233,234,237,242,243,244,245,246,247,248,249,251,253,254,255,258,259,263,269,271,278,279,280,281,283,286,300,301,302,303,304,305,309,310,311,312,313,314,315,316,317,318,325,326,327,328,329,330,331,332,333,335,336,337,344,345,346,348,349,350,],[-160,-60,95,115,-160,-160,-61,-58,-64,-160,-160,-160,-160,-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,-160,-160,-59,231,-86,232,-79,-160,-160,-160,-133,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,260,-88,-160,-65,-160,-95,-101,-108,-160,-160,-90,-91,-160,-125,-142,-114,-110,286,-115,-119,-143,291,-94,-100,-134,-92,306,-135,-160,-160,-160,-160,-160,-160,-160,-160,-160,-160,-128,-129,-113,-112,-120,-159,-118,-117,-98,-99,-105,-109,-103,-104,-102,-106,-107,-160,-130,346,-136,-93,-160,-127,-160,-131,]),'cteString':([126,130,132,133,153,154,155,156,166,177,178,179,188,198,199,200,211,235,236,238,239,240,241,246,247,250,252,256,257,268,270,272,273,274,275,276,277,282,283,284,285,287,288,298,299,307,308,312,338,347,],[-160,165,-160,-160,165,-160,-97,-160,-160,-158,-160,-160,165,-96,-160,-133,-160,-160,-160,-160,-160,-160,-160,-97,-160,-160,-160,-160,-160,-160,-160,165,165,165,165,165,165,-160,-160,165,165,165,165,-160,-160,-160,-132,-97,-160,-160,]),'id':([1,9,12,13,15,22,23,24,25,28,31,32,34,35,36,37,38,39,40,44,47,48,49,57,58,61,62,76,81,84,85,86,87,89,97,99,101,102,106,107,108,109,110,113,114,123,124,125,126,127,130,132,133,136,137,138,144,145,147,148,149,153,154,155,156,166,177,178,179,181,186,187,188,189,190,198,199,200,211,225,226,228,229,230,235,236,238,239,240,241,246,247,250,252,256,257,264,265,266,267,268,270,272,273,274,275,276,277,282,283,284,285,287,288,289,290,292,293,294,297,298,299,307,308,312,319,320,321,334,338,339,340,341,342,343,344,347,],[3,-14,-12,-15,-11,-13,-160,-160,-160,-160,-160,-160,51,53,-27,-31,-28,54,-56,-29,-30,-63,56,-23,69,-16,72,-160,94,103,-35,-36,-160,117,-68,-69,-66,-37,-70,-38,-71,-67,-33,103,-32,-160,150,151,-160,-72,161,-160,-160,-34,-160,182,-160,-160,-43,-160,-44,161,-160,-97,-160,-160,-158,-160,-160,-44,-160,-48,161,-42,103,-96,-160,-133,-160,-49,103,-40,-45,-46,-160,-160,-160,-160,-160,-160,-97,-160,-160,-160,-160,-160,-41,-52,-85,-160,-160,-160,161,161,161,161,161,161,-160,-160,161,161,161,161,-87,-153,-160,-75,-74,-76,-160,-160,-160,-132,-97,-160,-73,-80,-160,-160,-82,-84,-78,-77,-89,-136,-160,]),'if':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,110,113,114,123,127,136,137,144,145,147,148,149,181,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[-14,-12,-15,-11,-13,-23,-16,-160,100,-35,-36,-160,-68,-69,-66,-37,-70,-38,-71,-67,-33,100,-32,-160,-72,-34,-160,-160,-160,-43,-160,-44,-44,-160,-48,-42,100,-49,100,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'le':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,197,201,202,203,205,206,209,210,212,213,214,215,248,249,251,253,255,258,259,286,313,314,315,316,317,318,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,240,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-125,-142,-114,-110,-115,-119,-143,-160,-113,-112,-120,-159,-118,-117,-136,-160,-127,]),'divide':([157,159,160,161,163,165,167,168,169,170,171,172,173,174,201,202,203,205,206,212,213,214,215,248,249,259,286,315,316,344,346,348,],[-151,-160,-139,-160,-123,-152,-150,-140,-121,-160,-141,-138,-160,-122,-137,-147,-149,-124,-157,-148,-146,256,-116,-125,-142,-143,-160,-120,-159,-136,-160,-127,]),'right_cb':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,110,113,114,127,136,137,144,145,147,148,180,181,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[-14,-12,-15,-11,-13,-23,-16,-160,-160,-35,-36,114,-68,-69,-66,-37,-70,-38,-71,-67,-33,-160,-32,-72,-34,-160,185,-39,-43,-160,222,-44,-160,-48,-42,-160,-49,-160,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'ne':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,197,201,202,203,205,206,209,210,212,213,214,215,248,249,251,253,255,258,259,286,313,314,315,316,317,318,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,238,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-125,-142,-114,-110,-115,-119,-143,-160,-113,-112,-120,-159,-118,-117,-136,-160,-127,]),'lt':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,197,201,202,203,205,206,209,210,212,213,214,215,248,249,251,253,255,258,259,286,313,314,315,316,317,318,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,239,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-125,-142,-114,-110,-115,-119,-143,-160,-113,-112,-120,-159,-118,-117,-136,-160,-127,]),'program':([0,],[1,]),'bool':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,116,122,142,185,222,],[-160,-5,-160,-14,-160,-6,-12,-15,-160,-11,28,-2,28,-24,28,-17,-13,28,-7,-160,-10,-9,-8,-10,-54,-55,-23,-16,28,28,28,28,-160,-53,-47,-62,]),'cwrite':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,110,113,114,123,127,136,137,144,145,147,148,149,181,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[-14,-12,-15,-11,-13,-23,-16,-160,104,-35,-36,-160,-68,-69,-66,-37,-70,-38,-71,-67,-33,104,-32,-160,-72,-34,-160,-160,-160,-43,-160,-44,-44,-160,-48,-42,104,-49,104,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'var':([6,9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,110,113,114,123,127,136,137,144,145,147,148,149,181,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[10,-14,-12,-15,10,-13,-23,-16,10,-160,-35,-36,10,-68,-69,-66,-37,-70,-38,-71,-67,-33,-160,-32,10,-72,-34,10,10,10,-43,-160,-44,-44,-160,-48,-42,-160,-49,-160,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'main':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,43,45,46,57,61,122,142,185,222,],[-160,-5,-160,-14,-6,-12,-15,-11,-160,-2,-13,-160,-7,-160,-10,-9,-8,-2,55,-54,-55,-23,-16,-160,-53,-47,-62,]),'$end':([2,75,114,],[0,-1,-32,]),'return':([9,12,13,15,22,57,61,97,99,101,106,108,109,114,123,127,143,144,145,146,147,148,149,181,184,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[-14,-12,-15,-11,-13,-23,-16,-68,-69,-66,-70,-71,-67,-32,-160,-72,-50,-160,-39,188,-43,-160,-44,-44,188,-160,-48,-42,-160,-49,-160,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'string':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,116,122,142,185,222,],[-160,-5,-160,-14,-160,-6,-12,-15,-160,-11,31,-2,31,-24,31,-17,-13,31,-7,-160,-10,-9,-8,-10,-54,-55,-23,-16,31,31,31,31,-160,-53,-47,-62,]),'et':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,197,201,202,203,205,206,209,210,212,213,214,215,248,249,251,253,255,258,259,286,313,314,315,316,317,318,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,241,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,-125,-142,-114,-110,-115,-119,-143,-160,-113,-112,-120,-159,-118,-117,-136,-160,-127,]),'void':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,45,46,57,61,122,142,185,222,],[-160,-5,-160,-14,-6,-12,-15,-11,32,-2,-13,32,-7,-160,-10,-9,-8,-10,-54,-55,-23,-16,-160,-53,-47,-62,]),'equals':([103,105,112,129,131,201,],[-160,133,-156,-155,-157,-137,]),'else':([114,267,],[-32,296,]),'elseif':([114,267,],[-32,295,]),'left_par':([54,56,64,65,68,98,100,103,104,111,126,128,130,131,132,133,134,135,153,154,155,156,161,166,177,178,179,188,198,199,200,204,206,211,235,236,238,239,240,241,246,247,250,252,256,257,268,270,272,273,274,275,276,277,282,283,284,285,287,288,295,298,299,307,308,312,322,323,338,347,],[-160,-160,74,-57,77,125,126,-160,132,-160,-160,156,166,-126,-160,-160,-83,179,166,-160,-97,-160,-160,-160,-158,-160,-160,166,-96,-160,-133,247,-126,-160,-160,-160,-160,-160,-160,-160,-97,-160,-160,-160,-160,-160,-160,-160,166,166,166,166,166,166,-160,-160,166,166,166,166,-160,-160,-160,-160,-132,-97,126,-81,-160,-160,]),'not':([126,132,133,156,166,177,178,179,199,200,211,247,268,270,282,283,298,299,307,308,338,347,],[154,154,-160,-160,-160,-158,154,154,154,-133,154,-160,-160,-160,-160,154,154,154,154,-132,-160,154,]),'true':([126,130,132,133,153,154,155,156,166,177,178,179,188,198,199,200,211,235,236,238,239,240,241,246,247,250,252,256,257,268,270,272,273,274,275,276,277,282,283,284,285,287,288,298,299,307,308,312,338,347,],[-160,167,-160,-160,167,-160,-97,-160,-160,-158,-160,-160,167,-96,-160,-133,-160,-160,-160,-160,-160,-160,-160,-97,-160,-160,-160,-160,-160,-160,-160,167,167,167,167,167,167,-160,-160,167,167,167,167,-160,-160,-160,-132,-97,-160,-160,]),'left_cb':([17,55,66,67,95,115,232,291,296,323,324,],[-2,-160,76,-3,123,137,76,76,-160,-81,76,]),'cteInt':([73,91,126,130,132,133,153,154,155,156,162,166,175,177,178,179,188,198,199,200,207,208,211,216,217,235,236,238,239,240,241,246,247,250,252,256,257,268,270,272,273,274,275,276,277,282,283,284,285,287,288,298,299,307,308,312,338,347,],[80,118,-160,170,-160,-160,170,-160,-97,-160,-160,-160,-160,-158,-160,-160,170,-96,-160,-133,170,-144,-160,-145,170,-160,-160,-160,-160,-160,-160,-97,-160,-160,-160,-160,-160,-160,-160,170,170,170,170,170,170,-160,-160,170,170,170,170,-160,-160,-160,-132,-97,-160,-160,]),'list':([6,9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,110,113,114,123,127,136,137,144,145,147,148,149,181,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[14,-14,-12,-15,14,-13,-23,-16,14,-160,-35,-36,14,-68,-69,-66,-37,-70,-38,-71,-67,-33,-160,-32,14,-72,-34,14,14,14,-43,-160,-44,-44,-160,-48,-42,-160,-49,-160,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'or':([157,159,160,161,163,164,165,167,168,169,170,171,172,173,174,196,197,201,202,203,205,206,209,210,212,213,214,215,233,234,237,242,248,249,251,253,255,258,259,286,300,301,302,303,304,305,313,314,315,316,317,318,327,328,329,330,331,332,333,344,346,348,],[-151,-160,-139,-160,-123,-160,-152,-150,-140,-121,-160,-141,-138,-160,-122,-160,-160,-137,-147,-149,-124,-157,-111,-160,-148,-146,-160,-116,270,-95,-101,-108,-125,-142,-114,-110,-115,-119,-143,-160,-160,-160,-160,-160,-160,-160,-113,-112,-120,-159,-118,-117,-105,-109,-103,-104,-102,-106,-107,-136,-160,-127,]),'while':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,110,113,114,123,127,136,137,144,145,147,148,149,181,186,187,189,190,225,226,228,229,230,264,265,266,267,289,290,292,293,294,297,319,320,321,334,339,340,341,342,343,344,],[-14,-12,-15,-11,-13,-23,-16,-160,111,-35,-36,-160,-68,-69,-66,-37,-70,-38,-71,-67,-33,111,-32,-160,-72,-34,-160,-160,-160,-43,-160,-44,-44,-160,-48,-42,111,-49,111,-40,-45,-46,-41,-52,-85,-160,-87,-153,-160,-75,-74,-76,-160,-73,-80,-160,-82,-84,-78,-77,-89,-136,]),'plus':([126,130,132,133,153,154,155,156,157,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,177,178,179,188,198,199,200,201,202,203,205,206,209,210,211,212,213,214,215,235,236,238,239,240,241,246,247,248,249,250,252,255,256,257,258,259,268,270,272,273,274,275,276,277,282,283,284,285,286,287,288,298,299,307,308,312,315,316,317,318,338,344,346,347,348,],[-160,162,-160,-160,162,-160,-97,-160,-151,-160,-139,-160,-123,-160,-152,-160,-150,-140,-121,-160,-141,-138,-160,-122,-158,-160,-160,162,-96,-160,-133,-137,-147,-149,-124,-157,-111,252,-160,-148,-146,-160,-116,-160,-160,-160,-160,-160,-160,-97,-160,-125,-142,-160,-160,-115,-160,-160,-119,-143,-160,-160,162,162,162,162,162,162,-160,-160,162,162,-160,162,162,-160,-160,-160,-132,-97,-120,-159,-118,-117,-160,-136,-160,-160,-127,]),'minus':([126,130,132,133,153,154,155,156,157,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,177,178,179,188,198,199,200,201,202,203,205,206,209,210,211,212,213,214,215,235,236,238,239,240,241,246,247,248,249,250,252,255,256,257,258,259,268,270,272,273,274,275,276,277,282,283,284,285,286,287,288,298,299,307,308,312,315,316,317,318,338,344,346,347,348,],[-160,175,-160,-160,175,-160,-97,-160,-151,-160,-139,-160,-123,-160,-152,-160,-150,-140,-121,-160,-141,-138,-160,-122,-158,-160,-160,175,-96,-160,-133,-137,-147,-149,-124,-157,-111,250,-160,-148,-146,-160,-116,-160,-160,-160,-160,-160,-160,-97,-160,-125,-142,-160,-160,-115,-160,-160,-119,-143,-160,-160,175,175,175,175,175,175,-160,-160,175,175,-160,175,175,-160,-160,-160,-132,-97,-120,-159,-118,-117,-160,-136,-160,-160,-127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'nt_cambioFuncActual':([25,],[39,]),'CICLO':([84,113,190,226,],[97,97,97,97,]),'VARS_LIST':([6,15,76,87,123,137,144,145,],[9,9,9,9,9,9,9,9,]),'TERMINO_AUX':([214,],[255,]),'CUERPO':([66,232,291,324,],[75,267,319,342,]),'EXP':([130,153,188,272,273,274,275,276,277,284,285,],[158,197,227,300,301,302,303,304,305,313,314,]),'CUERPO_AUX':([76,],[87,]),'nt_hacerVoid':([32,],[49,]),'LECTURA':([84,113,190,226,],[99,99,99,99,]),'ESCRITURA':([84,113,190,226,],[106,106,106,106,]),'nt_checarRelop':([300,301,302,303,304,305,],[327,329,330,331,332,333,]),'VOIDFUNC_PARA':([77,],[88,]),'nt_pushLoop':([319,],[339,]),'VOIDFUNC':([16,26,],[29,29,]),'EXPRESION_B':([233,],[269,]),'LLAMADA':([84,113,190,226,],[108,108,108,108,]),'nt_checar_multis':([173,],[214,]),'CONDICION':([84,113,190,226,],[109,109,109,109,]),'nt_pushGoSub':([334,346,],[343,348,]),'RETORNO':([146,184,],[187,225,]),'STRINGS':([130,153,188,272,273,274,275,276,277,284,285,287,288,],[168,168,168,168,168,168,168,168,168,168,168,168,168,]),'nt_agregarId':([51,53,69,72,],[60,63,78,79,]),'CUERPORETORNO_AUX':([123,],[144,]),'nt_pushPilaO':([103,161,],[129,205,]),'PROGRAMA':([0,],[2,]),'nt_sigMas':([162,],[207,]),'nt_cambiarScope':([8,26,55,],[16,43,67,]),'LISTA':([84,113,130,153,188,190,226,272,273,274,275,276,277,284,285,287,288,],[112,112,174,174,174,112,112,174,174,174,174,174,174,174,174,174,174,]),'FUNC_PARA':([74,],[83,]),'EXPRESIONLOGICA':([153,],[196,]),'nt_pushEndsub':([29,122,],[45,142,]),'PROGRAMA_VARS':([6,],[8,]),'nt_pushFloat':([159,],[202,]),'nt_funcInicio':([148,186,],[190,226,]),'nt_leer':([151,],[192,]),'CUERPOFUNC_AUX':([123,137,144,],[145,145,145,]),'CONDICION_AUX':([100,322,],[127,341,]),'nt_saltoLoop':([111,],[135,]),'CUERPOFUNC_ESTATUTO':([190,226,],[228,264,]),'nt_checaEquals':([220,],[261,]),'ASIGNACION':([84,113,190,226,],[101,101,101,101,]),'VARS_AUX':([6,76,87,123,137,144,145,],[15,15,15,15,15,15,15,]),'VARS_LIST_AUX':([35,],[52,]),'nt_pushElse':([295,296,],[322,324,]),'PROGRAMA_FUNC_AUX':([16,26,],[27,41,]),'nt_popPOper':([286,],[315,]),'CUERPOFUNC_VARS':([123,137,144,145,],[148,148,148,186,]),'ASIGNACION_AUX':([84,113,190,226,],[105,105,105,105,]),'FACTOR_AUX':([130,153,188,272,273,274,275,276,277,284,285,287,288,],[163,163,163,163,163,163,163,163,163,163,163,163,163,]),'NUMERICA_AUX':([130,153,188,207,217,272,273,274,275,276,277,284,285,287,288,],[171,171,171,249,259,171,171,171,171,171,171,171,171,171,171,]),'nt_startERA':([156,247,],[199,283,]),'nt_sigMenos':([175,],[217,]),'ELSE':([267,],[294,]),'CUERPORETORNO':([95,],[122,]),'FUNC':([16,26,],[33,33,]),'CUERPO_ESTATUTO':([84,113,],[110,136,]),'nt_hacerVar':([10,],[18,]),'CONSTANTE':([130,153,188,272,273,274,275,276,277,284,285,287,288,],[169,169,169,169,169,169,169,169,169,169,169,169,169,]),'nt_verificaFuncId':([103,161,],[128,204,]),'nt_verificaUltimo':([244,310,],[280,337,]),'NUMERICA':([130,153,188,272,273,274,275,276,277,284,285,287,288,],[172,172,172,172,172,172,172,172,172,172,172,172,172,]),'FACTOR':([130,153,188,272,273,274,275,276,277,284,285,287,288,],[173,173,173,173,173,173,173,173,173,173,173,173,173,]),'nt_checar_sumas':([164,],[210,]),'EXPRESION':([126,132,178,179,199,211,283,298,299,307,347,],[152,176,220,221,243,254,309,325,326,335,349,]),'EXPRESION_NOT':([126,132,178,179,199,211,283,298,299,307,347,],[153,153,153,153,153,153,153,153,153,153,153,]),'ELSE_ELIF':([267,],[292,]),'nt_agregarDicVar':([60,78,119,183,],[70,90,141,224,]),'BOOLEANA':([130,153,188,272,273,274,275,276,277,284,285,287,288,],[160,160,160,160,160,160,160,160,160,160,160,160,160,]),'nt_pushJmpMain':([3,],[4,]),'CUERPORETORNO_CF_AUX':([123,144,],[146,184,]),'CUERPOFUNC':([123,137,144,],[143,180,143,]),'nt_checaAndOrNot':([196,],[233,]),'PROGRAMA_FUNC':([16,],[26,]),'TERMINO':([130,153,188,272,273,274,275,276,277,284,285,287,288,],[164,164,164,164,164,164,164,164,164,164,164,317,318,]),'nt_pushInt':([170,],[213,]),'EXP_AUX':([210,],[253,]),'empty':([3,6,8,10,14,16,23,24,25,26,28,29,31,32,51,53,54,55,56,60,69,72,74,76,78,80,84,87,94,103,111,113,117,118,119,122,123,126,132,133,137,144,145,148,150,151,152,154,156,159,161,162,164,166,170,173,175,176,178,179,182,183,186,190,196,197,199,210,211,214,220,221,226,233,235,236,238,239,240,241,243,244,247,250,252,256,257,267,268,270,282,283,286,292,295,296,298,299,300,301,302,303,304,305,307,309,310,319,334,335,338,346,347,349,],[5,11,17,19,21,30,37,37,40,42,37,46,37,48,59,59,65,17,65,71,59,59,82,86,71,93,107,86,120,131,134,107,120,93,71,46,149,155,155,177,181,149,181,189,120,193,195,177,200,203,206,208,209,177,212,215,216,219,155,155,120,71,189,230,234,242,246,251,155,258,262,195,230,271,177,177,177,177,177,177,278,281,200,177,177,177,177,297,177,177,308,312,316,321,323,323,155,155,328,328,328,328,328,328,155,278,281,340,344,278,308,344,155,278,]),'nt_pushSalto':([292,],[320,]),'nt_verifyArgType':([243,309,335,349,],[279,336,345,350,]),'VARS_VAR_AUX':([34,],[50,]),'VARS_LIST_VAR':([6,15,76,87,123,137,144,145,],[12,22,12,12,12,12,12,12,]),'nt_agregarIdFunc':([54,56,],[64,68,]),'VARS_VAR':([6,15,76,87,123,137,144,145,],[13,13,13,13,13,13,13,13,]),'CUERPO_VARS':([76,87,],[84,113,]),'nt_hacerLista':([14,],[20,]),'nt_escribir':([176,],[218,]),'LLAMADA_EXPRESION_AUX':([199,],[245,]),'nt_agregarCteLista':([80,118,],[92,140,]),'nt_paramPP':([282,338,],[307,347,]),'ELIF':([267,],[293,]),'LLAMADA_EXPRESION':([199,],[244,]),'nt_ambienteMain':([55,],[66,]),'VARS':([6,76,87,123,137,144,145,],[7,85,85,147,147,147,147,]),'nt_checarBool':([152,221,],[194,263,]),'LLAMADA_F':([204,],[248,]),'TIPO':([16,18,20,26,74,77,96,116,],[25,34,35,25,81,89,124,138,]),'ESTATUTO':([84,113,190,226,],[102,102,229,229,]),'LLAMADAF_AUX2':([283,],[311,]),'nt_cambioTipoActual':([23,24,28,31,],[36,38,44,47,]),'nt_agregarParametro':([94,117,150,182,],[121,139,191,223,]),'nt_pushPOper':([133,154,166,235,236,238,239,240,241,250,252,256,257,268,270,],[178,198,211,272,273,274,275,276,277,284,285,287,288,298,299,]),'LLAMADAF_AUX':([283,],[310,]),'EXPRESIONLOGICA_AUX':([197,],[237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO','PROGRAMA',11,'p_PROGRAMA','CSP_yacc.py',36),
  ('nt_cambiarScope -> empty','nt_cambiarScope',1,'p_nt_cambiarScope','CSP_yacc.py',73),
  ('nt_ambienteMain -> nt_cambiarScope','nt_ambienteMain',1,'p_nt_ambienteMain','CSP_yacc.py',83),
  ('nt_pushJmpMain -> empty','nt_pushJmpMain',1,'p_nt_pushJmpMain','CSP_yacc.py',92),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',102),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',103),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',108),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',109),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',114),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',115),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',120),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',125),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',126),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',131),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',132),
  ('VARS_LIST -> list nt_hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',137),
  ('nt_hacerLista -> empty','nt_hacerLista',1,'p_nt_hacerLista','CSP_yacc.py',142),
  ('VARS_LIST_AUX -> id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',149),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',150),
  ('nt_agregarId -> empty','nt_agregarId',1,'p_nt_agregarId','CSP_yacc.py',155),
  ('nt_agregarCteLista -> empty','nt_agregarCteLista',1,'p_nt_agregarCteLista','CSP_yacc.py',162),
  ('nt_agregarDicVar -> empty','nt_agregarDicVar',1,'p_nt_agregarDicVar','CSP_yacc.py',169),
  ('VARS_VAR -> var nt_hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',185),
  ('nt_hacerVar -> empty','nt_hacerVar',1,'p_nt_hacerVar','CSP_yacc.py',189),
  ('VARS_VAR_AUX -> id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',196),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',197),
  ('TIPO -> int nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',202),
  ('TIPO -> float nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',203),
  ('TIPO -> bool nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',204),
  ('TIPO -> string nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',205),
  ('nt_cambioTipoActual -> empty','nt_cambioTipoActual',1,'p_nt_cambioTipoActual','CSP_yacc.py',210),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',217),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',222),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',223),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',229),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',230),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',235),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',236),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',241),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',246),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',4,'p_CUERPOFUNC_AUX','CSP_yacc.py',247),
  ('nt_funcInicio -> empty','nt_funcInicio',1,'p_nt_funcInicio','CSP_yacc.py',251),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',260),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',261),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',266),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',267),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',273),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',278),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',279),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',284),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',285),
  ('RETORNO -> return EXP semicolon','RETORNO',3,'p_RETORNO','CSP_yacc.py',292),
  ('FUNC -> TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub','FUNC',9,'p_FUNC','CSP_yacc.py',297),
  ('FUNC -> VOIDFUNC nt_pushEndsub','FUNC',2,'p_FUNC','CSP_yacc.py',298),
  ('nt_pushEndsub -> empty','nt_pushEndsub',1,'p_nt_pushEndsub','CSP_yacc.py',319),
  ('nt_cambioFuncActual -> empty','nt_cambioFuncActual',1,'p_nt_cambioFuncActual','CSP_yacc.py',330),
  ('nt_agregarIdFunc -> empty','nt_agregarIdFunc',1,'p_nt_agregarIdFunc','CSP_yacc.py',338),
  ('FUNC_PARA -> TIPO id nt_agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',345),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id nt_agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',346),
  ('FUNC_PARA -> empty','FUNC_PARA',1,'p_FUNC_PARA','CSP_yacc.py',347),
  ('nt_agregarParametro -> empty','nt_agregarParametro',1,'p_nt_agregarParametro','CSP_yacc.py',352),
  ('VOIDFUNC -> void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',365),
  ('nt_hacerVoid -> empty','nt_hacerVoid',1,'p_nt_hacerVoid','CSP_yacc.py',370),
  ('VOIDFUNC_PARA -> TIPO id nt_agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',379),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id nt_agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',380),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',385),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',386),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',387),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',388),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',389),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',390),
  ('CONDICION -> if CONDICION_AUX','CONDICION',2,'p_CONDICION','CSP_yacc.py',395),
  ('CONDICION_AUX -> left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto','CONDICION_AUX',7,'p_CONDICION_AUX','CSP_yacc.py',400),
  ('ELSE_ELIF -> ELSE','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',404),
  ('ELSE_ELIF -> ELIF','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',405),
  ('ELSE_ELIF -> empty','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',406),
  ('ELSE -> else nt_pushElse CUERPO','ELSE',3,'p_ELSE','CSP_yacc.py',411),
  ('ELIF -> elseif nt_pushElse CONDICION_AUX','ELIF',3,'p_ELIF','CSP_yacc.py',416),
  ('nt_checarBool -> empty','nt_checarBool',1,'p_nt_checarBool','CSP_yacc.py',423),
  ('nt_pushSalto -> empty','nt_pushSalto',1,'p_nt_pushSalto','CSP_yacc.py',447),
  ('nt_pushElse -> empty','nt_pushElse',1,'p_nt_pushElse','CSP_yacc.py',459),
  ('CICLO -> while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop','CICLO',8,'p_CICLO','CSP_yacc.py',476),
  ('nt_saltoLoop -> empty','nt_saltoLoop',1,'p_nt_saltoLoop','CSP_yacc.py',481),
  ('nt_pushLoop -> empty','nt_pushLoop',1,'p_nt_pushLoop','CSP_yacc.py',490),
  ('LECTURA -> cread left_par id nt_leer right_par semicolon','LECTURA',6,'p_LECTURA','CSP_yacc.py',504),
  ('nt_leer -> empty','nt_leer',1,'p_nt_leer','CSP_yacc.py',510),
  ('ESCRITURA -> cwrite left_par EXPRESION nt_escribir right_par semicolon','ESCRITURA',6,'p_ESCRITURA','CSP_yacc.py',534),
  ('nt_escribir -> empty','nt_escribir',1,'p_nt_escribir','CSP_yacc.py',539),
  ('LLAMADA -> id nt_verificaFuncId left_par nt_startERA LLAMADA_EXPRESION nt_verificaUltimo right_par semicolon nt_pushGoSub','LLAMADA',9,'p_LLAMADA','CSP_yacc.py',555),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION_AUX','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',560),
  ('LLAMADA_EXPRESION -> empty','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',561),
  ('LLAMADA_EXPRESION_AUX -> EXPRESION nt_verifyArgType','LLAMADA_EXPRESION_AUX',2,'p_LLAMADA_EXPRESION_AUX','CSP_yacc.py',566),
  ('LLAMADA_EXPRESION_AUX -> LLAMADA_EXPRESION_AUX comma nt_paramPP EXPRESION nt_verifyArgType','LLAMADA_EXPRESION_AUX',5,'p_LLAMADA_EXPRESION_AUX','CSP_yacc.py',567),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B','EXPRESION',4,'p_EXPRESION','CSP_yacc.py',572),
  ('nt_checaAndOrNot -> empty','nt_checaAndOrNot',1,'p_nt_checaAndOrNot','CSP_yacc.py',577),
  ('EXPRESION_NOT -> not nt_pushPOper','EXPRESION_NOT',2,'p_EXPRESION_NOT','CSP_yacc.py',627),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',628),
  ('EXPRESION_B -> and nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',633),
  ('EXPRESION_B -> or nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',634),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',635),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',640),
  ('EXPRESIONLOGICA_AUX -> lt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',645),
  ('EXPRESIONLOGICA_AUX -> gt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',646),
  ('EXPRESIONLOGICA_AUX -> ne nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',647),
  ('EXPRESIONLOGICA_AUX -> ge nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',648),
  ('EXPRESIONLOGICA_AUX -> le nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',649),
  ('EXPRESIONLOGICA_AUX -> et nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',650),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',651),
  ('nt_checarRelop -> empty','nt_checarRelop',1,'p_nt_checarRelop','CSP_yacc.py',656),
  ('EXP -> TERMINO nt_checar_sumas EXP_AUX','EXP',3,'p_EXP','CSP_yacc.py',690),
  ('nt_checar_sumas -> empty','nt_checar_sumas',1,'p_nt_checar_sumas','CSP_yacc.py',695),
  ('EXP_AUX -> plus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',731),
  ('EXP_AUX -> minus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',732),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',733),
  ('TERMINO -> FACTOR nt_checar_multis TERMINO_AUX','TERMINO',3,'p_TERMINO','CSP_yacc.py',739),
  ('nt_checar_multis -> empty','nt_checar_multis',1,'p_nt_checar_multis','CSP_yacc.py',744),
  ('TERMINO_AUX -> multiply nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',779),
  ('TERMINO_AUX -> divide nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',780),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',781),
  ('FACTOR -> left_par nt_pushPOper EXPRESION right_par nt_popPOper','FACTOR',5,'p_FACTOR','CSP_yacc.py',786),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',787),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',788),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',789),
  ('FACTOR_AUX -> id nt_pushPilaO','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',794),
  ('FACTOR_AUX -> id nt_verificaFuncId LLAMADA_F','FACTOR_AUX',3,'p_FACTOR_AUX','CSP_yacc.py',795),
  ('nt_verificaFuncId -> empty','nt_verificaFuncId',1,'p_nt_verificaFuncId','CSP_yacc.py',800),
  ('LLAMADA_F -> left_par nt_startERA LLAMADAF_AUX nt_verificaUltimo right_par nt_pushGoSub','LLAMADA_F',6,'p_LLAMADAF','CSP_yacc.py',815),
  ('LLAMADAF_AUX -> LLAMADAF_AUX2','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',820),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',821),
  ('LLAMADAF_AUX2 -> EXPRESION nt_verifyArgType','LLAMADAF_AUX2',2,'p_LLAMADAF_AUX2','CSP_yacc.py',826),
  ('LLAMADAF_AUX2 -> LLAMADAF_AUX2 comma nt_paramPP EXPRESION nt_verifyArgType','LLAMADAF_AUX2',5,'p_LLAMADAF_AUX2','CSP_yacc.py',827),
  ('nt_paramPP -> empty','nt_paramPP',1,'p_nt_paramPP','CSP_yacc.py',832),
  ('nt_startERA -> empty','nt_startERA',1,'p_nt_startERA','CSP_yacc.py',839),
  ('nt_verifyArgType -> empty','nt_verifyArgType',1,'p_nt_verifyArgType','CSP_yacc.py',852),
  ('nt_verificaUltimo -> empty','nt_verificaUltimo',1,'p_nt_verificaUltimo','CSP_yacc.py',879),
  ('nt_pushGoSub -> empty','nt_pushGoSub',1,'p_nt_pushGoSub','CSP_yacc.py',897),
  ('LISTA -> id left_sb EXP right_sb','LISTA',4,'p_LISTA','CSP_yacc.py',910),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',915),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',916),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',917),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',923),
  ('NUMERICA -> plus nt_sigMas NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',924),
  ('NUMERICA -> minus nt_sigMenos NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',925),
  ('nt_sigMas -> empty','nt_sigMas',1,'p_nt_sigMas','CSP_yacc.py',930),
  ('nt_sigMenos -> empty','nt_sigMenos',1,'p_nt_sigMenos','CSP_yacc.py',937),
  ('NUMERICA_AUX -> cteInt nt_pushInt','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',944),
  ('NUMERICA_AUX -> cteFloat nt_pushFloat','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',945),
  ('nt_pushInt -> empty','nt_pushInt',1,'p_nt_pushInt','CSP_yacc.py',951),
  ('nt_pushFloat -> empty','nt_pushFloat',1,'p_nt_pushFloat','CSP_yacc.py',970),
  ('BOOLEANA -> true','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',989),
  ('BOOLEANA -> false','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',990),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',1000),
  ('ASIGNACION -> ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon','ASIGNACION',6,'p_ASIGNACION','CSP_yacc.py',1010),
  ('nt_checaEquals -> empty','nt_checaEquals',1,'p_nt_checaEquals','CSP_yacc.py',1015),
  ('ASIGNACION_AUX -> id nt_pushPilaO','ASIGNACION_AUX',2,'p_ASIGNACION_AUX','CSP_yacc.py',1042),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',1043),
  ('nt_pushPilaO -> empty','nt_pushPilaO',1,'p_nt_pushPilaO','CSP_yacc.py',1048),
  ('nt_pushPOper -> empty','nt_pushPOper',1,'p_nt_pushPOper','CSP_yacc.py',1068),
  ('nt_popPOper -> empty','nt_popPOper',1,'p_nt_popPOper','CSP_yacc.py',1077),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',1084),
]
