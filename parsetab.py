
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et false float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string true var void while\n    PROGRAMA : program id semicolon PROGRAMA_VARS cambiarScope PROGRAMA_FUNC main CUERPO\n    \n    cambiarScope : empty\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    hacerLista : empty\n    \n    VARS_LIST_AUX : id agregarId left_sb cteInt agregarCteLista right_sb agregarDicVar\n                  | VARS_LIST_AUX comma id agregarId left_sb cteInt agregarCteLista right_sb agregarDicVar\n    \n    agregarId : empty\n    \n    agregarCteLista : empty\n    \n    agregarDicVar : empty\n    \n    VARS_VAR : var hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    hacerVar : empty\n    \n    VARS_VAR_AUX : id agregarId agregarDicVar\n                 | VARS_VAR_AUX comma id agregarId agregarDicVar\n    \n    TIPO : int cambioTipoActual\n         | float cambioTipoActual\n         | bool cambioTipoActual\n         | string cambioTipoActual\n    \n    cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO\n    \n    CUERPOFUNC_VARS : VARS\n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP semicolon\n    \n    FUNC : TIPO cambioFuncActual id agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO cambiarScope\n         | VOIDFUNC cambiarScope\n    \n    cambioFuncActual : empty\n    \n    agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id agregarParametro\n              | FUNC_PARA comma TIPO id agregarParametro\n    \n    agregarParametro : empty\n    \n    VOIDFUNC : void hacerVoid id agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id agregarParametro\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_ELSEIF CONDICION_ELSE \n    \n    CONDICION_ELSEIF : left_par EXPRESION right_par CUERPO\n                     | CONDICION_ELSEIF elseif left_par EXPRESION right_par CUERPO\n    \n    CONDICION_ELSE : else CUERPO\n                   | empty\n    \n    CICLO : while left_par EXPRESION right_par CUERPO\n    \n    LECTURA : cread left_par id right_par semicolon\n    \n    ESCRITURA : cwrite left_par EXPRESION right_par semicolon\n    \n    LLAMADA : left_par LLAMADA_EXPRESION right_par semicolon\n    \n    LLAMADA_EXPRESION : EXPRESION\n                      | LLAMADA_EXPRESION comma EXPRESION\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA EXPRESION_B\n    \n    EXPRESION_NOT : not\n                | empty\n    \n\tEXPRESION_B : and EXPRESION_NOT EXPRESIONLOGICA\n\t           | or EXPRESION_NOT EXPRESIONLOGICA\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt EXP\n                        | gt EXP\n                        | ne EXP\n                        | ge EXP\n                        | le EXP\n                        | et EXP\n                        | empty\n    \n    EXP : TERMINO EXP_AUX\n    \n    EXP_AUX : plus EXP\n            | minus EXP\n            | empty\n    \n    TERMINO : FACTOR TERMINO_AUX\n    \n    TERMINO_AUX : multiply TERMINO\n                | divide TERMINO\n                | empty\n    \n    FACTOR : left_par EXPRESION right_par\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id\n                | id LLAMADA_F\n    \n    LLAMADA_F : left_par EXPRESION LLAMADAF_AUX right_par\n    \n    LLAMADAF_AUX : comma EXPRESION LLAMADAF_AUX\n                    | empty\n    \n    LISTA : id left_sb EXP right_sb\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus NUMERICA_AUX\n             | minus NUMERICA_AUX\n    \n    NUMERICA_AUX : cteInt\n                 | cteFloat\n    \n    BOOLEANA : true\n             | false\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals EXPRESION semicolon\n    \n    ASIGNACION_AUX : id\n                   | LISTA\n    \n    empty :\n    '
    
_lr_action_items = {'and':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,145,146,162,164,165,168,170,171,174,175,183,189,207,208,209,210,211,215,216,217,218,219,220,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,178,-124,-109,-105,-92,-95,-114,-96,-99,-115,-84,-91,-93,-94,-100,-98,-97,-86,-85,-87,-88,-89,-90,-106,]),'gt':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,146,162,164,165,168,170,171,174,175,207,208,209,210,211,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,182,-109,-105,-92,-95,-114,-96,-99,-115,-93,-94,-100,-98,-97,-106,]),'false':([87,99,101,102,103,105,107,108,109,133,147,161,163,166,167,172,173,178,180,182,184,185,186,187,188,213,214,237,245,],[-124,-124,124,-124,-124,124,-79,-80,-124,-124,-124,-124,-124,124,124,124,124,-124,-124,124,124,124,124,124,124,124,124,-124,124,]),'right_sb':([96,116,117,124,125,126,127,128,129,130,131,132,134,135,136,137,138,140,141,156,162,164,165,168,170,171,174,175,201,207,208,209,210,211,254,],[-124,157,-19,-119,162,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,-124,-109,-105,-92,-95,-114,-96,-99,-115,234,-93,-94,-100,-98,-97,-106,]),'semicolon':([3,34,35,48,52,53,61,62,63,73,97,124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,144,145,146,148,157,158,162,164,165,168,170,171,174,175,176,179,181,183,189,202,207,208,209,210,211,215,216,217,218,219,220,234,239,240,252,254,258,],[4,50,-124,58,-124,-18,-124,-20,-23,-124,-24,-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,177,-124,-124,191,-124,203,-109,-105,-92,-95,-114,-96,-99,-115,212,-78,-83,-84,-91,-16,-93,-94,-100,-98,-97,-86,-85,-87,-88,-89,-90,-124,-81,-82,-17,-106,260,]),'int':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,26,28,29,30,32,41,45,50,58,93,94,152,154,195,222,242,250,],[-124,-124,-3,-12,-10,-124,-124,-9,-13,-4,22,-22,22,-2,22,-15,-11,22,-5,-124,-8,-7,-6,-51,-21,-14,22,22,22,22,-124,-50,-44,-57,]),'float':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,26,28,29,30,32,41,45,50,58,93,94,152,154,195,222,242,250,],[-124,-124,-3,-12,-10,-124,-124,-9,-13,-4,23,-22,23,-2,23,-15,-11,23,-5,-124,-8,-7,-6,-51,-21,-14,23,23,23,23,-124,-50,-44,-57,]),'cteFloat':([87,99,101,102,103,105,107,108,109,133,139,142,147,161,163,166,167,172,173,178,180,182,184,185,186,187,188,213,214,237,245,],[-124,-124,126,-124,-124,126,-79,-80,-124,-124,126,126,-124,-124,-124,126,126,126,126,-124,-124,126,126,126,126,126,126,126,126,-124,126,]),'left_sb':([49,53,60,71,80,95,128,],[-124,-18,72,-124,101,115,101,]),'multiply':([124,126,127,128,130,131,132,134,135,136,137,138,140,141,162,164,170,175,209,254,],[-119,-117,-111,-104,-103,-113,-120,-118,-112,-101,-116,-110,173,-102,-109,-105,-114,-115,-100,-106,]),'ge':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,146,162,164,165,168,170,171,174,175,207,208,209,210,211,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,186,-109,-105,-92,-95,-114,-96,-99,-115,-93,-94,-100,-98,-97,-106,]),'comma':([34,35,48,52,53,61,62,63,73,97,104,106,112,113,124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,145,146,150,155,157,162,164,165,168,170,171,174,175,179,181,183,189,190,193,194,200,202,206,207,208,209,210,211,215,216,217,218,219,220,230,233,234,239,240,249,251,252,254,255,],[51,-124,59,-124,-18,-124,-20,-23,-124,-24,-76,147,152,154,-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,-124,-124,-124,-124,-124,-109,-105,-92,-95,-114,-96,-99,-115,-78,-83,-84,-91,-77,-56,-54,-59,-16,237,-93,-94,-100,-98,-97,-86,-85,-87,-88,-89,-90,-124,-124,-124,-81,-82,-55,-60,-17,-106,237,]),'cread':([7,8,11,12,20,50,55,58,64,65,66,67,74,76,78,79,83,84,85,86,88,91,92,100,110,120,123,160,177,191,196,198,203,204,212,221,223,224,227,228,229,232,243,244,246,247,248,253,256,257,260,],[-12,-10,-9,-13,-11,-21,-124,-14,75,-33,-34,-124,-63,-64,-61,-35,-65,-36,-66,-62,-31,75,-30,-124,-32,-67,-71,-70,-121,-75,-124,-124,-73,-68,-74,-72,-124,-124,75,-41,-40,-41,75,-45,-38,-42,-43,-69,-46,-39,-49,]),'right_par':([104,106,112,113,118,119,124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,143,145,146,149,150,155,162,164,165,168,169,170,171,174,175,179,181,183,189,190,193,194,200,205,206,207,208,209,210,211,215,216,217,218,219,220,230,233,236,238,239,240,249,251,254,255,259,],[-76,148,151,153,158,159,-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,176,-124,-124,192,-124,-124,-109,-105,-92,-95,209,-114,-96,-99,-115,-78,-83,-84,-91,-77,-56,-54,-59,235,-124,-93,-94,-100,-98,-97,-86,-85,-87,-88,-89,-90,-124,-124,254,-108,-81,-82,-55,-60,-106,-124,-107,]),'cteString':([87,99,101,102,103,105,107,108,109,133,147,161,163,166,167,172,173,178,180,182,184,185,186,187,188,213,214,237,245,],[-124,-124,132,-124,-124,132,-79,-80,-124,-124,-124,-124,-124,132,132,132,132,-124,-124,132,132,132,132,132,132,132,132,-124,132,]),'id':([1,7,8,11,12,20,21,22,23,24,25,27,31,33,36,37,38,39,40,43,44,46,47,50,51,55,58,59,64,65,66,67,74,76,78,79,83,84,85,86,87,88,91,92,98,99,100,101,102,103,105,107,108,109,110,111,114,120,123,133,147,160,161,163,166,167,172,173,177,178,180,182,184,185,186,187,188,191,196,197,198,199,203,204,212,213,214,221,223,224,227,228,229,232,237,243,244,245,246,247,248,253,256,257,260,],[3,-12,-10,-9,-13,-11,35,-124,-124,-124,-124,-124,-124,49,-25,-29,-26,-27,-28,56,-52,57,-58,-21,61,-124,-14,71,80,-33,-34,-124,-63,-64,-61,-35,-65,-36,-66,-62,-124,-31,80,-30,118,-124,-124,128,-124,-124,128,-79,-80,-124,-32,150,155,-67,-71,-124,-124,-70,-124,-124,128,128,128,128,-121,-124,-124,128,128,128,128,128,128,-75,-124,230,-124,233,-73,-68,-74,128,128,-72,-124,-124,80,-41,-40,-41,-124,80,-45,128,-38,-42,-43,-69,-46,-39,-49,]),'if':([7,8,11,12,20,50,55,58,64,65,66,67,74,76,78,79,83,84,85,86,88,91,92,100,110,120,123,160,177,191,196,198,203,204,212,221,223,224,227,228,229,232,243,244,246,247,248,253,256,257,260,],[-12,-10,-9,-13,-11,-21,-124,-14,77,-33,-34,-124,-63,-64,-61,-35,-65,-36,-66,-62,-31,77,-30,-124,-32,-67,-71,-70,-121,-75,-124,-124,-73,-68,-74,-72,-124,-124,77,-41,-40,-41,77,-45,-38,-42,-43,-69,-46,-39,-49,]),'le':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,146,162,164,165,168,170,171,174,175,207,208,209,210,211,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,187,-109,-105,-92,-95,-114,-96,-99,-115,-93,-94,-100,-98,-97,-106,]),'divide':([124,126,127,128,130,131,132,134,135,136,137,138,140,141,162,164,170,175,209,254,],[-119,-117,-111,-104,-103,-113,-120,-118,-112,-101,-116,-110,172,-102,-109,-105,-114,-115,-100,-106,]),'right_cb':([7,8,11,12,20,50,55,58,64,65,66,67,74,76,78,79,83,84,85,86,88,91,92,100,110,120,123,160,177,191,198,203,204,212,221,223,224,227,229,231,232,243,244,246,247,248,253,256,257,260,],[-12,-10,-9,-13,-11,-21,-124,-14,-124,-33,-34,92,-63,-64,-61,-35,-65,-36,-66,-62,-31,-124,-30,-124,-32,-67,-71,-70,-121,-75,-124,-73,-68,-74,-72,242,-37,-124,-40,250,-41,-124,-45,-38,-42,-43,-69,-46,-39,-49,]),'ne':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,146,162,164,165,168,170,171,174,175,207,208,209,210,211,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,185,-109,-105,-92,-95,-114,-96,-99,-115,-93,-94,-100,-98,-97,-106,]),'lt':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,146,162,164,165,168,170,171,174,175,207,208,209,210,211,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,184,-109,-105,-92,-95,-114,-96,-99,-115,-93,-94,-100,-98,-97,-106,]),'program':([0,],[1,]),'bool':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,26,28,29,30,32,41,45,50,58,93,94,152,154,195,222,242,250,],[-124,-124,-3,-12,-10,-124,-124,-9,-13,-4,24,-22,24,-2,24,-15,-11,24,-5,-124,-8,-7,-6,-51,-21,-14,24,24,24,24,-124,-50,-44,-57,]),'cwrite':([7,8,11,12,20,50,55,58,64,65,66,67,74,76,78,79,83,84,85,86,88,91,92,100,110,120,123,160,177,191,196,198,203,204,212,221,223,224,227,228,229,232,243,244,246,247,248,253,256,257,260,],[-12,-10,-9,-13,-11,-21,-124,-14,81,-33,-34,-124,-63,-64,-61,-35,-65,-36,-66,-62,-31,81,-30,-124,-32,-67,-71,-70,-121,-75,-124,-124,-73,-68,-74,-72,-124,-124,81,-41,-40,-41,81,-45,-38,-42,-43,-69,-46,-39,-49,]),'var':([4,7,8,11,12,20,50,55,58,64,65,66,67,74,76,78,79,83,84,85,86,88,91,92,100,110,120,123,160,177,191,196,198,203,204,212,221,223,224,227,228,229,232,243,244,246,247,248,253,256,257,260,],[5,-12,-10,5,-13,-11,-21,5,-14,-124,-33,-34,5,-63,-64,-61,-35,-65,-36,-66,-62,-31,-124,-30,-124,-32,-67,-71,-70,-121,-75,5,5,-73,-68,-74,-72,5,5,-124,-41,-40,-41,-124,-45,-38,-42,-43,-69,-46,-39,-49,]),'main':([4,6,7,8,9,11,12,13,16,17,20,26,28,29,30,32,41,45,50,58,195,222,242,250,],[-124,-3,-12,-10,-124,-9,-13,-4,-124,-2,-11,42,-5,-124,-8,-7,-6,-51,-21,-14,-124,-50,-44,-57,]),'$end':([2,54,92,],[0,-1,-30,]),'return':([7,8,11,12,20,50,58,74,76,78,83,85,86,92,100,120,123,160,177,191,196,203,204,212,221,223,224,225,226,227,228,229,232,241,243,244,246,247,248,253,256,257,260,],[-12,-10,-9,-13,-11,-21,-14,-63,-64,-61,-65,-66,-62,-30,-124,-67,-71,-70,-121,-75,-124,-73,-68,-74,-72,-124,-37,245,-47,-124,-41,-40,-41,245,-124,-45,-38,-42,-43,-69,-46,-39,-49,]),'string':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,26,28,29,30,32,41,45,50,58,93,94,152,154,195,222,242,250,],[-124,-124,-3,-12,-10,-124,-124,-9,-13,-4,25,-22,25,-2,25,-15,-11,25,-5,-124,-8,-7,-6,-51,-21,-14,25,25,25,25,-124,-50,-44,-57,]),'et':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,146,162,164,165,168,170,171,174,175,207,208,209,210,211,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,188,-109,-105,-92,-95,-114,-96,-99,-115,-93,-94,-100,-98,-97,-106,]),'void':([4,6,7,8,9,11,12,13,16,17,20,26,28,29,30,32,41,45,50,58,195,222,242,250,],[-124,-3,-12,-10,-124,-9,-13,-4,31,-2,-11,31,-5,-124,-8,-7,-6,-51,-21,-14,-124,-50,-44,-57,]),'equals':([80,82,90,162,],[-122,103,-123,-109,]),'else':([92,100,204,253,],[-30,121,-68,-69,]),'elseif':([92,100,204,253,],[-30,122,-68,-69,]),'left_par':([7,8,11,12,20,50,55,56,57,58,64,65,66,67,68,69,70,74,75,76,77,78,79,81,83,84,85,86,87,88,89,91,92,99,100,101,102,103,105,107,108,109,110,120,122,123,128,133,147,160,161,163,166,167,172,173,177,178,180,182,184,185,186,187,188,191,196,198,203,204,212,213,214,221,223,224,227,228,229,232,237,243,244,245,246,247,248,253,256,257,260,],[-12,-10,-9,-13,-11,-21,-124,-124,-124,-14,87,-33,-34,-124,93,-53,94,-63,98,-64,99,-61,-35,102,-65,-36,-66,-62,-124,-31,109,87,-30,-124,-124,133,-124,-124,133,-79,-80,-124,-32,-67,161,-71,163,-124,-124,-70,-124,-124,133,133,133,133,-121,-124,-124,133,133,133,133,133,133,-75,-124,-124,-73,-68,-74,133,133,-72,-124,-124,87,-41,-40,-41,-124,87,-45,133,-38,-42,-43,-69,-46,-39,-49,]),'not':([87,99,102,103,109,133,147,161,163,178,180,237,],[107,107,107,107,107,107,107,107,107,107,107,107,]),'true':([87,99,101,102,103,105,107,108,109,133,147,161,163,166,167,172,173,178,180,182,184,185,186,187,188,213,214,237,245,],[-124,-124,134,-124,-124,134,-79,-80,-124,-124,-124,-124,-124,134,134,134,134,-124,-124,134,134,134,134,134,134,134,134,-124,134,]),'left_cb':([42,121,151,153,159,192,235,],[55,55,196,198,55,55,55,]),'cteInt':([72,87,99,101,102,103,105,107,108,109,115,133,139,142,147,161,163,166,167,172,173,178,180,182,184,185,186,187,188,213,214,237,245,],[96,-124,-124,137,-124,-124,137,-79,-80,-124,156,-124,137,137,-124,-124,-124,137,137,137,137,-124,-124,137,137,137,137,137,137,137,137,-124,137,]),'list':([4,7,8,11,12,20,50,55,58,64,65,66,67,74,76,78,79,83,84,85,86,88,91,92,100,110,120,123,160,177,191,196,198,203,204,212,221,223,224,227,228,229,232,243,244,246,247,248,253,256,257,260,],[10,-12,-10,10,-13,-11,-21,10,-14,-124,-33,-34,10,-63,-64,-61,-35,-65,-36,-66,-62,-31,-124,-30,-124,-32,-67,-71,-70,-121,-75,10,10,-73,-68,-74,-72,10,10,-124,-41,-40,-41,-124,-45,-38,-42,-43,-69,-46,-39,-49,]),'or':([124,126,127,128,129,130,131,132,134,135,136,137,138,140,141,145,146,162,164,165,168,170,171,174,175,183,189,207,208,209,210,211,215,216,217,218,219,220,254,],[-119,-117,-111,-104,-124,-103,-113,-120,-118,-112,-101,-116,-110,-124,-102,180,-124,-109,-105,-92,-95,-114,-96,-99,-115,-84,-91,-93,-94,-100,-98,-97,-86,-85,-87,-88,-89,-90,-106,]),'while':([7,8,11,12,20,50,55,58,64,65,66,67,74,76,78,79,83,84,85,86,88,91,92,100,110,120,123,160,177,191,196,198,203,204,212,221,223,224,227,228,229,232,243,244,246,247,248,253,256,257,260,],[-12,-10,-9,-13,-11,-21,-124,-14,89,-33,-34,-124,-63,-64,-61,-35,-65,-36,-66,-62,-31,89,-30,-124,-32,-67,-71,-70,-121,-75,-124,-124,-73,-68,-74,-72,-124,-124,89,-41,-40,-41,89,-45,-38,-42,-43,-69,-46,-39,-49,]),'plus':([87,99,101,102,103,105,107,108,109,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,147,161,162,163,164,166,167,170,171,172,173,174,175,178,180,182,184,185,186,187,188,209,210,211,213,214,237,245,254,],[-124,-124,139,-124,-124,139,-79,-80,-124,-119,-117,-111,-104,166,-103,-113,-120,-124,-118,-112,-101,-116,-110,-124,-102,-124,-124,-109,-124,-105,139,139,-114,-96,139,139,-99,-115,-124,-124,139,139,139,139,139,139,-100,-98,-97,139,139,-124,139,-106,]),'minus':([87,99,101,102,103,105,107,108,109,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,147,161,162,163,164,166,167,170,171,172,173,174,175,178,180,182,184,185,186,187,188,209,210,211,213,214,237,245,254,],[-124,-124,142,-124,-124,142,-79,-80,-124,-119,-117,-111,-104,167,-103,-113,-120,-124,-118,-112,-101,-116,-110,-124,-102,-124,-124,-109,-124,-105,142,142,-114,-96,142,142,-99,-115,-124,-124,142,142,142,142,142,142,-100,-98,-97,142,142,-124,142,-106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'EXPRESION':([87,99,102,103,109,133,147,161,163,237,],[104,119,143,144,149,169,190,205,206,255,]),'CONDICION_ELSE':([100,],[120,]),'hacerVoid':([31,],[46,]),'ESTATUTO':([64,91,227,243,],[79,79,247,247,]),'CICLO':([64,91,227,243,],[74,74,74,74,]),'VARS':([4,55,67,196,198,223,224,],[6,65,65,229,229,229,229,]),'PROGRAMA_VARS':([4,],[9,]),'VARS_LIST':([4,11,55,67,196,198,223,224,],[7,7,7,7,7,7,7,7,]),'agregarCteLista':([96,156,],[116,201,]),'cambioTipoActual':([22,23,24,25,],[36,38,39,40,]),'CUERPO':([42,121,159,192,235,],[54,160,204,221,253,]),'agregarId':([35,49,61,71,],[52,60,73,95,]),'LLAMADA_EXPRESION':([87,],[106,]),'BOOLEANA':([101,105,166,167,172,173,182,184,185,186,187,188,213,214,245,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'EXP':([101,105,166,167,182,184,185,186,187,188,213,214,245,],[125,146,207,208,215,216,217,218,219,220,146,146,258,]),'CUERPO_AUX':([55,],[67,]),'LLAMADA_F':([128,],[164,]),'CUERPOFUNC_AUX':([196,198,223,],[224,224,224,]),'TERMINO_AUX':([140,],[171,]),'LECTURA':([64,91,227,243,],[76,76,76,76,]),'ESCRITURA':([64,91,227,243,],[83,83,83,83,]),'CUERPOFUNC_ESTATUTO':([227,243,],[246,257,]),'CUERPORETORNO_CF_AUX':([196,223,],[225,241,]),'cambioFuncActual':([27,],[43,]),'TIPO':([14,16,18,26,93,94,152,154,],[21,27,33,27,111,114,197,199,]),'VOIDFUNC_PARA':([94,],[113,]),'VARS_LIST_AUX':([33,],[48,]),'hacerLista':([10,],[18,]),'STRINGS':([101,105,166,167,172,173,182,184,185,186,187,188,213,214,245,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'PROGRAMA_FUNC_AUX':([16,26,],[28,41,]),'cambiarScope':([9,29,195,],[16,45,222,]),'agregarParametro':([150,155,230,233,],[194,200,249,251,]),'TERMINO':([101,105,166,167,172,173,182,184,185,186,187,188,213,214,245,],[129,129,129,129,210,211,129,129,129,129,129,129,129,129,129,]),'CUERPOFUNC_VARS':([196,198,223,224,],[227,227,227,243,]),'agregarIdFunc':([56,57,],[68,70,]),'ASIGNACION_AUX':([64,91,227,243,],[82,82,82,82,]),'RETORNO':([225,241,],[244,256,]),'VOIDFUNC':([16,26,],[29,29,]),'NUMERICA_AUX':([101,105,139,142,166,167,172,173,182,184,185,186,187,188,213,214,245,],[131,131,170,175,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'empty':([4,5,9,10,16,22,23,24,25,26,27,29,31,35,49,52,55,56,57,61,64,67,71,73,87,91,96,99,100,102,103,109,129,133,140,145,146,147,150,155,156,157,161,163,178,180,195,196,198,206,223,224,227,230,233,234,237,243,255,],[13,15,17,19,30,37,37,37,37,30,44,17,47,53,53,62,66,69,69,53,84,66,53,62,108,84,117,108,123,108,108,108,168,108,174,181,189,108,193,193,117,62,108,108,108,108,17,228,232,238,228,232,248,193,193,62,108,248,238,]),'CONDICION_ELSEIF':([77,],[100,]),'agregarDicVar':([52,73,157,234,],[63,97,202,252,]),'EXPRESION_B':([145,],[179,]),'VARS_VAR_AUX':([21,],[34,]),'VARS_LIST_VAR':([4,11,55,67,196,198,223,224,],[8,20,8,8,8,8,8,8,]),'PROGRAMA_FUNC':([16,],[26,]),'CUERPORETORNO':([151,],[195,]),'LLAMADA':([64,91,227,243,],[85,85,85,85,]),'CONDICION':([64,91,227,243,],[86,86,86,86,]),'FUNC':([16,26,],[32,32,]),'VARS_VAR':([4,11,55,67,196,198,223,224,],[12,12,12,12,12,12,12,12,]),'CUERPO_VARS':([55,67,],[64,91,]),'CUERPO_ESTATUTO':([64,91,],[88,110,]),'LLAMADAF_AUX':([206,255,],[236,259,]),'hacerVar':([5,],[14,]),'ASIGNACION':([64,91,227,243,],[78,78,78,78,]),'EXPRESIONLOGICA_AUX':([146,],[183,]),'CONSTANTE':([101,105,166,167,172,173,182,184,185,186,187,188,213,214,245,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'FACTOR_AUX':([101,105,166,167,172,173,182,184,185,186,187,188,213,214,245,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'EXPRESION_NOT':([87,99,102,103,109,133,147,161,163,178,180,237,],[105,105,105,105,105,105,105,105,105,213,214,105,]),'EXP_AUX':([129,],[165,]),'VARS_AUX':([4,55,67,196,198,223,224,],[11,11,11,11,11,11,11,]),'NUMERICA':([101,105,166,167,172,173,182,184,185,186,187,188,213,214,245,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'CUERPORETORNO_AUX':([196,],[223,]),'PROGRAMA':([0,],[2,]),'CUERPOFUNC':([196,198,223,],[226,231,226,]),'FACTOR':([101,105,166,167,172,173,182,184,185,186,187,188,213,214,245,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'EXPRESIONLOGICA':([105,213,214,],[145,239,240,]),'LISTA':([64,91,101,105,166,167,172,173,182,184,185,186,187,188,213,214,227,243,245,],[90,90,141,141,141,141,141,141,141,141,141,141,141,141,141,141,90,90,141,]),'FUNC_PARA':([93,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id semicolon PROGRAMA_VARS cambiarScope PROGRAMA_FUNC main CUERPO','PROGRAMA',8,'p_PROGRAMA','CSP_yacc.py',22),
  ('cambiarScope -> empty','cambiarScope',1,'p_cambiarScope','CSP_yacc.py',28),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',40),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',41),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',46),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',47),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',52),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',53),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',58),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',63),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',64),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',69),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',70),
  ('VARS_LIST -> list hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',75),
  ('hacerLista -> empty','hacerLista',1,'p_hacerLista','CSP_yacc.py',80),
  ('VARS_LIST_AUX -> id agregarId left_sb cteInt agregarCteLista right_sb agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',87),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id agregarId left_sb cteInt agregarCteLista right_sb agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',88),
  ('agregarId -> empty','agregarId',1,'p_agregarId','CSP_yacc.py',93),
  ('agregarCteLista -> empty','agregarCteLista',1,'p_agregarCteLista','CSP_yacc.py',100),
  ('agregarDicVar -> empty','agregarDicVar',1,'p_agregarDicVar','CSP_yacc.py',107),
  ('VARS_VAR -> var hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',123),
  ('hacerVar -> empty','hacerVar',1,'p_hacerVar','CSP_yacc.py',127),
  ('VARS_VAR_AUX -> id agregarId agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',134),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id agregarId agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',135),
  ('TIPO -> int cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',140),
  ('TIPO -> float cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',141),
  ('TIPO -> bool cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',142),
  ('TIPO -> string cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',143),
  ('cambioTipoActual -> empty','cambioTipoActual',1,'p_cambioTipoActual','CSP_yacc.py',148),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',155),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',160),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',161),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',167),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',168),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',173),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',174),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',179),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',2,'p_CUERPOFUNC_AUX','CSP_yacc.py',184),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',185),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',190),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',191),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',196),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',197),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',203),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',208),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',209),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',214),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',215),
  ('RETORNO -> return EXP semicolon','RETORNO',3,'p_RETORNO','CSP_yacc.py',222),
  ('FUNC -> TIPO cambioFuncActual id agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO cambiarScope','FUNC',9,'p_FUNC','CSP_yacc.py',227),
  ('FUNC -> VOIDFUNC cambiarScope','FUNC',2,'p_FUNC','CSP_yacc.py',228),
  ('cambioFuncActual -> empty','cambioFuncActual',1,'p_cambioFuncActual','CSP_yacc.py',241),
  ('agregarIdFunc -> empty','agregarIdFunc',1,'p_agregarIdFunc','CSP_yacc.py',249),
  ('FUNC_PARA -> TIPO id agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',256),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',257),
  ('agregarParametro -> empty','agregarParametro',1,'p_agregarParametro','CSP_yacc.py',262),
  ('VOIDFUNC -> void hacerVoid id agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',275),
  ('hacerVoid -> empty','hacerVoid',1,'p_hacerVoid','CSP_yacc.py',280),
  ('VOIDFUNC_PARA -> TIPO id agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',289),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',290),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',295),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',296),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',297),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',298),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',299),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',300),
  ('CONDICION -> if CONDICION_ELSEIF CONDICION_ELSE','CONDICION',3,'p_CONDICION','CSP_yacc.py',305),
  ('CONDICION_ELSEIF -> left_par EXPRESION right_par CUERPO','CONDICION_ELSEIF',4,'p_CONDICION_ELSEIF','CSP_yacc.py',310),
  ('CONDICION_ELSEIF -> CONDICION_ELSEIF elseif left_par EXPRESION right_par CUERPO','CONDICION_ELSEIF',6,'p_CONDICION_ELSEIF','CSP_yacc.py',311),
  ('CONDICION_ELSE -> else CUERPO','CONDICION_ELSE',2,'p_CONDICION_ELSE','CSP_yacc.py',316),
  ('CONDICION_ELSE -> empty','CONDICION_ELSE',1,'p_CONDICION_ELSE','CSP_yacc.py',317),
  ('CICLO -> while left_par EXPRESION right_par CUERPO','CICLO',5,'p_CICLO','CSP_yacc.py',322),
  ('LECTURA -> cread left_par id right_par semicolon','LECTURA',5,'p_LECTURA','CSP_yacc.py',327),
  ('ESCRITURA -> cwrite left_par EXPRESION right_par semicolon','ESCRITURA',5,'p_ESCRITURA','CSP_yacc.py',332),
  ('LLAMADA -> left_par LLAMADA_EXPRESION right_par semicolon','LLAMADA',4,'p_LLAMADA','CSP_yacc.py',337),
  ('LLAMADA_EXPRESION -> EXPRESION','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',342),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION comma EXPRESION','LLAMADA_EXPRESION',3,'p_LLAMADA_EXPRESION','CSP_yacc.py',343),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA EXPRESION_B','EXPRESION',3,'p_EXPRESION','CSP_yacc.py',348),
  ('EXPRESION_NOT -> not','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',353),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',354),
  ('EXPRESION_B -> and EXPRESION_NOT EXPRESIONLOGICA','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',358),
  ('EXPRESION_B -> or EXPRESION_NOT EXPRESIONLOGICA','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',359),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',360),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',365),
  ('EXPRESIONLOGICA_AUX -> lt EXP','EXPRESIONLOGICA_AUX',2,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',370),
  ('EXPRESIONLOGICA_AUX -> gt EXP','EXPRESIONLOGICA_AUX',2,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',371),
  ('EXPRESIONLOGICA_AUX -> ne EXP','EXPRESIONLOGICA_AUX',2,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',372),
  ('EXPRESIONLOGICA_AUX -> ge EXP','EXPRESIONLOGICA_AUX',2,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',373),
  ('EXPRESIONLOGICA_AUX -> le EXP','EXPRESIONLOGICA_AUX',2,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',374),
  ('EXPRESIONLOGICA_AUX -> et EXP','EXPRESIONLOGICA_AUX',2,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',375),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',376),
  ('EXP -> TERMINO EXP_AUX','EXP',2,'p_EXP','CSP_yacc.py',381),
  ('EXP_AUX -> plus EXP','EXP_AUX',2,'p_EXP_AUX','CSP_yacc.py',386),
  ('EXP_AUX -> minus EXP','EXP_AUX',2,'p_EXP_AUX','CSP_yacc.py',387),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',388),
  ('TERMINO -> FACTOR TERMINO_AUX','TERMINO',2,'p_TERMINO','CSP_yacc.py',394),
  ('TERMINO_AUX -> multiply TERMINO','TERMINO_AUX',2,'p_TERMINO_AUX','CSP_yacc.py',399),
  ('TERMINO_AUX -> divide TERMINO','TERMINO_AUX',2,'p_TERMINO_AUX','CSP_yacc.py',400),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',401),
  ('FACTOR -> left_par EXPRESION right_par','FACTOR',3,'p_FACTOR','CSP_yacc.py',406),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',407),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',408),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',409),
  ('FACTOR_AUX -> id','FACTOR_AUX',1,'p_FACTOR_AUX','CSP_yacc.py',414),
  ('FACTOR_AUX -> id LLAMADA_F','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',415),
  ('LLAMADA_F -> left_par EXPRESION LLAMADAF_AUX right_par','LLAMADA_F',4,'p_LLAMADAF','CSP_yacc.py',420),
  ('LLAMADAF_AUX -> comma EXPRESION LLAMADAF_AUX','LLAMADAF_AUX',3,'p_LLAMADAF_AUX','CSP_yacc.py',425),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',426),
  ('LISTA -> id left_sb EXP right_sb','LISTA',4,'p_LISTA','CSP_yacc.py',431),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',436),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',437),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',438),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',443),
  ('NUMERICA -> plus NUMERICA_AUX','NUMERICA',2,'p_NUMERICA','CSP_yacc.py',444),
  ('NUMERICA -> minus NUMERICA_AUX','NUMERICA',2,'p_NUMERICA','CSP_yacc.py',445),
  ('NUMERICA_AUX -> cteInt','NUMERICA_AUX',1,'p_NUMERICA_AUX','CSP_yacc.py',450),
  ('NUMERICA_AUX -> cteFloat','NUMERICA_AUX',1,'p_NUMERICA_AUX','CSP_yacc.py',451),
  ('BOOLEANA -> true','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',456),
  ('BOOLEANA -> false','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',457),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',462),
  ('ASIGNACION -> ASIGNACION_AUX equals EXPRESION semicolon','ASIGNACION',4,'p_ASIGNACION','CSP_yacc.py',467),
  ('ASIGNACION_AUX -> id','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',472),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',473),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',478),
]
