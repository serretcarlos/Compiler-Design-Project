
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'False True and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string var void while\n    PROGRAMA : program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO nt_endQuad\n    \n    nt_cambiarScope : empty\n    \n    nt_ambienteMain : nt_cambiarScope\n    \n    nt_endQuad : empty\n    \n    nt_pushJmpMain : empty\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list nt_hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    nt_hacerLista : empty\n    \n    VARS_LIST_AUX : id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n                  | VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n    \n    nt_agregarId : empty\n    \n    nt_agregarCteLista : empty\n    \n    nt_agregarDicVar : empty\n    \n    VARS_VAR : var nt_hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    nt_hacerVar : empty\n    \n    VARS_VAR_AUX : id nt_agregarId nt_agregarDicVar\n                 | VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar\n    \n    TIPO : int nt_cambioTipoActual\n         | float nt_cambioTipoActual\n         | bool nt_cambioTipoActual\n         | string nt_cambioTipoActual\n    \n    nt_cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n    \n    nt_funcInicio : empty\n    \n    CUERPOFUNC_VARS : VARS \n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP nt_checaRet semicolon\n    \n    nt_checaRet : empty\n    \n    FUNC : TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub\n         | VOIDFUNC nt_pushEndsub\n    \n    nt_pushEndsub : empty\n    \n    nt_cambioFuncActual : empty\n    \n    nt_agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id nt_agregarParametro\n              | FUNC_PARA comma TIPO id nt_agregarParametro\n              | empty\n    \n    nt_agregarParametro : empty\n    \n    VOIDFUNC : void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    nt_hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id nt_agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id nt_agregarParametro\n                  | empty\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_AUX\n    \n    CONDICION_AUX : left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto\n    \n    ELSE_ELIF : ELSE\n              | ELIF\n              | empty\n    \n    ELSE : else nt_pushElse CUERPO\n    \n    ELIF : elseif nt_pushElse CONDICION_AUX\n    \n    nt_checarBool : empty\n    \n    nt_pushSalto : empty\n    \n    nt_pushElse : empty\n    \n    CICLO : while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop\n    \n    nt_saltoLoop : empty\n    \n    nt_pushLoop : empty\n    \n    LECTURA : cread left_par id nt_leer right_par semicolon\n    \n    nt_leer : empty\n    \n    ESCRITURA : cwrite left_par EXPRESION nt_escribir right_par semicolon\n    \n    nt_escribir : empty\n    \n    LLAMADA : id nt_verificaFuncIdLlamada left_par nt_pushPOper nt_startERA LLAMADA_EXPRESION nt_verificaUltimo right_par nt_popPOper semicolon nt_pushGoSub\n    \n    nt_verificaFuncIdLlamada : empty\n    \n    LLAMADA_EXPRESION : LLAMADA_EXPRESION_AUX\n                      | empty\n    \n    LLAMADA_EXPRESION_AUX : EXPRESION nt_verifyArgType\n                      | LLAMADA_EXPRESION_AUX comma nt_paramPP EXPRESION nt_verifyArgType\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B\n    \n    nt_checaAndOrNot : empty\n    \n    EXPRESION_NOT : not nt_pushPOper\n                | empty\n    \n\tEXPRESION_B : and nt_pushPOper EXPRESION\n\t           | or nt_pushPOper EXPRESION\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt nt_pushPOper EXP nt_checarRelop\n                        | gt nt_pushPOper EXP nt_checarRelop\n                        | ne nt_pushPOper EXP nt_checarRelop\n                        | ge nt_pushPOper EXP nt_checarRelop\n                        | le nt_pushPOper EXP nt_checarRelop\n                        | et nt_pushPOper EXP nt_checarRelop\n                        | empty\n    \n    nt_checarRelop : empty\n    \n    EXP : TERMINO nt_checar_sumas EXP_AUX\n    \n    nt_checar_sumas : empty\n    \n    EXP_AUX : plus nt_pushPOper EXP\n            | minus nt_pushPOper EXP\n            | empty\n    \n    TERMINO : FACTOR nt_checar_multis TERMINO_AUX\n    \n    nt_checar_multis : empty\n    \n    TERMINO_AUX : multiply nt_pushPOper TERMINO\n                | divide nt_pushPOper TERMINO\n                | empty\n    \n    FACTOR : left_par nt_pushPOper EXPRESION right_par nt_popPOper\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id nt_pushPilaO\n                | id nt_verificaFuncId LLAMADA_F\n    \n    nt_verificaFuncId : empty\n    \n    LLAMADA_F : left_par nt_pushPOper nt_startERA LLAMADAF_AUX nt_verificaUltimo right_par nt_popPOper nt_pushGoSub nt_asignarRet\n    \n    LLAMADAF_AUX : LLAMADAF_AUX2\n                 | empty\n    \n    LLAMADAF_AUX2 : EXPRESION nt_verifyArgType\n                  | LLAMADAF_AUX2 comma nt_paramPP EXPRESION nt_verifyArgType\n    \n    nt_paramPP : empty\n    \n    nt_startERA : empty\n    \n    nt_verifyArgType : empty\n    \n    nt_verificaUltimo : empty\n    \n    nt_pushGoSub : empty\n    \n    nt_asignarRet : empty\n    \n    LISTA : id nt_verificarVarDim left_sb EXP nt_pushVer right_sb nt_quadsAcceso\n    \n    nt_verificarVarDim : empty\n    \n    nt_pushVer : empty\n    \n    nt_quadsAcceso : empty\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus nt_sigMas NUMERICA_AUX\n             | minus nt_sigMenos NUMERICA_AUX\n    \n    nt_sigMas : empty\n    \n    nt_sigMenos : empty\n    \n    NUMERICA_AUX : cteInt nt_pushInt\n                 | cteFloat nt_pushFloat\n    \n    nt_pushInt : empty\n    \n    nt_pushFloat : empty\n    \n    BOOLEANA : True\n             | False\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon\n    \n    nt_checaEquals : empty\n    \n    ASIGNACION_AUX : id nt_pushPilaO nt_checaStruct\n                   | LISTA\n    \n    nt_checaStruct : empty\n    \n    nt_pushPilaO : empty\n    \n    nt_pushPOper : empty\n    \n    nt_popPOper : empty\n    \n    empty :\n    '
    
_lr_action_items = {'and':([183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,221,222,223,224,227,232,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,300,301,302,303,304,305,309,312,313,327,328,329,330,331,332,333,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-169,-147,-169,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,260,-99,-155,-157,-105,-112,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-169,-169,-169,-169,-169,-169,-142,-145,-109,-113,-107,-108,-106,-110,-111,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'gt':([184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,223,224,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,309,312,313,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-147,226,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-142,-145,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'right_sb':([80,95,96,121,143,184,185,187,189,190,191,193,194,195,196,197,198,199,200,201,204,223,224,233,234,238,239,241,242,243,244,247,248,271,272,274,276,278,281,282,283,309,312,313,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,122,-22,-169,170,-169,-147,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-169,-155,-157,-166,-128,-115,-169,-156,-154,-169,-120,-144,283,-129,-150,-118,-114,-119,-123,-151,-169,-169,-142,-145,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'semicolon':([3,4,5,50,51,52,59,60,69,70,71,78,93,122,144,170,183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,208,212,215,219,221,222,223,224,227,232,233,234,238,239,241,242,243,244,251,252,253,256,257,261,263,271,272,274,276,278,281,282,283,300,301,302,303,304,305,309,312,313,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,352,359,362,363,365,367,368,],[-169,6,-5,57,-169,61,-21,-169,-169,-26,-23,-169,-27,-169,-19,-169,-169,-169,-147,-169,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-169,-20,-169,258,-169,-99,-155,-157,-105,-112,-166,-128,-115,-169,-156,-154,-169,-120,288,289,-162,-54,291,-98,-104,-129,-150,-118,-114,-119,-123,-151,-169,-169,-169,-169,-169,-169,-169,-169,-142,-145,-102,-103,-109,-113,-107,-108,-106,-110,-111,-117,-116,-124,-168,-122,-121,-169,357,-169,-140,-169,-169,-131,-141,]),'int':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,172,210,],[-169,-6,-169,-15,-169,-7,-13,-16,-169,-12,23,-2,23,-25,23,-18,-14,23,-8,-169,-11,-10,-9,-11,-56,-57,-24,-17,23,23,23,23,-169,-55,-48,-64,]),'float':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,172,210,],[-169,-6,-169,-15,-169,-7,-13,-16,-169,-12,24,-2,24,-25,24,-18,-14,24,-8,-169,-11,-10,-9,-11,-56,-57,-24,-17,24,24,24,24,-169,-55,-48,-64,]),'cteFloat':([129,135,136,156,157,158,159,160,164,165,166,174,188,192,202,203,205,225,226,228,229,230,231,236,237,240,245,246,249,250,260,262,264,265,266,267,268,269,270,273,275,279,280,286,298,299,306,307,308,310,311,318,334,342,343,351,356,360,],[-169,-169,-169,184,-169,-101,184,-169,-167,-169,-169,184,-169,-169,-169,-100,-169,-169,-169,-169,-169,-169,-169,184,-152,-169,-153,184,-169,-137,-169,-169,184,184,184,184,184,184,-169,-169,-169,-169,-169,-101,-169,-169,-169,184,184,184,184,-169,-169,-169,-136,-101,-169,-169,]),'left_sb':([53,59,63,72,79,106,131,133,187,233,],[-169,-21,73,-169,94,-169,159,-143,-169,-143,]),'multiply':([184,185,187,189,191,193,194,195,196,197,198,199,200,201,223,224,233,234,241,242,243,244,271,272,282,283,309,312,313,337,338,359,362,363,365,367,368,],[-169,-147,-169,-127,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-156,-154,280,-120,-129,-150,-151,-169,-169,-142,-145,-124,-168,-169,-140,-169,-169,-131,-141,]),'ge':([184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,223,224,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,309,312,313,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-147,225,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-142,-145,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'comma':([50,51,52,59,60,69,70,71,74,77,78,82,83,90,91,93,97,120,122,123,124,142,144,153,169,170,178,183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,211,212,221,222,223,224,227,232,233,234,238,239,241,242,243,244,261,263,271,272,274,276,278,281,282,283,284,287,300,301,302,303,304,305,309,312,313,314,315,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,348,350,353,354,358,359,362,363,364,365,366,367,368,],[58,-169,62,-21,-169,-169,-26,-23,-169,-169,-169,-62,99,119,-68,-27,-169,-169,-169,-63,-60,-66,-19,-169,-169,-169,-61,-169,-169,-147,-169,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-67,-20,-169,-99,-155,-157,-105,-112,-166,-128,-115,-169,-156,-154,-169,-120,-98,-104,-129,-150,-118,-114,-119,-123,-151,-169,-169,318,-169,-169,-169,-169,-169,-169,-169,-142,-145,-138,-96,-102,-103,-109,-113,-107,-108,-106,-110,-111,-117,-116,-124,-168,-122,-121,-169,356,-169,-134,-97,-169,-140,-169,-169,-169,-135,-131,-141,]),'cread':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,168,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[-15,-13,-16,-12,-14,-24,-17,-169,101,-36,-37,-169,-71,-72,-69,-38,-73,-39,-74,-70,-34,101,-33,-169,-75,-35,-169,-169,-169,-44,-169,-45,-45,-169,-49,-43,101,-50,101,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'right_par':([74,77,82,83,90,91,97,120,123,124,142,153,154,155,160,163,164,169,178,179,180,181,182,183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,205,206,207,209,211,221,222,223,224,227,232,233,234,238,239,241,242,243,244,249,250,254,261,263,270,271,272,274,276,277,278,281,282,283,284,285,286,287,300,301,302,303,304,305,306,309,312,313,314,315,316,317,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,348,349,350,351,353,354,355,358,359,362,363,364,365,366,367,368,],[-169,-169,-62,98,118,-68,-169,-169,-63,-60,-66,-169,-169,-169,-169,-169,-167,-169,-61,219,-89,220,-82,-169,-169,-147,-169,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-169,251,-91,-169,-67,-169,-99,-155,-157,-105,-112,-166,-128,-115,-169,-156,-154,-169,-120,-169,-137,290,-98,-104,-169,-129,-150,-118,-114,309,-119,-123,-151,-169,-169,-169,-95,-94,-169,-169,-169,-169,-169,-169,-169,-169,-142,-145,-138,-96,341,-139,-102,-103,-109,-113,-107,-108,-106,-110,-111,-169,-117,-116,-124,-168,-122,-121,-169,-169,-132,-133,-169,-134,359,-97,-169,-140,-169,-169,-169,-135,-131,-141,]),'cteString':([129,135,136,156,157,158,159,160,164,165,166,174,192,203,205,225,226,228,229,230,231,240,249,250,260,262,264,265,266,267,268,269,270,273,275,279,280,286,298,299,306,307,308,310,311,318,334,342,343,351,356,360,],[-169,-169,-169,191,-169,-101,191,-169,-167,-169,-169,191,-169,-100,-169,-169,-169,-169,-169,-169,-169,-169,-169,-137,-169,-169,191,191,191,191,191,191,-169,-169,-169,-169,-169,-101,-169,-169,-169,191,191,191,191,-169,-169,-169,-136,-101,-169,-169,]),'id':([1,9,12,13,15,22,23,24,25,28,31,32,34,35,36,37,38,39,40,44,47,48,49,57,58,61,62,76,81,86,87,88,89,92,100,102,104,105,109,110,111,112,113,116,117,126,127,128,129,130,135,136,139,140,141,147,148,150,151,152,156,157,158,159,160,164,165,166,168,173,174,175,176,177,192,203,205,213,214,216,217,218,225,226,228,229,230,231,240,249,250,255,258,259,260,262,264,265,266,267,268,269,270,273,275,279,280,286,288,289,291,292,293,294,297,298,299,306,307,308,310,311,318,319,320,321,334,342,343,344,345,346,347,351,356,357,360,361,362,],[3,-15,-13,-16,-12,-14,-169,-169,-169,-169,-169,-169,51,53,-28,-32,-29,54,-58,-30,-31,-65,56,-24,69,-17,72,-169,97,106,-36,-37,-169,120,-71,-72,-69,-38,-73,-39,-74,-70,-34,106,-33,-169,153,154,-169,-75,-169,-169,-35,-169,169,-169,-169,-44,-169,-45,187,-169,-101,187,-169,-167,-169,-169,-45,-169,187,-49,-43,106,-169,-100,-169,-50,106,-41,-46,-47,-169,-169,-169,-169,-169,-169,-169,-169,-137,-42,-88,-169,-169,-169,187,187,187,187,187,187,-169,-169,-169,-169,-169,-101,-90,-161,-53,-169,-78,-77,-79,-169,-169,-169,187,187,187,187,-169,-169,-76,-83,-169,-169,-136,-85,-87,-81,-80,-101,-169,-169,-169,-92,-140,]),'if':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,168,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[-15,-13,-16,-12,-14,-24,-17,-169,103,-36,-37,-169,-71,-72,-69,-38,-73,-39,-74,-70,-34,103,-33,-169,-75,-35,-169,-169,-169,-44,-169,-45,-45,-169,-49,-43,103,-50,103,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'le':([184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,223,224,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,309,312,313,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-147,230,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-142,-145,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'divide':([184,185,187,189,191,193,194,195,196,197,198,199,200,201,223,224,233,234,241,242,243,244,271,272,282,283,309,312,313,337,338,359,362,363,365,367,368,],[-169,-147,-169,-127,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-156,-154,279,-120,-129,-150,-151,-169,-169,-142,-145,-124,-168,-169,-140,-169,-169,-131,-141,]),'right_cb':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,130,139,140,147,148,150,151,167,168,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[-15,-13,-16,-12,-14,-24,-17,-169,-169,-36,-37,117,-71,-72,-69,-38,-73,-39,-74,-70,-34,-169,-33,-75,-35,-169,172,-40,-44,-169,210,-45,-169,-49,-43,-169,-50,-169,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'ne':([184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,223,224,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,309,312,313,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-147,228,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-142,-145,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'lt':([184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,223,224,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,309,312,313,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-147,229,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-142,-145,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'program':([0,],[1,]),'bool':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,172,210,],[-169,-6,-169,-15,-169,-7,-13,-16,-169,-12,28,-2,28,-25,28,-18,-14,28,-8,-169,-11,-10,-9,-11,-56,-57,-24,-17,28,28,28,28,-169,-55,-48,-64,]),'cwrite':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,168,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[-15,-13,-16,-12,-14,-24,-17,-169,107,-36,-37,-169,-71,-72,-69,-38,-73,-39,-74,-70,-34,107,-33,-169,-75,-35,-169,-169,-169,-44,-169,-45,-45,-169,-49,-43,107,-50,107,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'var':([6,9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,168,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[10,-15,-13,-16,10,-14,-24,-17,10,-169,-36,-37,10,-71,-72,-69,-38,-73,-39,-74,-70,-34,-169,-33,10,-75,-35,10,10,10,-44,-169,-45,-45,-169,-49,-43,-169,-50,-169,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'main':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,43,45,46,57,61,125,145,172,210,],[-169,-6,-169,-15,-7,-13,-16,-12,-169,-2,-14,-169,-8,-169,-11,-10,-9,-2,55,-56,-57,-24,-17,-169,-55,-48,-64,]),'True':([129,135,136,156,157,158,159,160,164,165,166,174,192,203,205,225,226,228,229,230,231,240,249,250,260,262,264,265,266,267,268,269,270,273,275,279,280,286,298,299,306,307,308,310,311,318,334,342,343,351,356,360,],[-169,-169,-169,196,-169,-101,196,-169,-167,-169,-169,196,-169,-100,-169,-169,-169,-169,-169,-169,-169,-169,-169,-137,-169,-169,196,196,196,196,196,196,-169,-169,-169,-169,-169,-101,-169,-169,-169,196,196,196,196,-169,-169,-169,-136,-101,-169,-169,]),'$end':([2,75,84,85,117,],[0,-169,-4,-1,-33,]),'return':([9,12,13,15,22,57,61,100,102,104,109,111,112,117,126,130,146,147,148,149,150,151,152,168,171,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[-15,-13,-16,-12,-14,-24,-17,-71,-72,-69,-73,-74,-70,-33,-169,-75,-51,-169,-40,174,-44,-169,-45,-45,174,-169,-49,-43,-169,-50,-169,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'string':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,99,119,125,145,172,210,],[-169,-6,-169,-15,-169,-7,-13,-16,-169,-12,31,-2,31,-25,31,-18,-14,31,-8,-169,-11,-10,-9,-11,-56,-57,-24,-17,31,31,31,31,-169,-55,-48,-64,]),'et':([184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,223,224,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,309,312,313,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-147,231,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,-155,-157,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-142,-145,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'void':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,45,46,57,61,125,145,172,210,],[-169,-6,-169,-15,-7,-13,-16,-12,32,-2,-14,32,-8,-169,-11,-10,-9,-11,-56,-57,-24,-17,-169,-55,-48,-64,]),'equals':([106,108,115,133,134,161,162,283,312,313,],[-169,136,-164,-166,-169,-163,-165,-169,-142,-145,]),'else':([117,259,],[-33,296,]),'elseif':([117,259,],[-33,295,]),'left_par':([54,56,64,65,68,101,103,106,107,114,129,132,133,135,136,137,138,156,157,158,159,160,164,165,166,174,187,192,203,205,225,226,228,229,230,231,233,235,240,249,250,260,262,264,265,266,267,268,269,270,273,275,279,280,286,295,298,299,306,307,308,310,311,318,322,323,334,342,343,351,356,360,],[-169,-169,74,-59,77,128,129,-169,135,-169,-169,160,-93,-169,-169,-86,166,192,-169,-101,192,-169,-167,-169,-169,192,-169,-169,-100,-169,-169,-169,-169,-169,-169,-169,-130,270,-169,-169,-137,-169,-169,192,192,192,192,192,192,-169,-169,-169,-169,-169,-101,-169,-169,-169,-169,192,192,192,192,-169,129,-84,-169,-169,-136,-101,-169,-169,]),'not':([129,135,136,160,164,165,166,192,205,240,249,250,260,262,270,298,299,306,318,334,342,343,356,360,],[157,157,-169,-169,-167,157,157,-169,-169,157,157,-137,-169,-169,-169,157,157,-169,-169,157,157,-136,-169,157,]),'left_cb':([17,55,66,67,98,118,220,290,296,323,324,],[-2,-169,76,-3,126,140,76,76,-169,-84,76,]),'False':([129,135,136,156,157,158,159,160,164,165,166,174,192,203,205,225,226,228,229,230,231,240,249,250,260,262,264,265,266,267,268,269,270,273,275,279,280,286,298,299,306,307,308,310,311,318,334,342,343,351,356,360,],[-169,-169,-169,194,-169,-101,194,-169,-167,-169,-169,194,-169,-100,-169,-169,-169,-169,-169,-169,-169,-169,-169,-137,-169,-169,194,194,194,194,194,194,-169,-169,-169,-169,-169,-101,-169,-169,-169,194,194,194,194,-169,-169,-169,-136,-101,-169,-169,]),'cteInt':([73,94,129,135,136,156,157,158,159,160,164,165,166,174,188,192,202,203,205,225,226,228,229,230,231,236,237,240,245,246,249,250,260,262,264,265,266,267,268,269,270,273,275,279,280,286,298,299,306,307,308,310,311,318,334,342,343,351,356,360,],[80,121,-169,-169,-169,197,-169,-101,197,-169,-167,-169,-169,197,-169,-169,-169,-100,-169,-169,-169,-169,-169,-169,-169,197,-152,-169,-153,197,-169,-137,-169,-169,197,197,197,197,197,197,-169,-169,-169,-169,-169,-101,-169,-169,-169,197,197,197,197,-169,-169,-169,-136,-101,-169,-169,]),'list':([6,9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,168,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[14,-15,-13,-16,14,-14,-24,-17,14,-169,-36,-37,14,-71,-72,-69,-38,-73,-39,-74,-70,-34,-169,-33,14,-75,-35,14,14,14,-44,-169,-45,-45,-169,-49,-43,-169,-50,-169,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'or':([183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,221,222,223,224,227,232,233,234,238,239,241,242,243,244,271,272,274,276,278,281,282,283,300,301,302,303,304,305,309,312,313,327,328,329,330,331,332,333,335,336,337,338,339,340,359,362,363,365,367,368,],[-169,-169,-147,-169,-169,-127,-169,-160,-148,-159,-125,-158,-169,-149,-146,-169,-126,262,-99,-155,-157,-105,-112,-166,-128,-115,-169,-156,-154,-169,-120,-129,-150,-118,-114,-119,-123,-151,-169,-169,-169,-169,-169,-169,-169,-169,-142,-145,-109,-113,-107,-108,-106,-110,-111,-117,-116,-124,-168,-122,-121,-169,-140,-169,-169,-131,-141,]),'while':([9,12,13,15,22,57,61,76,86,87,88,89,100,102,104,105,109,110,111,112,113,116,117,126,130,139,140,147,148,150,151,152,168,173,175,176,177,213,214,216,217,218,255,258,259,288,289,291,292,293,294,297,319,320,321,344,345,346,347,357,361,362,],[-15,-13,-16,-12,-14,-24,-17,-169,114,-36,-37,-169,-71,-72,-69,-38,-73,-39,-74,-70,-34,114,-33,-169,-75,-35,-169,-169,-169,-44,-169,-45,-45,-169,-49,-43,114,-50,114,-41,-46,-47,-42,-88,-169,-90,-161,-53,-169,-78,-77,-79,-169,-76,-83,-85,-87,-81,-80,-169,-92,-140,]),'plus':([129,135,136,156,157,158,159,160,164,165,166,174,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,203,205,223,224,225,226,228,229,230,231,233,234,238,239,240,241,242,243,244,249,250,260,262,264,265,266,267,268,269,270,271,272,273,275,278,279,280,281,282,283,286,298,299,306,307,308,309,310,311,312,313,318,334,337,338,339,340,342,343,351,356,359,360,362,363,365,367,368,],[-169,-169,-169,188,-169,-101,188,-169,-167,-169,-169,188,-169,-147,-169,-127,-169,-160,-169,-148,-159,-125,-158,-169,-149,-146,-169,-126,-100,-169,-155,-157,-169,-169,-169,-169,-169,-169,-166,-128,-115,275,-169,-156,-154,-169,-120,-169,-137,-169,-169,188,188,188,188,188,188,-169,-129,-150,-169,-169,-119,-169,-169,-123,-151,-169,-101,-169,-169,-169,188,188,-169,188,188,-142,-145,-169,-169,-124,-168,-122,-121,-169,-136,-101,-169,-169,-169,-140,-169,-169,-131,-141,]),'minus':([129,135,136,156,157,158,159,160,164,165,166,174,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,203,205,223,224,225,226,228,229,230,231,233,234,238,239,240,241,242,243,244,249,250,260,262,264,265,266,267,268,269,270,271,272,273,275,278,279,280,281,282,283,286,298,299,306,307,308,309,310,311,312,313,318,334,337,338,339,340,342,343,351,356,359,360,362,363,365,367,368,],[-169,-169,-169,202,-169,-101,202,-169,-167,-169,-169,202,-169,-147,-169,-127,-169,-160,-169,-148,-159,-125,-158,-169,-149,-146,-169,-126,-100,-169,-155,-157,-169,-169,-169,-169,-169,-169,-166,-128,-115,273,-169,-156,-154,-169,-120,-169,-137,-169,-169,202,202,202,202,202,202,-169,-129,-150,-169,-169,-119,-169,-169,-123,-151,-169,-101,-169,-169,-169,202,202,-169,202,202,-142,-145,-169,-169,-124,-168,-122,-121,-169,-136,-101,-169,-169,-169,-140,-169,-169,-131,-141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'nt_asignarRet':([365,],[367,]),'nt_cambioFuncActual':([25,],[39,]),'CICLO':([86,116,177,214,],[100,100,100,100,]),'VARS_LIST':([6,15,76,89,126,140,147,148,],[9,9,9,9,9,9,9,9,]),'TERMINO_AUX':([243,],[278,]),'CUERPO':([66,220,290,324,],[75,259,319,347,]),'EXP':([156,159,174,264,265,266,267,268,269,307,308,],[186,204,215,300,301,302,303,304,305,335,336,]),'CUERPO_AUX':([76,],[89,]),'nt_hacerVoid':([32,],[49,]),'LECTURA':([86,116,177,214,],[102,102,102,102,]),'ESCRITURA':([86,116,177,214,],[109,109,109,109,]),'nt_checarRelop':([300,301,302,303,304,305,],[327,329,330,331,332,333,]),'VOIDFUNC_PARA':([77,],[90,]),'nt_quadsAcceso':([283,],[312,]),'nt_pushLoop':([319,],[344,]),'VOIDFUNC':([16,26,],[29,29,]),'EXPRESION_B':([221,],[261,]),'LLAMADA':([86,116,177,214,],[111,111,111,111,]),'nt_checar_multis':([200,],[243,]),'CONDICION':([86,116,177,214,],[112,112,112,112,]),'nt_pushGoSub':([357,363,],[361,365,]),'RETORNO':([149,171,],[175,213,]),'STRINGS':([156,159,174,264,265,266,267,268,269,307,308,310,311,],[193,193,193,193,193,193,193,193,193,193,193,193,193,]),'nt_agregarId':([51,53,69,72,],[60,63,78,79,]),'nt_checaStruct':([134,],[161,]),'CUERPORETORNO_AUX':([126,],[147,]),'nt_pushPilaO':([106,187,],[134,234,]),'PROGRAMA':([0,],[2,]),'nt_sigMas':([188,],[236,]),'nt_cambiarScope':([8,26,55,],[16,43,67,]),'LISTA':([86,116,156,159,174,177,214,264,265,266,267,268,269,307,308,310,311,],[115,115,201,201,201,115,115,201,201,201,201,201,201,201,201,201,201,]),'FUNC_PARA':([74,],[83,]),'EXPRESIONLOGICA':([156,],[183,]),'nt_pushEndsub':([29,125,],[45,145,]),'PROGRAMA_VARS':([6,],[8,]),'nt_pushFloat':([184,],[223,]),'nt_funcInicio':([151,173,],[177,214,]),'nt_leer':([154,],[179,]),'CUERPOFUNC_AUX':([126,140,147,],[148,148,148,]),'CONDICION_AUX':([103,322,],[130,346,]),'nt_saltoLoop':([114,],[138,]),'CUERPOFUNC_ESTATUTO':([177,214,],[216,255,]),'nt_checaEquals':([208,],[252,]),'ASIGNACION':([86,116,177,214,],[104,104,104,104,]),'VARS_AUX':([6,76,89,126,140,147,148,],[15,15,15,15,15,15,15,]),'VARS_LIST_AUX':([35,],[52,]),'nt_pushElse':([295,296,],[322,324,]),'PROGRAMA_FUNC_AUX':([16,26,],[27,41,]),'nt_popPOper':([309,341,359,],[337,352,363,]),'CUERPOFUNC_VARS':([126,140,147,148,],[151,151,151,173,]),'ASIGNACION_AUX':([86,116,177,214,],[108,108,108,108,]),'FACTOR_AUX':([156,159,174,264,265,266,267,268,269,307,308,310,311,],[189,189,189,189,189,189,189,189,189,189,189,189,189,]),'NUMERICA_AUX':([156,159,174,236,246,264,265,266,267,268,269,307,308,310,311,],[198,198,198,272,282,198,198,198,198,198,198,198,198,198,198,]),'nt_startERA':([205,306,],[249,334,]),'nt_sigMenos':([202,],[246,]),'ELSE':([259,],[294,]),'CUERPORETORNO':([98,],[125,]),'FUNC':([16,26,],[33,33,]),'nt_verificarVarDim':([106,187,],[131,131,]),'CUERPO_ESTATUTO':([86,116,],[113,139,]),'nt_hacerVar':([10,],[18,]),'CONSTANTE':([156,159,174,264,265,266,267,268,269,307,308,310,311,],[195,195,195,195,195,195,195,195,195,195,195,195,195,]),'nt_verificaFuncId':([187,],[235,]),'nt_verificaUltimo':([285,349,],[316,355,]),'NUMERICA':([156,159,174,264,265,266,267,268,269,307,308,310,311,],[199,199,199,199,199,199,199,199,199,199,199,199,199,]),'FACTOR':([156,159,174,264,265,266,267,268,269,307,308,310,311,],[200,200,200,200,200,200,200,200,200,200,200,200,200,]),'nt_checar_sumas':([190,],[239,]),'EXPRESION':([129,135,165,166,240,249,298,299,334,342,360,],[155,163,208,209,277,284,325,326,348,353,364,]),'EXPRESION_NOT':([129,135,165,166,240,249,298,299,334,342,360,],[156,156,156,156,156,156,156,156,156,156,156,]),'ELSE_ELIF':([259,],[292,]),'nt_agregarDicVar':([60,78,122,170,],[70,93,144,212,]),'BOOLEANA':([156,159,174,264,265,266,267,268,269,307,308,310,311,],[185,185,185,185,185,185,185,185,185,185,185,185,185,]),'nt_pushJmpMain':([3,],[4,]),'CUERPORETORNO_CF_AUX':([126,147,],[149,171,]),'CUERPOFUNC':([126,140,147,],[146,167,146,]),'nt_checaAndOrNot':([183,],[221,]),'PROGRAMA_FUNC':([16,],[26,]),'TERMINO':([156,159,174,264,265,266,267,268,269,307,308,310,311,],[190,190,190,190,190,190,190,190,190,190,190,339,340,]),'nt_pushInt':([197,],[242,]),'EXP_AUX':([239,],[276,]),'empty':([3,6,8,10,14,16,23,24,25,26,28,29,31,32,51,53,54,55,56,60,69,72,74,75,76,77,78,80,86,89,97,106,114,116,120,121,122,125,126,129,134,135,136,140,147,148,151,153,154,155,157,160,163,165,166,169,170,173,177,183,184,186,187,188,190,192,197,200,202,204,205,208,209,214,215,221,225,226,228,229,230,231,239,240,243,249,259,260,262,270,273,275,279,280,283,284,285,292,295,296,298,299,300,301,302,303,304,305,306,309,318,319,334,341,342,348,349,353,356,357,359,360,363,364,365,],[5,11,17,19,21,30,37,37,40,42,37,46,37,48,59,59,65,17,65,71,59,59,82,84,88,91,71,96,110,88,123,133,137,110,123,96,71,46,152,158,162,158,164,168,152,168,176,123,180,182,164,164,207,158,158,123,71,176,218,222,224,232,233,237,238,164,241,244,245,247,250,253,182,218,256,263,164,164,164,164,164,164,274,158,281,286,297,164,164,164,164,164,164,164,313,314,317,321,323,323,158,158,328,328,328,328,328,328,250,338,343,345,351,338,158,314,317,314,343,362,338,158,362,314,368,]),'nt_pushSalto':([292,],[320,]),'nt_verifyArgType':([284,348,353,364,],[315,354,358,366,]),'VARS_VAR_AUX':([34,],[50,]),'VARS_LIST_VAR':([6,15,76,89,126,140,147,148,],[12,22,12,12,12,12,12,12,]),'nt_agregarIdFunc':([54,56,],[64,68,]),'VARS_VAR':([6,15,76,89,126,140,147,148,],[13,13,13,13,13,13,13,13,]),'CUERPO_VARS':([76,89,],[86,116,]),'nt_hacerLista':([14,],[20,]),'nt_escribir':([163,],[206,]),'nt_pushVer':([204,],[248,]),'LLAMADA_EXPRESION_AUX':([249,],[287,]),'nt_agregarCteLista':([80,121,],[95,143,]),'nt_paramPP':([318,356,],[342,360,]),'ELIF':([259,],[293,]),'LLAMADA_EXPRESION':([249,],[285,]),'nt_ambienteMain':([55,],[66,]),'VARS':([6,76,89,126,140,147,148,],[7,87,87,150,150,150,150,]),'nt_checarBool':([155,209,],[181,254,]),'LLAMADA_F':([235,],[271,]),'TIPO':([16,18,20,26,74,77,99,119,],[25,34,35,25,81,92,127,141,]),'ESTATUTO':([86,116,177,214,],[105,105,217,217,]),'LLAMADAF_AUX2':([334,],[350,]),'nt_cambioTipoActual':([23,24,28,31,],[36,38,44,47,]),'nt_agregarParametro':([97,120,153,169,],[124,142,178,211,]),'nt_checaRet':([215,],[257,]),'nt_verificaFuncIdLlamada':([106,],[132,]),'nt_pushPOper':([136,157,160,192,225,226,228,229,230,231,260,262,270,273,275,279,280,],[165,203,205,240,264,265,266,267,268,269,298,299,306,307,308,310,311,]),'LLAMADAF_AUX':([334,],[349,]),'EXPRESIONLOGICA_AUX':([186,],[227,]),'nt_endQuad':([75,],[85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO nt_endQuad','PROGRAMA',12,'p_PROGRAMA','CSP_yacc.py',67),
  ('nt_cambiarScope -> empty','nt_cambiarScope',1,'p_nt_cambiarScope','CSP_yacc.py',114),
  ('nt_ambienteMain -> nt_cambiarScope','nt_ambienteMain',1,'p_nt_ambienteMain','CSP_yacc.py',124),
  ('nt_endQuad -> empty','nt_endQuad',1,'p_nt_endQuad','CSP_yacc.py',136),
  ('nt_pushJmpMain -> empty','nt_pushJmpMain',1,'p_nt_pushJmpMain','CSP_yacc.py',151),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',166),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',167),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',172),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',173),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',178),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',179),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',184),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',189),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',190),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',195),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',196),
  ('VARS_LIST -> list nt_hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',201),
  ('nt_hacerLista -> empty','nt_hacerLista',1,'p_nt_hacerLista','CSP_yacc.py',206),
  ('VARS_LIST_AUX -> id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',213),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',214),
  ('nt_agregarId -> empty','nt_agregarId',1,'p_nt_agregarId','CSP_yacc.py',219),
  ('nt_agregarCteLista -> empty','nt_agregarCteLista',1,'p_nt_agregarCteLista','CSP_yacc.py',236),
  ('nt_agregarDicVar -> empty','nt_agregarDicVar',1,'p_nt_agregarDicVar','CSP_yacc.py',248),
  ('VARS_VAR -> var nt_hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',271),
  ('nt_hacerVar -> empty','nt_hacerVar',1,'p_nt_hacerVar','CSP_yacc.py',276),
  ('VARS_VAR_AUX -> id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',285),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',286),
  ('TIPO -> int nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',291),
  ('TIPO -> float nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',292),
  ('TIPO -> bool nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',293),
  ('TIPO -> string nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',294),
  ('nt_cambioTipoActual -> empty','nt_cambioTipoActual',1,'p_nt_cambioTipoActual','CSP_yacc.py',299),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',306),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',311),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',312),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',317),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',318),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',323),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',324),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',329),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',334),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',4,'p_CUERPOFUNC_AUX','CSP_yacc.py',335),
  ('nt_funcInicio -> empty','nt_funcInicio',1,'p_nt_funcInicio','CSP_yacc.py',339),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',348),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',349),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',354),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',355),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',361),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',366),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',367),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',372),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',373),
  ('RETORNO -> return EXP nt_checaRet semicolon','RETORNO',4,'p_RETORNO','CSP_yacc.py',380),
  ('nt_checaRet -> empty','nt_checaRet',1,'p_nt_checaRet','CSP_yacc.py',385),
  ('FUNC -> TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub','FUNC',9,'p_FUNC','CSP_yacc.py',419),
  ('FUNC -> VOIDFUNC nt_pushEndsub','FUNC',2,'p_FUNC','CSP_yacc.py',420),
  ('nt_pushEndsub -> empty','nt_pushEndsub',1,'p_nt_pushEndsub','CSP_yacc.py',458),
  ('nt_cambioFuncActual -> empty','nt_cambioFuncActual',1,'p_nt_cambioFuncActual','CSP_yacc.py',468),
  ('nt_agregarIdFunc -> empty','nt_agregarIdFunc',1,'p_nt_agregarIdFunc','CSP_yacc.py',479),
  ('FUNC_PARA -> TIPO id nt_agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',505),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id nt_agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',506),
  ('FUNC_PARA -> empty','FUNC_PARA',1,'p_FUNC_PARA','CSP_yacc.py',507),
  ('nt_agregarParametro -> empty','nt_agregarParametro',1,'p_nt_agregarParametro','CSP_yacc.py',519),
  ('VOIDFUNC -> void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',538),
  ('nt_hacerVoid -> empty','nt_hacerVoid',1,'p_nt_hacerVoid','CSP_yacc.py',543),
  ('VOIDFUNC_PARA -> TIPO id nt_agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',551),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id nt_agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',552),
  ('VOIDFUNC_PARA -> empty','VOIDFUNC_PARA',1,'p_VOIDFUNC_PARA','CSP_yacc.py',553),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',563),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',564),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',565),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',566),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',567),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',568),
  ('CONDICION -> if CONDICION_AUX','CONDICION',2,'p_CONDICION','CSP_yacc.py',573),
  ('CONDICION_AUX -> left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto','CONDICION_AUX',7,'p_CONDICION_AUX','CSP_yacc.py',578),
  ('ELSE_ELIF -> ELSE','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',582),
  ('ELSE_ELIF -> ELIF','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',583),
  ('ELSE_ELIF -> empty','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',584),
  ('ELSE -> else nt_pushElse CUERPO','ELSE',3,'p_ELSE','CSP_yacc.py',589),
  ('ELIF -> elseif nt_pushElse CONDICION_AUX','ELIF',3,'p_ELIF','CSP_yacc.py',594),
  ('nt_checarBool -> empty','nt_checarBool',1,'p_nt_checarBool','CSP_yacc.py',599),
  ('nt_pushSalto -> empty','nt_pushSalto',1,'p_nt_pushSalto','CSP_yacc.py',623),
  ('nt_pushElse -> empty','nt_pushElse',1,'p_nt_pushElse','CSP_yacc.py',635),
  ('CICLO -> while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop','CICLO',8,'p_CICLO','CSP_yacc.py',652),
  ('nt_saltoLoop -> empty','nt_saltoLoop',1,'p_nt_saltoLoop','CSP_yacc.py',657),
  ('nt_pushLoop -> empty','nt_pushLoop',1,'p_nt_pushLoop','CSP_yacc.py',666),
  ('LECTURA -> cread left_par id nt_leer right_par semicolon','LECTURA',6,'p_LECTURA','CSP_yacc.py',680),
  ('nt_leer -> empty','nt_leer',1,'p_nt_leer','CSP_yacc.py',686),
  ('ESCRITURA -> cwrite left_par EXPRESION nt_escribir right_par semicolon','ESCRITURA',6,'p_ESCRITURA','CSP_yacc.py',710),
  ('nt_escribir -> empty','nt_escribir',1,'p_nt_escribir','CSP_yacc.py',715),
  ('LLAMADA -> id nt_verificaFuncIdLlamada left_par nt_pushPOper nt_startERA LLAMADA_EXPRESION nt_verificaUltimo right_par nt_popPOper semicolon nt_pushGoSub','LLAMADA',11,'p_LLAMADA','CSP_yacc.py',731),
  ('nt_verificaFuncIdLlamada -> empty','nt_verificaFuncIdLlamada',1,'p_nt_verificaFuncIdLlamada','CSP_yacc.py',736),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION_AUX','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',762),
  ('LLAMADA_EXPRESION -> empty','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',763),
  ('LLAMADA_EXPRESION_AUX -> EXPRESION nt_verifyArgType','LLAMADA_EXPRESION_AUX',2,'p_LLAMADA_EXPRESION_AUX','CSP_yacc.py',768),
  ('LLAMADA_EXPRESION_AUX -> LLAMADA_EXPRESION_AUX comma nt_paramPP EXPRESION nt_verifyArgType','LLAMADA_EXPRESION_AUX',5,'p_LLAMADA_EXPRESION_AUX','CSP_yacc.py',769),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B','EXPRESION',4,'p_EXPRESION','CSP_yacc.py',774),
  ('nt_checaAndOrNot -> empty','nt_checaAndOrNot',1,'p_nt_checaAndOrNot','CSP_yacc.py',779),
  ('EXPRESION_NOT -> not nt_pushPOper','EXPRESION_NOT',2,'p_EXPRESION_NOT','CSP_yacc.py',837),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',838),
  ('EXPRESION_B -> and nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',843),
  ('EXPRESION_B -> or nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',844),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',845),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',850),
  ('EXPRESIONLOGICA_AUX -> lt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',855),
  ('EXPRESIONLOGICA_AUX -> gt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',856),
  ('EXPRESIONLOGICA_AUX -> ne nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',857),
  ('EXPRESIONLOGICA_AUX -> ge nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',858),
  ('EXPRESIONLOGICA_AUX -> le nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',859),
  ('EXPRESIONLOGICA_AUX -> et nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',860),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',861),
  ('nt_checarRelop -> empty','nt_checarRelop',1,'p_nt_checarRelop','CSP_yacc.py',866),
  ('EXP -> TERMINO nt_checar_sumas EXP_AUX','EXP',3,'p_EXP','CSP_yacc.py',904),
  ('nt_checar_sumas -> empty','nt_checar_sumas',1,'p_nt_checar_sumas','CSP_yacc.py',909),
  ('EXP_AUX -> plus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',949),
  ('EXP_AUX -> minus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',950),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',951),
  ('TERMINO -> FACTOR nt_checar_multis TERMINO_AUX','TERMINO',3,'p_TERMINO','CSP_yacc.py',957),
  ('nt_checar_multis -> empty','nt_checar_multis',1,'p_nt_checar_multis','CSP_yacc.py',962),
  ('TERMINO_AUX -> multiply nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',1001),
  ('TERMINO_AUX -> divide nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',1002),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',1003),
  ('FACTOR -> left_par nt_pushPOper EXPRESION right_par nt_popPOper','FACTOR',5,'p_FACTOR','CSP_yacc.py',1008),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',1009),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',1010),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',1011),
  ('FACTOR_AUX -> id nt_pushPilaO','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',1016),
  ('FACTOR_AUX -> id nt_verificaFuncId LLAMADA_F','FACTOR_AUX',3,'p_FACTOR_AUX','CSP_yacc.py',1017),
  ('nt_verificaFuncId -> empty','nt_verificaFuncId',1,'p_nt_verificaFuncId','CSP_yacc.py',1022),
  ('LLAMADA_F -> left_par nt_pushPOper nt_startERA LLAMADAF_AUX nt_verificaUltimo right_par nt_popPOper nt_pushGoSub nt_asignarRet','LLAMADA_F',9,'p_LLAMADAF','CSP_yacc.py',1048),
  ('LLAMADAF_AUX -> LLAMADAF_AUX2','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',1053),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',1054),
  ('LLAMADAF_AUX2 -> EXPRESION nt_verifyArgType','LLAMADAF_AUX2',2,'p_LLAMADAF_AUX2','CSP_yacc.py',1059),
  ('LLAMADAF_AUX2 -> LLAMADAF_AUX2 comma nt_paramPP EXPRESION nt_verifyArgType','LLAMADAF_AUX2',5,'p_LLAMADAF_AUX2','CSP_yacc.py',1060),
  ('nt_paramPP -> empty','nt_paramPP',1,'p_nt_paramPP','CSP_yacc.py',1065),
  ('nt_startERA -> empty','nt_startERA',1,'p_nt_startERA','CSP_yacc.py',1072),
  ('nt_verifyArgType -> empty','nt_verifyArgType',1,'p_nt_verifyArgType','CSP_yacc.py',1085),
  ('nt_verificaUltimo -> empty','nt_verificaUltimo',1,'p_nt_verificaUltimo','CSP_yacc.py',1111),
  ('nt_pushGoSub -> empty','nt_pushGoSub',1,'p_nt_pushGoSub','CSP_yacc.py',1130),
  ('nt_asignarRet -> empty','nt_asignarRet',1,'p_nt_asignarRet','CSP_yacc.py',1143),
  ('LISTA -> id nt_verificarVarDim left_sb EXP nt_pushVer right_sb nt_quadsAcceso','LISTA',7,'p_LISTA','CSP_yacc.py',1170),
  ('nt_verificarVarDim -> empty','nt_verificarVarDim',1,'p_nt_verificaVarDim','CSP_yacc.py',1175),
  ('nt_pushVer -> empty','nt_pushVer',1,'p_nt_pushVer','CSP_yacc.py',1202),
  ('nt_quadsAcceso -> empty','nt_quadsAcceso',1,'p_nt_quadsAcceso','CSP_yacc.py',1269),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',1285),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',1286),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',1287),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',1293),
  ('NUMERICA -> plus nt_sigMas NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',1294),
  ('NUMERICA -> minus nt_sigMenos NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',1295),
  ('nt_sigMas -> empty','nt_sigMas',1,'p_nt_sigMas','CSP_yacc.py',1300),
  ('nt_sigMenos -> empty','nt_sigMenos',1,'p_nt_sigMenos','CSP_yacc.py',1307),
  ('NUMERICA_AUX -> cteInt nt_pushInt','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',1314),
  ('NUMERICA_AUX -> cteFloat nt_pushFloat','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',1315),
  ('nt_pushInt -> empty','nt_pushInt',1,'p_nt_pushInt','CSP_yacc.py',1321),
  ('nt_pushFloat -> empty','nt_pushFloat',1,'p_nt_pushFloat','CSP_yacc.py',1349),
  ('BOOLEANA -> True','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',1377),
  ('BOOLEANA -> False','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',1378),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',1400),
  ('ASIGNACION -> ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon','ASIGNACION',6,'p_ASIGNACION','CSP_yacc.py',1417),
  ('nt_checaEquals -> empty','nt_checaEquals',1,'p_nt_checaEquals','CSP_yacc.py',1422),
  ('ASIGNACION_AUX -> id nt_pushPilaO nt_checaStruct','ASIGNACION_AUX',3,'p_ASIGNACION_AUX','CSP_yacc.py',1449),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',1450),
  ('nt_checaStruct -> empty','nt_checaStruct',1,'p_nt_checaStruct','CSP_yacc.py',1455),
  ('nt_pushPilaO -> empty','nt_pushPilaO',1,'p_nt_pushPilaO','CSP_yacc.py',1474),
  ('nt_pushPOper -> empty','nt_pushPOper',1,'p_nt_pushPOper','CSP_yacc.py',1494),
  ('nt_popPOper -> empty','nt_popPOper',1,'p_nt_popPOper','CSP_yacc.py',1503),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',1510),
]
