
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et false float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string true var void while\n    PROGRAMA : program id semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC main nt_ambienteMain CUERPO\n    \n    nt_cambiarScope : empty\n    \n    nt_ambienteMain : nt_cambiarScope\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list nt_hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    nt_hacerLista : empty\n    \n    VARS_LIST_AUX : id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n                  | VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n    \n    nt_agregarId : empty\n    \n    nt_agregarCteLista : empty\n    \n    nt_agregarDicVar : empty\n    \n    VARS_VAR : var nt_hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    nt_hacerVar : empty\n    \n    VARS_VAR_AUX : id nt_agregarId nt_agregarDicVar\n                 | VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar\n    \n    TIPO : int nt_cambioTipoActual\n         | float nt_cambioTipoActual\n         | bool nt_cambioTipoActual\n         | string nt_cambioTipoActual\n    \n    nt_cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO\n    \n    CUERPOFUNC_VARS : VARS\n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP semicolon\n    \n    FUNC : TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_cambiarScope\n         | VOIDFUNC nt_cambiarScope\n    \n    nt_cambioFuncActual : empty\n    \n    nt_agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id nt_agregarParametro\n              | FUNC_PARA comma TIPO id nt_agregarParametro\n    \n    nt_agregarParametro : empty\n    \n    VOIDFUNC : void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    nt_hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id nt_agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id nt_agregarParametro\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_ELSEIF CONDICION_ELSE \n    \n    CONDICION_ELSEIF : left_par EXPRESION right_par CUERPO\n                     | CONDICION_ELSEIF elseif left_par EXPRESION right_par CUERPO\n    \n    CONDICION_ELSE : else CUERPO\n                   | empty\n    \n    CICLO : while left_par EXPRESION right_par CUERPO\n    \n    LECTURA : cread left_par id nt_leer right_par semicolon\n    \n    nt_leer : empty\n    \n    ESCRITURA : cwrite left_par EXPRESION nt_escribir right_par semicolon\n    \n    nt_escribir : empty\n    \n    LLAMADA : left_par LLAMADA_EXPRESION right_par semicolon\n    \n    LLAMADA_EXPRESION : EXPRESION\n                      | LLAMADA_EXPRESION comma EXPRESION\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B\n    \n    nt_checaAndOrNot : empty\n    \n    EXPRESION_NOT : not nt_pushPOper\n                | empty\n    \n\tEXPRESION_B : and nt_pushPOper EXPRESION\n\t           | or nt_pushPOper EXPRESION\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt nt_pushPOper EXP nt_checarRelop\n                        | gt nt_pushPOper EXP nt_checarRelop\n                        | ne nt_pushPOper EXP nt_checarRelop\n                        | ge nt_pushPOper EXP nt_checarRelop\n                        | le nt_pushPOper EXP nt_checarRelop\n                        | et nt_pushPOper EXP nt_checarRelop\n                        | empty\n    \n    nt_checarRelop : empty\n    \n    EXP : TERMINO nt_checar_sumas EXP_AUX\n    \n    nt_checar_sumas : empty\n    \n    EXP_AUX : plus nt_pushPOper EXP\n            | minus nt_pushPOper EXP\n            | empty\n    \n    TERMINO : FACTOR nt_checar_multis TERMINO_AUX\n    \n    nt_checar_multis : empty\n    \n    TERMINO_AUX : multiply nt_pushPOper TERMINO\n                | divide nt_pushPOper TERMINO\n                | empty\n    \n    FACTOR : left_par nt_pushPOper EXPRESION right_par nt_popPOper\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id nt_pushPilaO\n                | id LLAMADA_F\n    \n    LLAMADA_F : left_par EXPRESION LLAMADAF_AUX right_par\n    \n    LLAMADAF_AUX : comma EXPRESION LLAMADAF_AUX\n                    | empty\n    \n    LISTA : id left_sb EXP right_sb\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus nt_sigMas NUMERICA_AUX\n             | minus nt_sigMenos NUMERICA_AUX\n    \n    nt_sigMas : empty\n    \n    nt_sigMenos : empty\n    \n    NUMERICA_AUX : cteInt nt_pushInt\n                 | cteFloat nt_pushFloat\n    \n    nt_pushInt : empty\n    \n    nt_pushFloat : empty\n    \n    BOOLEANA : true\n             | false\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon\n    \n    nt_checaEquals : empty\n    \n    ASIGNACION_AUX : id nt_pushPilaO\n                   | LISTA\n    \n    nt_pushPilaO : empty\n    \n    nt_pushPOper : empty\n    \n    nt_popPOper : empty\n    \n    empty :\n    '
    
_lr_action_items = {'and':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,158,159,179,180,181,182,184,187,188,190,191,192,193,199,200,203,208,229,231,233,235,238,239,273,280,281,282,283,284,285,290,292,293,294,295,296,297,300,301,302,303,304,305,306,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,-139,-139,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,243,-82,-88,-95,-121,-101,-97,-102,-106,-122,-139,-139,-139,-139,-139,-139,-139,-113,-100,-99,-107,-138,-105,-104,-92,-96,-90,-91,-89,-93,-94,]),'gt':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,159,179,180,181,182,184,187,188,190,191,192,193,229,231,233,235,238,239,273,290,292,293,294,295,296,297,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,202,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-121,-101,-97,-102,-106,-122,-139,-113,-100,-99,-107,-138,-105,-104,]),'false':([93,108,110,113,114,116,118,119,120,145,156,157,160,162,178,183,189,201,202,204,205,206,207,230,232,236,237,243,245,247,248,249,250,251,252,258,269,271,272,274,275,278,279,],[-139,-139,136,-139,-139,136,-139,-84,-139,-139,-137,-139,-139,-83,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,136,136,136,136,136,136,136,-139,136,136,136,136,-139,-139,]),'right_sb':([79,105,106,112,128,136,137,138,139,140,142,143,144,146,147,148,149,150,151,152,153,172,179,180,181,182,184,187,188,190,191,192,193,229,231,233,235,238,239,273,290,292,293,294,295,296,297,],[-139,129,-20,-136,-139,-130,179,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,224,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-121,-101,-97,-102,-106,-122,-139,-113,-100,-99,-107,-138,-105,-104,]),'semicolon':([3,46,47,48,56,57,66,67,68,77,103,112,129,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,158,159,161,173,179,180,181,182,184,187,188,190,191,192,193,198,199,200,203,208,224,225,229,231,233,235,238,239,240,241,242,244,246,265,273,280,281,282,283,284,285,288,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,],[4,54,-139,58,-19,-139,-139,-24,-21,-139,-25,-136,-139,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,-139,-139,210,-17,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-139,-139,-82,-88,-95,-139,266,-121,-101,-97,-102,-106,-122,276,277,-133,-81,-87,-18,-139,-139,-139,-139,-139,-139,-139,307,-113,-100,-99,-107,-138,-105,-104,-85,-86,-92,-96,-90,-91,-89,-93,-94,]),'int':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,124,126,166,212,255,263,],[-139,-4,-13,-139,-139,-5,-11,-14,-139,-10,22,-2,22,-23,22,-16,-12,22,-6,-139,-9,-8,-7,-52,-22,-15,22,22,22,22,-139,-51,-45,-58,]),'float':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,124,126,166,212,255,263,],[-139,-4,-13,-139,-139,-5,-11,-14,-139,-10,23,-2,23,-23,23,-16,-12,23,-6,-139,-9,-8,-7,-52,-22,-15,23,23,23,23,-139,-51,-45,-58,]),'cteFloat':([93,108,110,113,114,116,118,119,120,141,145,154,156,157,160,162,178,183,185,186,189,194,195,201,202,204,205,206,207,230,232,236,237,243,245,247,248,249,250,251,252,258,269,271,272,274,275,278,279,],[-139,-139,138,-139,-139,138,-139,-84,-139,-139,-139,-139,-137,-139,-139,-83,-139,-139,138,-123,-139,-124,138,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,138,138,138,138,138,138,138,-139,138,138,138,138,-139,-139,]),'left_sb':([49,56,60,69,78,86,140,],[-139,-19,70,-139,104,110,110,]),'multiply':([112,136,138,139,140,142,144,146,147,148,149,150,151,152,153,179,180,181,182,184,190,191,192,193,229,239,273,290,294,295,],[-136,-130,-139,-118,-139,-110,-131,-129,-119,-108,-139,-120,-117,-139,-109,-116,-126,-128,-111,-112,-127,-125,237,-103,-121,-122,-139,-113,-107,-138,]),'ge':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,159,179,180,181,182,184,187,188,190,191,192,193,229,231,233,235,238,239,273,290,292,293,294,295,296,297,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,201,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-121,-101,-97,-102,-106,-122,-139,-113,-100,-99,-107,-138,-105,-104,]),'comma':([46,47,48,56,57,66,67,68,77,100,101,103,112,115,117,122,127,129,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,158,159,164,165,171,173,179,180,181,182,184,187,188,190,191,192,193,199,200,203,208,209,220,223,224,228,229,231,233,235,238,239,244,246,262,264,265,273,280,281,282,283,284,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,],[55,-139,59,-19,-139,-139,-24,-21,-139,124,126,-25,-136,-79,160,-139,-139,-139,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,-139,-139,-57,-55,-60,-17,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-139,-82,-88,-95,-80,-139,-139,-139,269,-121,-101,-97,-102,-106,-122,-81,-87,-56,-61,-18,-139,-139,-139,-139,-139,-139,-139,-113,269,-100,-99,-107,-138,-105,-104,-85,-86,-92,-96,-90,-91,-89,-93,-94,]),'cread':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,121,132,135,167,169,177,210,213,214,217,218,219,222,226,253,256,257,259,260,261,266,276,277,286,287,289,307,],[-13,-11,-14,-10,-12,-22,-15,-139,81,-34,-35,-139,-64,-65,-62,-36,-66,-37,-67,-63,-32,81,-31,-139,-33,-68,-72,-139,-139,-71,-78,-139,-139,81,-42,-41,-42,-69,-73,81,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'right_par':([100,101,112,115,117,122,127,130,131,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,155,158,159,163,164,165,171,174,175,179,180,181,182,184,187,188,190,191,192,193,196,197,199,200,203,208,209,220,223,227,228,229,231,233,234,235,238,239,244,246,262,264,268,270,273,280,281,282,283,284,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,],[123,125,-136,-79,161,-139,-139,-139,176,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,-139,-139,-139,211,-57,-55,-60,225,-75,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,240,-77,-139,-82,-88,-95,-80,-139,-139,267,-139,-121,-101,-97,273,-102,-106,-122,-81,-87,-56,-61,290,-115,-139,-139,-139,-139,-139,-139,-139,-113,-139,-100,-99,-107,-138,-105,-104,-85,-86,-92,-96,-90,-91,-89,-93,-94,-114,]),'cteString':([93,108,110,113,114,116,118,119,120,145,156,157,160,162,178,183,189,201,202,204,205,206,207,230,232,236,237,243,245,247,248,249,250,251,252,258,269,271,272,274,275,278,279,],[-139,-139,144,-139,-139,144,-139,-84,-139,-139,-137,-139,-139,-83,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,144,144,144,144,144,144,144,-139,144,144,144,144,-139,-139,]),'id':([1,6,10,11,13,20,22,23,24,26,29,30,32,33,36,37,38,39,40,41,43,44,45,54,55,58,59,62,71,72,73,74,80,82,84,85,89,90,91,92,93,94,97,98,99,102,107,108,109,110,113,114,116,118,119,120,121,132,135,145,156,157,160,162,167,168,169,170,177,178,183,189,201,202,204,205,206,207,210,213,214,217,218,219,222,226,230,232,236,237,243,245,247,248,249,250,251,252,253,256,257,258,259,260,261,266,269,271,272,274,275,276,277,278,279,286,287,289,307,],[3,-13,-11,-14,-10,-12,-139,-139,-139,-139,-139,-139,47,49,-26,-30,-27,52,-53,-28,-29,-59,53,-22,66,-15,69,-139,86,-34,-35,-139,-64,-65,-62,-36,-66,-37,-67,-63,-139,-32,86,-31,122,127,130,-139,-139,140,-139,-139,140,-139,-84,-139,-33,-68,-72,-139,-137,-139,-139,-83,-139,220,-139,223,-71,-139,-139,-139,-139,-139,-139,-139,-139,-139,-78,-139,-139,86,-42,-41,-42,-69,-139,-139,-139,-139,-139,-139,140,140,140,140,140,140,-73,86,-46,140,-39,-43,-44,-74,-139,140,140,140,140,-76,-132,-139,-139,-47,-40,-70,-50,]),'if':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,121,132,135,167,169,177,210,213,214,217,218,219,222,226,253,256,257,259,260,261,266,276,277,286,287,289,307,],[-13,-11,-14,-10,-12,-22,-15,-139,83,-34,-35,-139,-64,-65,-62,-36,-66,-37,-67,-63,-32,83,-31,-139,-33,-68,-72,-139,-139,-71,-78,-139,-139,83,-42,-41,-42,-69,-73,83,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'le':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,159,179,180,181,182,184,187,188,190,191,192,193,229,231,233,235,238,239,273,290,292,293,294,295,296,297,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,206,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-121,-101,-97,-102,-106,-122,-139,-113,-100,-99,-107,-138,-105,-104,]),'divide':([112,136,138,139,140,142,144,146,147,148,149,150,151,152,153,179,180,181,182,184,190,191,192,193,229,239,273,290,294,295,],[-136,-130,-139,-118,-139,-110,-131,-129,-119,-108,-139,-120,-117,-139,-109,-116,-126,-128,-111,-112,-127,-125,236,-103,-121,-122,-139,-113,-107,-138,]),'right_cb':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,121,132,135,169,177,210,213,214,217,219,221,222,226,253,256,257,259,260,261,266,276,277,286,287,289,307,],[-13,-11,-14,-10,-12,-22,-15,-139,-139,-34,-35,98,-64,-65,-62,-36,-66,-37,-67,-63,-32,-139,-31,-139,-33,-68,-72,-139,-71,-78,255,-38,-139,-41,263,-42,-69,-73,-139,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'ne':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,159,179,180,181,182,184,187,188,190,191,192,193,229,231,233,235,238,239,273,290,292,293,294,295,296,297,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,204,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-121,-101,-97,-102,-106,-122,-139,-113,-100,-99,-107,-138,-105,-104,]),'lt':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,159,179,180,181,182,184,187,188,190,191,192,193,229,231,233,235,238,239,273,290,292,293,294,295,296,297,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,205,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-121,-101,-97,-102,-106,-122,-139,-113,-100,-99,-107,-138,-105,-104,]),'program':([0,],[1,]),'bool':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,124,126,166,212,255,263,],[-139,-4,-13,-139,-139,-5,-11,-14,-139,-10,26,-2,26,-23,26,-16,-12,26,-6,-139,-9,-8,-7,-52,-22,-15,26,26,26,26,-139,-51,-45,-58,]),'cwrite':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,121,132,135,167,169,177,210,213,214,217,218,219,222,226,253,256,257,259,260,261,266,276,277,286,287,289,307,],[-13,-11,-14,-10,-12,-22,-15,-139,87,-34,-35,-139,-64,-65,-62,-36,-66,-37,-67,-63,-32,87,-31,-139,-33,-68,-72,-139,-139,-71,-78,-139,-139,87,-42,-41,-42,-69,-73,87,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'var':([4,6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,121,132,135,167,169,177,210,213,214,217,218,219,222,226,253,256,257,259,260,261,266,276,277,286,287,289,307,],[8,-13,-11,-14,8,-12,-22,-15,8,-139,-34,-35,8,-64,-65,-62,-36,-66,-37,-67,-63,-32,-139,-31,-139,-33,-68,-72,8,8,-71,-78,8,8,-139,-42,-41,-42,-69,-73,-139,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'main':([4,5,6,7,9,10,11,13,14,15,20,21,25,27,28,31,34,42,54,58,166,212,255,263,],[-139,-4,-13,-139,-5,-11,-14,-10,-139,-2,-12,35,-6,-139,-9,-8,-7,-52,-22,-15,-139,-51,-45,-58,]),'$end':([2,61,98,],[0,-1,-31,]),'return':([6,10,11,13,20,54,58,80,82,84,89,91,92,98,109,132,135,167,177,210,213,214,215,216,217,218,219,222,226,253,254,256,257,259,260,261,266,276,277,286,287,289,307,],[-13,-11,-14,-10,-12,-22,-15,-64,-65,-62,-66,-67,-63,-31,-139,-68,-72,-139,-71,-78,-139,-38,258,-48,-139,-42,-41,-42,-69,-73,258,-139,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'string':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,124,126,166,212,255,263,],[-139,-4,-13,-139,-139,-5,-11,-14,-139,-10,29,-2,29,-23,29,-16,-12,29,-6,-139,-9,-8,-7,-52,-22,-15,29,29,29,29,-139,-51,-45,-58,]),'et':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,159,179,180,181,182,184,187,188,190,191,192,193,229,231,233,235,238,239,273,290,292,293,294,295,296,297,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,207,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,-121,-101,-97,-102,-106,-122,-139,-113,-100,-99,-107,-138,-105,-104,]),'void':([4,5,6,7,9,10,11,13,14,15,20,21,25,27,28,31,34,42,54,58,166,212,255,263,],[-139,-4,-13,-139,-5,-11,-14,-10,30,-2,-12,30,-6,-139,-9,-8,-7,-52,-22,-15,-139,-51,-45,-58,]),'equals':([86,88,96,111,112,179,],[-139,114,-135,-134,-136,-116,]),'else':([98,109,226,289,],[-31,133,-69,-70,]),'elseif':([98,109,226,289,],[-31,134,-69,-70,]),'left_par':([6,10,11,13,20,52,53,54,58,62,63,64,65,71,72,73,74,80,81,82,83,84,85,87,89,90,91,92,93,94,95,97,98,108,109,110,113,114,116,118,119,120,121,132,134,135,140,145,156,157,160,162,167,169,177,178,183,189,201,202,204,205,206,207,210,213,214,217,218,219,222,226,230,232,236,237,243,245,247,248,249,250,251,252,253,256,257,258,259,260,261,266,269,271,272,274,275,276,277,278,279,286,287,289,307,],[-13,-11,-14,-10,-12,-139,-139,-22,-15,-139,75,-54,76,93,-34,-35,-139,-64,107,-65,108,-62,-36,113,-66,-37,-67,-63,-139,-32,120,93,-31,-139,-139,145,-139,-139,145,-139,-84,-139,-33,-68,178,-72,183,-139,-137,-139,-139,-83,-139,-139,-71,-139,-139,-139,-139,-139,-139,-139,-139,-139,-78,-139,-139,93,-42,-41,-42,-69,-139,-139,-139,-139,-139,-139,145,145,145,145,145,145,-73,93,-46,145,-39,-43,-44,-74,-139,145,145,145,145,-76,-132,-139,-139,-47,-40,-70,-50,]),'not':([93,108,113,114,120,145,156,157,160,178,183,189,243,245,269,278,279,],[118,118,118,-139,118,-139,-137,118,118,118,118,118,-139,-139,118,118,118,]),'true':([93,108,110,113,114,116,118,119,120,145,156,157,160,162,178,183,189,201,202,204,205,206,207,230,232,236,237,243,245,247,248,249,250,251,252,258,269,271,272,274,275,278,279,],[-139,-139,146,-139,-139,146,-139,-84,-139,-139,-137,-139,-139,-83,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,146,146,146,146,146,146,146,-139,146,146,146,146,-139,-139,]),'left_cb':([15,35,50,51,123,125,133,176,211,267,],[-2,-139,62,-3,167,169,62,62,62,62,]),'cteInt':([70,93,104,108,110,113,114,116,118,119,120,141,145,154,156,157,160,162,178,183,185,186,189,194,195,201,202,204,205,206,207,230,232,236,237,243,245,247,248,249,250,251,252,258,269,271,272,274,275,278,279,],[79,-139,128,-139,149,-139,-139,149,-139,-84,-139,-139,-139,-139,-137,-139,-139,-83,-139,-139,149,-123,-139,-124,149,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,149,149,149,149,149,149,149,-139,149,149,149,149,-139,-139,]),'list':([4,6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,121,132,135,167,169,177,210,213,214,217,218,219,222,226,253,256,257,259,260,261,266,276,277,286,287,289,307,],[12,-13,-11,-14,12,-12,-22,-15,12,-139,-34,-35,12,-64,-65,-62,-36,-66,-37,-67,-63,-32,-139,-31,-139,-33,-68,-72,12,12,-71,-78,12,12,-139,-42,-41,-42,-69,-73,-139,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'or':([112,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,158,159,179,180,181,182,184,187,188,190,191,192,193,199,200,203,208,229,231,233,235,238,239,273,280,281,282,283,284,285,290,292,293,294,295,296,297,300,301,302,303,304,305,306,],[-136,-130,-139,-118,-139,-110,-139,-131,-129,-119,-108,-139,-120,-117,-139,-109,-139,-139,-116,-126,-128,-111,-112,-98,-139,-127,-125,-139,-103,245,-82,-88,-95,-121,-101,-97,-102,-106,-122,-139,-139,-139,-139,-139,-139,-139,-113,-100,-99,-107,-138,-105,-104,-92,-96,-90,-91,-89,-93,-94,]),'while':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,121,132,135,167,169,177,210,213,214,217,218,219,222,226,253,256,257,259,260,261,266,276,277,286,287,289,307,],[-13,-11,-14,-10,-12,-22,-15,-139,95,-34,-35,-139,-64,-65,-62,-36,-66,-37,-67,-63,-32,95,-31,-139,-33,-68,-72,-139,-139,-71,-78,-139,-139,95,-42,-41,-42,-69,-73,95,-46,-39,-43,-44,-74,-76,-132,-47,-40,-70,-50,]),'plus':([93,108,110,112,113,114,116,118,119,120,136,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,156,157,160,162,178,179,180,181,182,183,184,187,188,189,190,191,192,193,201,202,204,205,206,207,229,230,232,235,236,237,238,239,243,245,247,248,249,250,251,252,258,269,271,272,273,274,275,278,279,290,294,295,296,297,],[-139,-139,141,-136,-139,-139,141,-139,-84,-139,-130,-139,-118,-139,-110,-139,-131,-139,-129,-119,-108,-139,-120,-117,-139,-109,-137,-139,-139,-83,-139,-116,-126,-128,-111,-139,-112,-98,232,-139,-127,-125,-139,-103,-139,-139,-139,-139,-139,-139,-121,-139,-139,-102,-139,-139,-106,-122,-139,-139,141,141,141,141,141,141,141,-139,141,141,-139,141,141,-139,-139,-113,-107,-138,-105,-104,]),'minus':([93,108,110,112,113,114,116,118,119,120,136,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,156,157,160,162,178,179,180,181,182,183,184,187,188,189,190,191,192,193,201,202,204,205,206,207,229,230,232,235,236,237,238,239,243,245,247,248,249,250,251,252,258,269,271,272,273,274,275,278,279,290,294,295,296,297,],[-139,-139,154,-136,-139,-139,154,-139,-84,-139,-130,-139,-118,-139,-110,-139,-131,-139,-129,-119,-108,-139,-120,-117,-139,-109,-137,-139,-139,-83,-139,-116,-126,-128,-111,-139,-112,-98,230,-139,-127,-125,-139,-103,-139,-139,-139,-139,-139,-139,-121,-139,-139,-102,-139,-139,-106,-122,-139,-139,154,154,154,154,154,154,154,-139,154,154,-139,154,154,-139,-139,-113,-107,-138,-105,-104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'EXPRESION':([93,108,113,120,157,160,178,183,189,269,278,279,],[115,131,155,163,198,209,227,228,234,291,298,299,]),'CONDICION_ELSE':([109,],[132,]),'EXPRESION_NOT':([93,108,113,120,157,160,178,183,189,269,278,279,],[116,116,116,116,116,116,116,116,116,116,116,116,]),'nt_cambioFuncActual':([24,],[39,]),'nt_ambienteMain':([35,],[50,]),'CICLO':([71,97,217,256,],[80,80,80,80,]),'VARS':([4,62,74,167,169,213,214,],[5,72,72,219,219,219,219,]),'PROGRAMA_VARS':([4,],[7,]),'VARS_LIST':([4,13,62,74,167,169,213,214,],[6,6,6,6,6,6,6,6,]),'nt_pushFloat':([138,],[180,]),'ESTATUTO':([71,97,217,256,],[85,85,260,260,]),'CUERPO':([50,133,176,211,267,],[61,177,226,253,289,]),'RETORNO':([215,254,],[257,286,]),'LLAMADA_EXPRESION':([93,],[117,]),'nt_agregarDicVar':([57,77,129,224,],[67,103,173,265,]),'BOOLEANA':([110,116,247,248,249,250,251,252,258,271,272,274,275,],[139,139,139,139,139,139,139,139,139,139,139,139,139,]),'EXP':([110,116,247,248,249,250,251,252,258,271,272,],[137,159,280,281,282,283,284,285,288,292,293,]),'CUERPO_AUX':([62,],[74,]),'LLAMADA_F':([140,],[184,]),'CUERPOFUNC_AUX':([167,169,213,],[214,214,214,]),'TERMINO_AUX':([192,],[235,]),'nt_popPOper':([273,],[294,]),'nt_hacerVoid':([30,],[45,]),'LECTURA':([71,97,217,256,],[82,82,82,82,]),'ESCRITURA':([71,97,217,256,],[89,89,89,89,]),'nt_checarRelop':([280,281,282,283,284,285,],[300,302,303,304,305,306,]),'CUERPOFUNC_ESTATUTO':([217,256,],[259,287,]),'CUERPORETORNO_CF_AUX':([167,213,],[215,254,]),'CUERPOFUNC':([167,169,213,],[216,221,216,]),'TIPO':([14,16,18,21,75,76,124,126,],[24,32,33,24,99,102,168,170,]),'nt_escribir':([155,],[196,]),'VOIDFUNC_PARA':([76,],[101,]),'nt_checaAndOrNot':([158,],[199,]),'PROGRAMA_FUNC':([14,],[21,]),'EXPRESION_B':([199,],[244,]),'STRINGS':([110,116,247,248,249,250,251,252,258,271,272,274,275,],[147,147,147,147,147,147,147,147,147,147,147,147,147,]),'PROGRAMA_FUNC_AUX':([14,21,],[25,34,]),'nt_cambioTipoActual':([22,23,26,29,],[36,38,41,43,]),'TERMINO':([110,116,247,248,249,250,251,252,258,271,272,274,275,],[143,143,143,143,143,143,143,143,143,143,143,296,297,]),'nt_agregarParametro':([122,127,220,223,],[165,171,262,264,]),'ASIGNACION_AUX':([71,97,217,256,],[88,88,88,88,]),'nt_pushPOper':([114,118,145,201,202,204,205,206,207,230,232,236,237,243,245,],[157,162,189,247,248,249,250,251,252,271,272,274,275,278,279,]),'VOIDFUNC':([14,21,],[27,27,]),'NUMERICA_AUX':([110,116,185,195,247,248,249,250,251,252,258,271,272,274,275,],[150,150,229,239,150,150,150,150,150,150,150,150,150,150,150,]),'empty':([4,7,8,12,14,21,22,23,24,26,27,29,30,35,47,49,52,53,57,62,66,69,71,74,77,79,86,93,97,108,109,113,114,118,120,122,127,128,129,130,138,140,141,143,145,149,152,154,155,157,158,159,160,166,167,169,178,183,188,189,192,198,199,201,202,204,205,206,207,213,214,217,220,223,224,228,230,232,236,237,243,245,256,269,273,278,279,280,281,282,283,284,285,291,],[9,15,17,19,28,28,37,37,40,37,15,37,44,15,56,56,64,64,68,73,56,56,90,73,68,106,112,119,90,119,135,119,156,156,119,164,164,106,68,175,181,112,186,187,156,190,193,194,197,119,200,208,119,15,218,222,119,119,231,119,238,242,246,156,156,156,156,156,156,218,222,261,164,164,68,270,156,156,156,156,156,156,261,119,295,119,119,301,301,301,301,301,301,270,]),'CONDICION_ELSEIF':([83,],[109,]),'nt_pushInt':([149,],[191,]),'VARS_VAR_AUX':([32,],[46,]),'VARS_LIST_VAR':([4,13,62,74,167,169,213,214,],[10,20,10,10,10,10,10,10,]),'EXPRESIONLOGICA_AUX':([159,],[203,]),'nt_sigMenos':([154,],[195,]),'nt_leer':([130,],[174,]),'CUERPORETORNO':([123,],[166,]),'nt_agregarIdFunc':([52,53,],[63,65,]),'nt_checar_multis':([152,],[192,]),'CONDICION':([71,97,217,256,],[92,92,92,92,]),'VARS_LIST_AUX':([33,],[48,]),'FUNC':([14,21,],[31,31,]),'VARS_VAR':([4,13,62,74,167,169,213,214,],[11,11,11,11,11,11,11,11,]),'nt_checaEquals':([198,],[241,]),'CUERPO_ESTATUTO':([71,97,],[94,121,]),'nt_agregarId':([47,49,66,69,],[57,60,77,78,]),'nt_checar_sumas':([143,],[188,]),'nt_hacerVar':([8,],[16,]),'LLAMADAF_AUX':([228,291,],[268,308,]),'CUERPO_VARS':([62,74,],[71,97,]),'ASIGNACION':([71,97,217,256,],[84,84,84,84,]),'nt_hacerLista':([12,],[18,]),'LLAMADA':([71,97,217,256,],[91,91,91,91,]),'CONSTANTE':([110,116,247,248,249,250,251,252,258,271,272,274,275,],[148,148,148,148,148,148,148,148,148,148,148,148,148,]),'FACTOR_AUX':([110,116,247,248,249,250,251,252,258,271,272,274,275,],[142,142,142,142,142,142,142,142,142,142,142,142,142,]),'CUERPOFUNC_VARS':([167,169,213,214,],[217,217,217,256,]),'EXP_AUX':([188,],[233,]),'VARS_AUX':([4,62,74,167,169,213,214,],[13,13,13,13,13,13,13,]),'NUMERICA':([110,116,247,248,249,250,251,252,258,271,272,274,275,],[151,151,151,151,151,151,151,151,151,151,151,151,151,]),'CUERPORETORNO_AUX':([167,],[213,]),'nt_pushPilaO':([86,140,],[111,182,]),'PROGRAMA':([0,],[2,]),'FACTOR':([110,116,247,248,249,250,251,252,258,271,272,274,275,],[152,152,152,152,152,152,152,152,152,152,152,152,152,]),'nt_sigMas':([141,],[185,]),'EXPRESIONLOGICA':([116,],[158,]),'nt_cambiarScope':([7,27,35,166,],[14,42,51,212,]),'LISTA':([71,97,110,116,217,247,248,249,250,251,252,256,258,271,272,274,275,],[96,96,153,153,96,153,153,153,153,153,153,96,153,153,153,153,153,]),'nt_agregarCteLista':([79,128,],[105,172,]),'FUNC_PARA':([75,],[100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC main nt_ambienteMain CUERPO','PROGRAMA',9,'p_PROGRAMA','CSP_yacc.py',31),
  ('nt_cambiarScope -> empty','nt_cambiarScope',1,'p_nt_cambiarScope','CSP_yacc.py',44),
  ('nt_ambienteMain -> nt_cambiarScope','nt_ambienteMain',1,'p_nt_ambienteMain','CSP_yacc.py',54),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',60),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',61),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',66),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',67),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',72),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',73),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',78),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',83),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',84),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',89),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',90),
  ('VARS_LIST -> list nt_hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',95),
  ('nt_hacerLista -> empty','nt_hacerLista',1,'p_nt_hacerLista','CSP_yacc.py',100),
  ('VARS_LIST_AUX -> id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',107),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',108),
  ('nt_agregarId -> empty','nt_agregarId',1,'p_nt_agregarId','CSP_yacc.py',113),
  ('nt_agregarCteLista -> empty','nt_agregarCteLista',1,'p_nt_agregarCteLista','CSP_yacc.py',120),
  ('nt_agregarDicVar -> empty','nt_agregarDicVar',1,'p_nt_agregarDicVar','CSP_yacc.py',127),
  ('VARS_VAR -> var nt_hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',143),
  ('nt_hacerVar -> empty','nt_hacerVar',1,'p_nt_hacerVar','CSP_yacc.py',147),
  ('VARS_VAR_AUX -> id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',154),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',155),
  ('TIPO -> int nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',160),
  ('TIPO -> float nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',161),
  ('TIPO -> bool nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',162),
  ('TIPO -> string nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',163),
  ('nt_cambioTipoActual -> empty','nt_cambioTipoActual',1,'p_nt_cambioTipoActual','CSP_yacc.py',168),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',175),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',180),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',181),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',187),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',188),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',193),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',194),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',199),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',2,'p_CUERPOFUNC_AUX','CSP_yacc.py',204),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',205),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',210),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',211),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',216),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',217),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',223),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',228),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',229),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',234),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',235),
  ('RETORNO -> return EXP semicolon','RETORNO',3,'p_RETORNO','CSP_yacc.py',242),
  ('FUNC -> TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_cambiarScope','FUNC',9,'p_FUNC','CSP_yacc.py',247),
  ('FUNC -> VOIDFUNC nt_cambiarScope','FUNC',2,'p_FUNC','CSP_yacc.py',248),
  ('nt_cambioFuncActual -> empty','nt_cambioFuncActual',1,'p_nt_cambioFuncActual','CSP_yacc.py',261),
  ('nt_agregarIdFunc -> empty','nt_agregarIdFunc',1,'p_nt_agregarIdFunc','CSP_yacc.py',269),
  ('FUNC_PARA -> TIPO id nt_agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',276),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id nt_agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',277),
  ('nt_agregarParametro -> empty','nt_agregarParametro',1,'p_nt_agregarParametro','CSP_yacc.py',282),
  ('VOIDFUNC -> void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',295),
  ('nt_hacerVoid -> empty','nt_hacerVoid',1,'p_nt_hacerVoid','CSP_yacc.py',300),
  ('VOIDFUNC_PARA -> TIPO id nt_agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',309),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id nt_agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',310),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',315),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',316),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',317),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',318),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',319),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',320),
  ('CONDICION -> if CONDICION_ELSEIF CONDICION_ELSE','CONDICION',3,'p_CONDICION','CSP_yacc.py',325),
  ('CONDICION_ELSEIF -> left_par EXPRESION right_par CUERPO','CONDICION_ELSEIF',4,'p_CONDICION_ELSEIF','CSP_yacc.py',330),
  ('CONDICION_ELSEIF -> CONDICION_ELSEIF elseif left_par EXPRESION right_par CUERPO','CONDICION_ELSEIF',6,'p_CONDICION_ELSEIF','CSP_yacc.py',331),
  ('CONDICION_ELSE -> else CUERPO','CONDICION_ELSE',2,'p_CONDICION_ELSE','CSP_yacc.py',336),
  ('CONDICION_ELSE -> empty','CONDICION_ELSE',1,'p_CONDICION_ELSE','CSP_yacc.py',337),
  ('CICLO -> while left_par EXPRESION right_par CUERPO','CICLO',5,'p_CICLO','CSP_yacc.py',342),
  ('LECTURA -> cread left_par id nt_leer right_par semicolon','LECTURA',6,'p_LECTURA','CSP_yacc.py',347),
  ('nt_leer -> empty','nt_leer',1,'p_nt_leer','CSP_yacc.py',353),
  ('ESCRITURA -> cwrite left_par EXPRESION nt_escribir right_par semicolon','ESCRITURA',6,'p_ESCRITURA','CSP_yacc.py',378),
  ('nt_escribir -> empty','nt_escribir',1,'p_nt_escribir','CSP_yacc.py',383),
  ('LLAMADA -> left_par LLAMADA_EXPRESION right_par semicolon','LLAMADA',4,'p_LLAMADA','CSP_yacc.py',399),
  ('LLAMADA_EXPRESION -> EXPRESION','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',404),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION comma EXPRESION','LLAMADA_EXPRESION',3,'p_LLAMADA_EXPRESION','CSP_yacc.py',405),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B','EXPRESION',4,'p_EXPRESION','CSP_yacc.py',410),
  ('nt_checaAndOrNot -> empty','nt_checaAndOrNot',1,'p_nt_checaAndOrNot','CSP_yacc.py',415),
  ('EXPRESION_NOT -> not nt_pushPOper','EXPRESION_NOT',2,'p_EXPRESION_NOT','CSP_yacc.py',462),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',463),
  ('EXPRESION_B -> and nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',468),
  ('EXPRESION_B -> or nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',469),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',470),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',475),
  ('EXPRESIONLOGICA_AUX -> lt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',480),
  ('EXPRESIONLOGICA_AUX -> gt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',481),
  ('EXPRESIONLOGICA_AUX -> ne nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',482),
  ('EXPRESIONLOGICA_AUX -> ge nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',483),
  ('EXPRESIONLOGICA_AUX -> le nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',484),
  ('EXPRESIONLOGICA_AUX -> et nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',485),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',486),
  ('nt_checarRelop -> empty','nt_checarRelop',1,'p_nt_checarRelop','CSP_yacc.py',491),
  ('EXP -> TERMINO nt_checar_sumas EXP_AUX','EXP',3,'p_EXP','CSP_yacc.py',523),
  ('nt_checar_sumas -> empty','nt_checar_sumas',1,'p_nt_checar_sumas','CSP_yacc.py',528),
  ('EXP_AUX -> plus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',562),
  ('EXP_AUX -> minus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',563),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',564),
  ('TERMINO -> FACTOR nt_checar_multis TERMINO_AUX','TERMINO',3,'p_TERMINO','CSP_yacc.py',570),
  ('nt_checar_multis -> empty','nt_checar_multis',1,'p_nt_checar_multis','CSP_yacc.py',575),
  ('TERMINO_AUX -> multiply nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',608),
  ('TERMINO_AUX -> divide nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',609),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',610),
  ('FACTOR -> left_par nt_pushPOper EXPRESION right_par nt_popPOper','FACTOR',5,'p_FACTOR','CSP_yacc.py',615),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',616),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',617),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',618),
  ('FACTOR_AUX -> id nt_pushPilaO','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',623),
  ('FACTOR_AUX -> id LLAMADA_F','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',624),
  ('LLAMADA_F -> left_par EXPRESION LLAMADAF_AUX right_par','LLAMADA_F',4,'p_LLAMADAF','CSP_yacc.py',629),
  ('LLAMADAF_AUX -> comma EXPRESION LLAMADAF_AUX','LLAMADAF_AUX',3,'p_LLAMADAF_AUX','CSP_yacc.py',634),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',635),
  ('LISTA -> id left_sb EXP right_sb','LISTA',4,'p_LISTA','CSP_yacc.py',640),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',645),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',646),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',647),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',653),
  ('NUMERICA -> plus nt_sigMas NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',654),
  ('NUMERICA -> minus nt_sigMenos NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',655),
  ('nt_sigMas -> empty','nt_sigMas',1,'p_nt_sigMas','CSP_yacc.py',660),
  ('nt_sigMenos -> empty','nt_sigMenos',1,'p_nt_sigMenos','CSP_yacc.py',667),
  ('NUMERICA_AUX -> cteInt nt_pushInt','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',674),
  ('NUMERICA_AUX -> cteFloat nt_pushFloat','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',675),
  ('nt_pushInt -> empty','nt_pushInt',1,'p_nt_pushInt','CSP_yacc.py',681),
  ('nt_pushFloat -> empty','nt_pushFloat',1,'p_nt_pushFloat','CSP_yacc.py',700),
  ('BOOLEANA -> true','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',719),
  ('BOOLEANA -> false','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',720),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',730),
  ('ASIGNACION -> ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon','ASIGNACION',6,'p_ASIGNACION','CSP_yacc.py',740),
  ('nt_checaEquals -> empty','nt_checaEquals',1,'p_nt_checaEquals','CSP_yacc.py',745),
  ('ASIGNACION_AUX -> id nt_pushPilaO','ASIGNACION_AUX',2,'p_ASIGNACION_AUX','CSP_yacc.py',773),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',774),
  ('nt_pushPilaO -> empty','nt_pushPilaO',1,'p_nt_pushPilaO','CSP_yacc.py',779),
  ('nt_pushPOper -> empty','nt_pushPOper',1,'p_nt_pushPOper','CSP_yacc.py',799),
  ('nt_popPOper -> empty','nt_popPOper',1,'p_nt_popPOper','CSP_yacc.py',808),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',815),
]
