
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et false float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string true var void while\n    PROGRAMA : program id semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC main nt_ambienteMain CUERPO\n    \n    nt_cambiarScope : empty\n    \n    nt_ambienteMain : nt_cambiarScope\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list nt_hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    nt_hacerLista : empty\n    \n    VARS_LIST_AUX : id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n                  | VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n    \n    nt_agregarId : empty\n    \n    nt_agregarCteLista : empty\n    \n    nt_agregarDicVar : empty\n    \n    VARS_VAR : var nt_hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    nt_hacerVar : empty\n    \n    VARS_VAR_AUX : id nt_agregarId nt_agregarDicVar\n                 | VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar\n    \n    TIPO : int nt_cambioTipoActual\n         | float nt_cambioTipoActual\n         | bool nt_cambioTipoActual\n         | string nt_cambioTipoActual\n    \n    nt_cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO\n    \n    CUERPOFUNC_VARS : VARS\n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP semicolon\n    \n    FUNC : TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_cambiarScope\n         | VOIDFUNC nt_cambiarScope\n    \n    nt_cambioFuncActual : empty\n    \n    nt_agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id nt_agregarParametro\n              | FUNC_PARA comma TIPO id nt_agregarParametro\n    \n    nt_agregarParametro : empty\n    \n    VOIDFUNC : void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    nt_hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id nt_agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id nt_agregarParametro\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_AUX\n    \n    CONDICION_AUX : left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto\n    \n    ELSE_ELIF : ELSE\n              | ELIF\n              | empty\n    \n    ELSE : else nt_pushElse CUERPO\n    \n    ELIF : elseif nt_pushElse CONDICION_AUX\n    \n    nt_checarBool : empty\n    \n    nt_pushSalto : empty\n    \n    nt_pushElse : empty\n    \n    CICLO : while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop\n    \n    nt_saltoLoop : empty\n    \n    nt_pushLoop : empty\n    \n    LECTURA : cread left_par id nt_leer right_par semicolon\n    \n    nt_leer : empty\n    \n    ESCRITURA : cwrite left_par EXPRESION nt_escribir right_par semicolon\n    \n    nt_escribir : empty\n    \n    LLAMADA : left_par LLAMADA_EXPRESION right_par semicolon\n    \n    LLAMADA_EXPRESION : EXPRESION\n                      | LLAMADA_EXPRESION comma EXPRESION\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B\n    \n    nt_checaAndOrNot : empty\n    \n    EXPRESION_NOT : not nt_pushPOper\n                | empty\n    \n\tEXPRESION_B : and nt_pushPOper EXPRESION\n\t           | or nt_pushPOper EXPRESION\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt nt_pushPOper EXP nt_checarRelop\n                        | gt nt_pushPOper EXP nt_checarRelop\n                        | ne nt_pushPOper EXP nt_checarRelop\n                        | ge nt_pushPOper EXP nt_checarRelop\n                        | le nt_pushPOper EXP nt_checarRelop\n                        | et nt_pushPOper EXP nt_checarRelop\n                        | empty\n    \n    nt_checarRelop : empty\n    \n    EXP : TERMINO nt_checar_sumas EXP_AUX\n    \n    nt_checar_sumas : empty\n    \n    EXP_AUX : plus nt_pushPOper EXP\n            | minus nt_pushPOper EXP\n            | empty\n    \n    TERMINO : FACTOR nt_checar_multis TERMINO_AUX\n    \n    nt_checar_multis : empty\n    \n    TERMINO_AUX : multiply nt_pushPOper TERMINO\n                | divide nt_pushPOper TERMINO\n                | empty\n    \n    FACTOR : left_par nt_pushPOper EXPRESION right_par nt_popPOper\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id nt_pushPilaO\n                | id LLAMADA_F\n    \n    LLAMADA_F : left_par EXPRESION LLAMADAF_AUX right_par\n    \n    LLAMADAF_AUX : comma EXPRESION LLAMADAF_AUX\n                    | empty\n    \n    LISTA : id left_sb EXP right_sb\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus nt_sigMas NUMERICA_AUX\n             | minus nt_sigMenos NUMERICA_AUX\n    \n    nt_sigMas : empty\n    \n    nt_sigMenos : empty\n    \n    NUMERICA_AUX : cteInt nt_pushInt\n                 | cteFloat nt_pushFloat\n    \n    nt_pushInt : empty\n    \n    nt_pushFloat : empty\n    \n    BOOLEANA : true\n             | false\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon\n    \n    nt_checaEquals : empty\n    \n    ASIGNACION_AUX : id nt_pushPilaO\n                   | LISTA\n    \n    nt_pushPilaO : empty\n    \n    nt_pushPOper : empty\n    \n    nt_popPOper : empty\n    \n    empty :\n    '
    
_lr_action_items = {'and':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,155,156,175,176,177,178,180,183,184,186,187,188,189,195,196,199,204,224,226,228,230,233,234,268,275,276,277,278,279,280,291,293,294,295,296,297,298,301,302,303,304,305,306,307,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,-146,-146,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,238,-89,-95,-102,-128,-108,-104,-109,-113,-129,-146,-146,-146,-146,-146,-146,-146,-120,-107,-106,-114,-145,-112,-111,-99,-103,-97,-98,-96,-100,-101,]),'gt':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,156,175,176,177,178,180,183,184,186,187,188,189,224,226,228,230,233,234,268,291,293,294,295,296,297,298,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,198,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-128,-108,-104,-109,-113,-129,-146,-120,-107,-106,-114,-145,-112,-111,]),'false':([93,108,110,113,114,116,118,119,142,153,154,157,159,160,179,185,197,198,200,201,202,203,225,227,231,232,238,240,242,243,244,245,246,247,253,264,266,267,269,270,273,274,],[-146,-146,133,-146,-146,133,-146,-91,-146,-144,-146,-146,-90,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,133,133,133,133,133,133,133,-146,133,133,133,133,-146,-146,]),'right_sb':([79,105,106,112,129,133,134,135,136,137,139,140,141,143,144,145,146,147,148,149,150,169,175,176,177,178,180,183,184,186,187,188,189,224,226,228,230,233,234,268,291,293,294,295,296,297,298,],[-146,130,-20,-143,-146,-137,175,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,220,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-128,-108,-104,-109,-113,-129,-146,-120,-107,-106,-114,-145,-112,-111,]),'semicolon':([3,46,47,48,56,57,66,67,68,77,103,112,130,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,155,156,158,170,175,176,177,178,180,183,184,186,187,188,189,194,195,196,199,204,220,221,224,226,228,230,233,234,235,236,237,239,241,260,268,275,276,277,278,279,280,284,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,],[4,54,-146,58,-19,-146,-146,-24,-21,-146,-25,-143,-146,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,-146,-146,206,-17,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-146,-146,-89,-95,-102,-146,261,-128,-108,-104,-109,-113,-129,271,272,-140,-88,-94,-18,-146,-146,-146,-146,-146,-146,-146,309,-120,-107,-106,-114,-145,-112,-111,-92,-93,-99,-103,-97,-98,-96,-100,-101,]),'int':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,125,127,163,208,250,258,],[-146,-4,-13,-146,-146,-5,-11,-14,-146,-10,22,-2,22,-23,22,-16,-12,22,-6,-146,-9,-8,-7,-52,-22,-15,22,22,22,22,-146,-51,-45,-58,]),'float':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,125,127,163,208,250,258,],[-146,-4,-13,-146,-146,-5,-11,-14,-146,-10,23,-2,23,-23,23,-16,-12,23,-6,-146,-9,-8,-7,-52,-22,-15,23,23,23,23,-146,-51,-45,-58,]),'cteFloat':([93,108,110,113,114,116,118,119,138,142,151,153,154,157,159,160,179,181,182,185,190,191,197,198,200,201,202,203,225,227,231,232,238,240,242,243,244,245,246,247,253,264,266,267,269,270,273,274,],[-146,-146,135,-146,-146,135,-146,-91,-146,-146,-146,-144,-146,-146,-90,-146,-146,135,-130,-146,-131,135,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,135,135,135,135,135,135,135,-146,135,135,135,135,-146,-146,]),'left_sb':([49,56,60,69,78,86,137,],[-146,-19,70,-146,104,110,110,]),'multiply':([112,133,135,136,137,139,141,143,144,145,146,147,148,149,150,175,176,177,178,180,186,187,188,189,224,234,268,291,295,296,],[-143,-137,-146,-125,-146,-117,-138,-136,-126,-115,-146,-127,-124,-146,-116,-123,-133,-135,-118,-119,-134,-132,232,-110,-128,-129,-146,-120,-114,-145,]),'ge':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,156,175,176,177,178,180,183,184,186,187,188,189,224,226,228,230,233,234,268,291,293,294,295,296,297,298,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,197,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-128,-108,-104,-109,-113,-129,-146,-120,-107,-106,-114,-145,-112,-111,]),'comma':([46,47,48,56,57,66,67,68,77,100,101,103,112,115,117,123,128,130,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,155,156,161,162,168,170,175,176,177,178,180,183,184,186,187,188,189,195,196,199,204,205,216,219,220,223,224,226,228,230,233,234,239,241,257,259,260,268,275,276,277,278,279,280,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,],[55,-146,59,-19,-146,-146,-24,-21,-146,125,127,-25,-143,-86,157,-146,-146,-146,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,-146,-146,-57,-55,-60,-17,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-146,-89,-95,-102,-87,-146,-146,-146,264,-128,-108,-104,-109,-113,-129,-88,-94,-56,-61,-18,-146,-146,-146,-146,-146,-146,-146,-120,264,-107,-106,-114,-145,-112,-111,-92,-93,-99,-103,-97,-98,-96,-100,-101,]),'cread':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,122,164,166,206,209,210,213,214,215,218,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[-13,-11,-14,-10,-12,-22,-15,-146,81,-34,-35,-146,-64,-65,-62,-36,-66,-37,-67,-63,-32,81,-31,-68,-33,-146,-146,-85,-146,-146,81,-42,-41,-42,81,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'right_par':([100,101,112,115,117,123,128,131,132,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,152,155,156,161,162,168,171,172,173,174,175,176,177,178,180,183,184,186,187,188,189,192,193,195,196,199,204,205,207,216,219,223,224,226,228,229,230,233,234,239,241,248,257,259,263,265,268,275,276,277,278,279,280,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,315,],[124,126,-143,-86,158,-146,-146,-146,-146,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,-146,-146,-146,-57,-55,-60,221,-82,222,-75,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,235,-84,-146,-89,-95,-102,-87,-146,-146,-146,-146,-128,-108,-104,268,-109,-113,-129,-88,-94,281,-56,-61,291,-122,-146,-146,-146,-146,-146,-146,-146,-120,-146,-107,-106,-114,-145,-112,-111,-92,-93,-99,-103,-97,-98,-96,-100,-101,-121,]),'cteString':([93,108,110,113,114,116,118,119,142,153,154,157,159,160,179,185,197,198,200,201,202,203,225,227,231,232,238,240,242,243,244,245,246,247,253,264,266,267,269,270,273,274,],[-146,-146,141,-146,-146,141,-146,-91,-146,-144,-146,-146,-90,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,141,141,141,141,141,141,141,-146,141,141,141,141,-146,-146,]),'id':([1,6,10,11,13,20,22,23,24,26,29,30,32,33,36,37,38,39,40,41,43,44,45,54,55,58,59,62,71,72,73,74,80,82,84,85,89,90,91,92,93,94,97,98,99,102,107,108,109,110,113,114,116,118,119,122,142,153,154,157,159,160,164,165,166,167,179,185,197,198,200,201,202,203,206,209,210,213,214,215,218,225,227,231,232,238,240,242,243,244,245,246,247,251,252,253,254,255,256,261,262,264,266,267,269,270,271,272,273,274,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[3,-13,-11,-14,-10,-12,-146,-146,-146,-146,-146,-146,47,49,-26,-30,-27,52,-53,-28,-29,-59,53,-22,66,-15,69,-146,86,-34,-35,-146,-64,-65,-62,-36,-66,-37,-67,-63,-146,-32,86,-31,123,128,131,-146,-68,137,-146,-146,137,-146,-91,-33,-146,-144,-146,-146,-90,-146,-146,216,-146,219,-146,-146,-146,-146,-146,-146,-146,-146,-85,-146,-146,86,-42,-41,-42,-146,-146,-146,-146,-146,-146,137,137,137,137,137,137,86,-46,137,-39,-43,-44,-81,-146,-146,137,137,137,137,-83,-139,-146,-146,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'if':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,122,164,166,206,209,210,213,214,215,218,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[-13,-11,-14,-10,-12,-22,-15,-146,83,-34,-35,-146,-64,-65,-62,-36,-66,-37,-67,-63,-32,83,-31,-68,-33,-146,-146,-85,-146,-146,83,-42,-41,-42,83,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'le':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,156,175,176,177,178,180,183,184,186,187,188,189,224,226,228,230,233,234,268,291,293,294,295,296,297,298,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,202,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-128,-108,-104,-109,-113,-129,-146,-120,-107,-106,-114,-145,-112,-111,]),'divide':([112,133,135,136,137,139,141,143,144,145,146,147,148,149,150,175,176,177,178,180,186,187,188,189,224,234,268,291,295,296,],[-143,-137,-146,-125,-146,-117,-138,-136,-126,-115,-146,-127,-124,-146,-116,-123,-133,-135,-118,-119,-134,-132,231,-110,-128,-129,-146,-120,-114,-145,]),'right_cb':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,122,166,206,209,210,213,215,217,218,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[-13,-11,-14,-10,-12,-22,-15,-146,-146,-34,-35,98,-64,-65,-62,-36,-66,-37,-67,-63,-32,-146,-31,-68,-33,-146,-85,250,-38,-146,-41,258,-42,-146,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'ne':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,156,175,176,177,178,180,183,184,186,187,188,189,224,226,228,230,233,234,268,291,293,294,295,296,297,298,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,200,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-128,-108,-104,-109,-113,-129,-146,-120,-107,-106,-114,-145,-112,-111,]),'lt':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,156,175,176,177,178,180,183,184,186,187,188,189,224,226,228,230,233,234,268,291,293,294,295,296,297,298,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,201,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-128,-108,-104,-109,-113,-129,-146,-120,-107,-106,-114,-145,-112,-111,]),'program':([0,],[1,]),'bool':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,125,127,163,208,250,258,],[-146,-4,-13,-146,-146,-5,-11,-14,-146,-10,26,-2,26,-23,26,-16,-12,26,-6,-146,-9,-8,-7,-52,-22,-15,26,26,26,26,-146,-51,-45,-58,]),'cwrite':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,122,164,166,206,209,210,213,214,215,218,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[-13,-11,-14,-10,-12,-22,-15,-146,87,-34,-35,-146,-64,-65,-62,-36,-66,-37,-67,-63,-32,87,-31,-68,-33,-146,-146,-85,-146,-146,87,-42,-41,-42,87,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'var':([4,6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,122,164,166,206,209,210,213,214,215,218,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[8,-13,-11,-14,8,-12,-22,-15,8,-146,-34,-35,8,-64,-65,-62,-36,-66,-37,-67,-63,-32,-146,-31,-68,-33,8,8,-85,8,8,-146,-42,-41,-42,-146,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'main':([4,5,6,7,9,10,11,13,14,15,20,21,25,27,28,31,34,42,54,58,163,208,250,258,],[-146,-4,-13,-146,-5,-11,-14,-10,-146,-2,-12,35,-6,-146,-9,-8,-7,-52,-22,-15,-146,-51,-45,-58,]),'$end':([2,61,98,],[0,-1,-31,]),'return':([6,10,11,13,20,54,58,80,82,84,89,91,92,98,109,164,206,209,210,211,212,213,214,215,218,249,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[-13,-11,-14,-10,-12,-22,-15,-64,-65,-62,-66,-67,-63,-31,-68,-146,-85,-146,-38,253,-48,-146,-42,-41,-42,253,-146,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'string':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,31,34,42,54,58,75,76,125,127,163,208,250,258,],[-146,-4,-13,-146,-146,-5,-11,-14,-146,-10,29,-2,29,-23,29,-16,-12,29,-6,-146,-9,-8,-7,-52,-22,-15,29,29,29,29,-146,-51,-45,-58,]),'et':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,156,175,176,177,178,180,183,184,186,187,188,189,224,226,228,230,233,234,268,291,293,294,295,296,297,298,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,203,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,-128,-108,-104,-109,-113,-129,-146,-120,-107,-106,-114,-145,-112,-111,]),'void':([4,5,6,7,9,10,11,13,14,15,20,21,25,27,28,31,34,42,54,58,163,208,250,258,],[-146,-4,-13,-146,-5,-11,-14,-10,30,-2,-12,30,-6,-146,-9,-8,-7,-52,-22,-15,-146,-51,-45,-58,]),'equals':([86,88,96,111,112,175,],[-146,114,-142,-141,-143,-123,]),'else':([98,262,],[-31,289,]),'elseif':([98,262,],[-31,288,]),'left_par':([6,10,11,13,20,52,53,54,58,62,63,64,65,71,72,73,74,80,81,82,83,84,85,87,89,90,91,92,93,94,95,97,98,108,109,110,113,114,116,118,119,120,121,122,137,142,153,154,157,159,160,164,166,179,185,197,198,200,201,202,203,206,209,210,213,214,215,218,225,227,231,232,238,240,242,243,244,245,246,247,251,252,253,254,255,256,261,262,264,266,267,269,270,271,272,273,274,282,283,285,286,287,288,290,308,309,310,311,312,313,316,317,318,319,],[-13,-11,-14,-10,-12,-146,-146,-22,-15,-146,75,-54,76,93,-34,-35,-146,-64,107,-65,108,-62,-36,113,-66,-37,-67,-63,-146,-32,-146,93,-31,-146,-68,142,-146,-146,142,-146,-91,-79,160,-33,179,-146,-144,-146,-146,-90,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-85,-146,-146,93,-42,-41,-42,-146,-146,-146,-146,-146,-146,142,142,142,142,142,142,93,-46,142,-39,-43,-44,-81,-146,-146,142,142,142,142,-83,-139,-146,-146,-47,-40,-146,-71,-70,-146,-72,-146,-50,-69,-76,108,-77,-78,-80,-74,-73,]),'not':([93,108,113,114,142,153,154,157,160,179,185,238,240,264,273,274,],[118,118,118,-146,-146,-144,118,118,118,118,118,-146,-146,118,118,118,]),'true':([93,108,110,113,114,116,118,119,142,153,154,157,159,160,179,185,197,198,200,201,202,203,225,227,231,232,238,240,242,243,244,245,246,247,253,264,266,267,269,270,273,274,],[-146,-146,143,-146,-146,143,-146,-91,-146,-144,-146,-146,-90,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,143,143,143,143,143,143,143,-146,143,143,143,143,-146,-146,]),'left_cb':([15,35,50,51,124,126,222,281,289,313,314,],[-2,-146,62,-3,164,166,62,62,-146,-77,62,]),'cteInt':([70,93,104,108,110,113,114,116,118,119,138,142,151,153,154,157,159,160,179,181,182,185,190,191,197,198,200,201,202,203,225,227,231,232,238,240,242,243,244,245,246,247,253,264,266,267,269,270,273,274,],[79,-146,129,-146,146,-146,-146,146,-146,-91,-146,-146,-146,-144,-146,-146,-90,-146,-146,146,-130,-146,-131,146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,-146,146,146,146,146,146,146,146,-146,146,146,146,146,-146,-146,]),'list':([4,6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,122,164,166,206,209,210,213,214,215,218,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[12,-13,-11,-14,12,-12,-22,-15,12,-146,-34,-35,12,-64,-65,-62,-36,-66,-37,-67,-63,-32,-146,-31,-68,-33,12,12,-85,12,12,-146,-42,-41,-42,-146,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'or':([112,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,155,156,175,176,177,178,180,183,184,186,187,188,189,195,196,199,204,224,226,228,230,233,234,268,275,276,277,278,279,280,291,293,294,295,296,297,298,301,302,303,304,305,306,307,],[-143,-137,-146,-125,-146,-117,-146,-138,-136,-126,-115,-146,-127,-124,-146,-116,-146,-146,-123,-133,-135,-118,-119,-105,-146,-134,-132,-146,-110,240,-89,-95,-102,-128,-108,-104,-109,-113,-129,-146,-146,-146,-146,-146,-146,-146,-120,-107,-106,-114,-145,-112,-111,-99,-103,-97,-98,-96,-100,-101,]),'while':([6,10,11,13,20,54,58,62,71,72,73,74,80,82,84,85,89,90,91,92,94,97,98,109,122,164,166,206,209,210,213,214,215,218,251,252,254,255,256,261,262,271,272,282,283,285,286,287,290,308,309,310,311,316,317,318,319,],[-13,-11,-14,-10,-12,-22,-15,-146,95,-34,-35,-146,-64,-65,-62,-36,-66,-37,-67,-63,-32,95,-31,-68,-33,-146,-146,-85,-146,-146,95,-42,-41,-42,95,-46,-39,-43,-44,-81,-146,-83,-139,-47,-40,-146,-71,-70,-72,-146,-50,-69,-76,-78,-80,-74,-73,]),'plus':([93,108,110,112,113,114,116,118,119,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,153,154,157,159,160,175,176,177,178,179,180,183,184,185,186,187,188,189,197,198,200,201,202,203,224,225,227,230,231,232,233,234,238,240,242,243,244,245,246,247,253,264,266,267,268,269,270,273,274,291,295,296,297,298,],[-146,-146,138,-143,-146,-146,138,-146,-91,-137,-146,-125,-146,-117,-146,-138,-146,-136,-126,-115,-146,-127,-124,-146,-116,-144,-146,-146,-90,-146,-123,-133,-135,-118,-146,-119,-105,227,-146,-134,-132,-146,-110,-146,-146,-146,-146,-146,-146,-128,-146,-146,-109,-146,-146,-113,-129,-146,-146,138,138,138,138,138,138,138,-146,138,138,-146,138,138,-146,-146,-120,-114,-145,-112,-111,]),'minus':([93,108,110,112,113,114,116,118,119,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,153,154,157,159,160,175,176,177,178,179,180,183,184,185,186,187,188,189,197,198,200,201,202,203,224,225,227,230,231,232,233,234,238,240,242,243,244,245,246,247,253,264,266,267,268,269,270,273,274,291,295,296,297,298,],[-146,-146,151,-143,-146,-146,151,-146,-91,-137,-146,-125,-146,-117,-146,-138,-146,-136,-126,-115,-146,-127,-124,-146,-116,-144,-146,-146,-90,-146,-123,-133,-135,-118,-146,-119,-105,225,-146,-134,-132,-146,-110,-146,-146,-146,-146,-146,-146,-128,-146,-146,-109,-146,-146,-113,-129,-146,-146,151,151,151,151,151,151,151,-146,151,151,-146,151,151,-146,-146,-120,-114,-145,-112,-111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'nt_cambioFuncActual':([24,],[39,]),'CICLO':([71,97,213,251,],[80,80,80,80,]),'VARS_LIST':([4,13,62,74,164,166,209,210,],[6,6,6,6,6,6,6,6,]),'TERMINO_AUX':([188,],[230,]),'CUERPO':([50,222,281,314,],[61,262,308,319,]),'EXP':([110,116,242,243,244,245,246,247,253,266,267,],[134,156,275,276,277,278,279,280,284,293,294,]),'CUERPO_AUX':([62,],[74,]),'nt_hacerVoid':([30,],[45,]),'LECTURA':([71,97,213,251,],[82,82,82,82,]),'ESCRITURA':([71,97,213,251,],[89,89,89,89,]),'nt_checarRelop':([275,276,277,278,279,280,],[301,303,304,305,306,307,]),'VOIDFUNC_PARA':([76,],[101,]),'nt_pushLoop':([308,],[316,]),'VOIDFUNC':([14,21,],[27,27,]),'EXPRESION_B':([195,],[239,]),'LLAMADA':([71,97,213,251,],[91,91,91,91,]),'nt_checar_multis':([149,],[188,]),'CONDICION':([71,97,213,251,],[92,92,92,92,]),'RETORNO':([211,249,],[252,282,]),'STRINGS':([110,116,242,243,244,245,246,247,253,266,267,269,270,],[144,144,144,144,144,144,144,144,144,144,144,144,144,]),'nt_agregarId':([47,49,66,69,],[57,60,77,78,]),'nt_pushPilaO':([86,137,],[111,178,]),'PROGRAMA':([0,],[2,]),'nt_sigMas':([138,],[181,]),'nt_cambiarScope':([7,27,35,163,],[14,42,51,208,]),'LISTA':([71,97,110,116,213,242,243,244,245,246,247,251,253,266,267,269,270,],[96,96,150,150,96,150,150,150,150,150,150,96,150,150,150,150,150,]),'FUNC_PARA':([75,],[100,]),'EXPRESIONLOGICA':([116,],[155,]),'nt_agregarDicVar':([57,77,130,220,],[67,103,170,260,]),'PROGRAMA_VARS':([4,],[7,]),'nt_pushFloat':([135,],[176,]),'nt_leer':([131,],[171,]),'CUERPOFUNC_AUX':([164,166,209,],[210,210,210,]),'CONDICION_AUX':([83,312,],[109,318,]),'nt_saltoLoop':([95,],[121,]),'CUERPOFUNC_ESTATUTO':([213,251,],[254,283,]),'nt_checaEquals':([194,],[236,]),'ASIGNACION':([71,97,213,251,],[84,84,84,84,]),'VARS_AUX':([4,62,74,164,166,209,210,],[13,13,13,13,13,13,13,]),'VARS_LIST_AUX':([33,],[48,]),'nt_pushElse':([288,289,],[312,314,]),'PROGRAMA_FUNC_AUX':([14,21,],[25,34,]),'nt_popPOper':([268,],[295,]),'CUERPOFUNC_VARS':([164,166,209,210,],[213,213,213,251,]),'ASIGNACION_AUX':([71,97,213,251,],[88,88,88,88,]),'FACTOR_AUX':([110,116,242,243,244,245,246,247,253,266,267,269,270,],[139,139,139,139,139,139,139,139,139,139,139,139,139,]),'NUMERICA_AUX':([110,116,181,191,242,243,244,245,246,247,253,266,267,269,270,],[147,147,224,234,147,147,147,147,147,147,147,147,147,147,147,]),'nt_sigMenos':([151,],[191,]),'ELSE':([262,],[287,]),'CUERPORETORNO':([124,],[163,]),'FUNC':([14,21,],[31,31,]),'CUERPO_ESTATUTO':([71,97,],[94,122,]),'nt_hacerVar':([8,],[16,]),'CONSTANTE':([110,116,242,243,244,245,246,247,253,266,267,269,270,],[145,145,145,145,145,145,145,145,145,145,145,145,145,]),'NUMERICA':([110,116,242,243,244,245,246,247,253,266,267,269,270,],[148,148,148,148,148,148,148,148,148,148,148,148,148,]),'FACTOR':([110,116,242,243,244,245,246,247,253,266,267,269,270,],[149,149,149,149,149,149,149,149,149,149,149,149,149,]),'nt_checar_sumas':([140,],[184,]),'EXPRESION':([93,108,113,154,157,160,179,185,264,273,274,],[115,132,152,194,205,207,223,229,292,299,300,]),'EXPRESION_NOT':([93,108,113,154,157,160,179,185,264,273,274,],[116,116,116,116,116,116,116,116,116,116,116,]),'ELSE_ELIF':([262,],[285,]),'CUERPORETORNO_AUX':([164,],[209,]),'BOOLEANA':([110,116,242,243,244,245,246,247,253,266,267,269,270,],[136,136,136,136,136,136,136,136,136,136,136,136,136,]),'CUERPORETORNO_CF_AUX':([164,209,],[211,249,]),'CUERPOFUNC':([164,166,209,],[212,217,212,]),'nt_checaAndOrNot':([155,],[195,]),'PROGRAMA_FUNC':([14,],[21,]),'TERMINO':([110,116,242,243,244,245,246,247,253,266,267,269,270,],[140,140,140,140,140,140,140,140,140,140,140,297,298,]),'nt_pushInt':([146,],[187,]),'EXP_AUX':([184,],[228,]),'empty':([4,7,8,12,14,21,22,23,24,26,27,29,30,35,47,49,52,53,57,62,66,69,71,74,77,79,86,93,95,97,108,113,114,118,123,128,129,130,131,132,135,137,138,140,142,146,149,151,152,154,155,156,157,160,163,164,166,179,184,185,188,194,195,197,198,200,201,202,203,207,209,210,213,216,219,220,223,225,227,231,232,238,240,251,262,264,268,273,274,275,276,277,278,279,280,285,288,289,292,308,],[9,15,17,19,28,28,37,37,40,37,15,37,44,15,56,56,64,64,68,73,56,56,90,73,68,106,112,119,120,90,119,119,153,153,161,161,106,68,172,174,177,112,182,183,153,186,189,190,193,119,196,204,119,119,15,214,218,119,226,119,233,237,241,153,153,153,153,153,153,174,214,218,256,161,161,68,265,153,153,153,153,153,153,256,290,119,296,119,119,302,302,302,302,302,302,311,313,313,265,317,]),'nt_pushSalto':([285,],[310,]),'VARS_VAR_AUX':([32,],[46,]),'VARS_LIST_VAR':([4,13,62,74,164,166,209,210,],[10,20,10,10,10,10,10,10,]),'nt_agregarIdFunc':([52,53,],[63,65,]),'VARS_VAR':([4,13,62,74,164,166,209,210,],[11,11,11,11,11,11,11,11,]),'CUERPO_VARS':([62,74,],[71,97,]),'nt_hacerLista':([12,],[18,]),'nt_escribir':([152,],[192,]),'nt_agregarCteLista':([79,129,],[105,169,]),'ELIF':([262,],[286,]),'LLAMADA_EXPRESION':([93,],[117,]),'nt_ambienteMain':([35,],[50,]),'VARS':([4,62,74,164,166,209,210,],[5,72,72,215,215,215,215,]),'nt_checarBool':([132,207,],[173,248,]),'LLAMADA_F':([137,],[180,]),'TIPO':([14,16,18,21,75,76,125,127,],[24,32,33,24,99,102,165,167,]),'ESTATUTO':([71,97,213,251,],[85,85,255,255,]),'nt_cambioTipoActual':([22,23,26,29,],[36,38,41,43,]),'nt_agregarParametro':([123,128,216,219,],[162,168,257,259,]),'nt_pushPOper':([114,118,142,197,198,200,201,202,203,225,227,231,232,238,240,],[154,159,185,242,243,244,245,246,247,266,267,269,270,273,274,]),'LLAMADAF_AUX':([223,292,],[263,315,]),'EXPRESIONLOGICA_AUX':([156,],[199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC main nt_ambienteMain CUERPO','PROGRAMA',9,'p_PROGRAMA','CSP_yacc.py',31),
  ('nt_cambiarScope -> empty','nt_cambiarScope',1,'p_nt_cambiarScope','CSP_yacc.py',44),
  ('nt_ambienteMain -> nt_cambiarScope','nt_ambienteMain',1,'p_nt_ambienteMain','CSP_yacc.py',54),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',60),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',61),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',66),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',67),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',72),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',73),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',78),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',83),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',84),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',89),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',90),
  ('VARS_LIST -> list nt_hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',95),
  ('nt_hacerLista -> empty','nt_hacerLista',1,'p_nt_hacerLista','CSP_yacc.py',100),
  ('VARS_LIST_AUX -> id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',107),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',108),
  ('nt_agregarId -> empty','nt_agregarId',1,'p_nt_agregarId','CSP_yacc.py',113),
  ('nt_agregarCteLista -> empty','nt_agregarCteLista',1,'p_nt_agregarCteLista','CSP_yacc.py',120),
  ('nt_agregarDicVar -> empty','nt_agregarDicVar',1,'p_nt_agregarDicVar','CSP_yacc.py',127),
  ('VARS_VAR -> var nt_hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',143),
  ('nt_hacerVar -> empty','nt_hacerVar',1,'p_nt_hacerVar','CSP_yacc.py',147),
  ('VARS_VAR_AUX -> id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',154),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',155),
  ('TIPO -> int nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',160),
  ('TIPO -> float nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',161),
  ('TIPO -> bool nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',162),
  ('TIPO -> string nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',163),
  ('nt_cambioTipoActual -> empty','nt_cambioTipoActual',1,'p_nt_cambioTipoActual','CSP_yacc.py',168),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',175),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',180),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',181),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',187),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',188),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',193),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',194),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',199),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',2,'p_CUERPOFUNC_AUX','CSP_yacc.py',204),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',205),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',210),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',211),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',216),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',217),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',223),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',228),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',229),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',234),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',235),
  ('RETORNO -> return EXP semicolon','RETORNO',3,'p_RETORNO','CSP_yacc.py',242),
  ('FUNC -> TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_cambiarScope','FUNC',9,'p_FUNC','CSP_yacc.py',247),
  ('FUNC -> VOIDFUNC nt_cambiarScope','FUNC',2,'p_FUNC','CSP_yacc.py',248),
  ('nt_cambioFuncActual -> empty','nt_cambioFuncActual',1,'p_nt_cambioFuncActual','CSP_yacc.py',261),
  ('nt_agregarIdFunc -> empty','nt_agregarIdFunc',1,'p_nt_agregarIdFunc','CSP_yacc.py',269),
  ('FUNC_PARA -> TIPO id nt_agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',276),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id nt_agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',277),
  ('nt_agregarParametro -> empty','nt_agregarParametro',1,'p_nt_agregarParametro','CSP_yacc.py',282),
  ('VOIDFUNC -> void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',295),
  ('nt_hacerVoid -> empty','nt_hacerVoid',1,'p_nt_hacerVoid','CSP_yacc.py',300),
  ('VOIDFUNC_PARA -> TIPO id nt_agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',309),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id nt_agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',310),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',315),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',316),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',317),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',318),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',319),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',320),
  ('CONDICION -> if CONDICION_AUX','CONDICION',2,'p_CONDICION','CSP_yacc.py',325),
  ('CONDICION_AUX -> left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto','CONDICION_AUX',7,'p_CONDICION_AUX','CSP_yacc.py',330),
  ('ELSE_ELIF -> ELSE','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',334),
  ('ELSE_ELIF -> ELIF','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',335),
  ('ELSE_ELIF -> empty','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',336),
  ('ELSE -> else nt_pushElse CUERPO','ELSE',3,'p_ELSE','CSP_yacc.py',341),
  ('ELIF -> elseif nt_pushElse CONDICION_AUX','ELIF',3,'p_ELIF','CSP_yacc.py',346),
  ('nt_checarBool -> empty','nt_checarBool',1,'p_nt_checarBool','CSP_yacc.py',353),
  ('nt_pushSalto -> empty','nt_pushSalto',1,'p_nt_pushSalto','CSP_yacc.py',379),
  ('nt_pushElse -> empty','nt_pushElse',1,'p_nt_pushElse','CSP_yacc.py',392),
  ('CICLO -> while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop','CICLO',8,'p_CICLO','CSP_yacc.py',409),
  ('nt_saltoLoop -> empty','nt_saltoLoop',1,'p_nt_saltoLoop','CSP_yacc.py',414),
  ('nt_pushLoop -> empty','nt_pushLoop',1,'p_nt_pushLoop','CSP_yacc.py',423),
  ('LECTURA -> cread left_par id nt_leer right_par semicolon','LECTURA',6,'p_LECTURA','CSP_yacc.py',437),
  ('nt_leer -> empty','nt_leer',1,'p_nt_leer','CSP_yacc.py',443),
  ('ESCRITURA -> cwrite left_par EXPRESION nt_escribir right_par semicolon','ESCRITURA',6,'p_ESCRITURA','CSP_yacc.py',467),
  ('nt_escribir -> empty','nt_escribir',1,'p_nt_escribir','CSP_yacc.py',472),
  ('LLAMADA -> left_par LLAMADA_EXPRESION right_par semicolon','LLAMADA',4,'p_LLAMADA','CSP_yacc.py',488),
  ('LLAMADA_EXPRESION -> EXPRESION','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',493),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION comma EXPRESION','LLAMADA_EXPRESION',3,'p_LLAMADA_EXPRESION','CSP_yacc.py',494),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B','EXPRESION',4,'p_EXPRESION','CSP_yacc.py',499),
  ('nt_checaAndOrNot -> empty','nt_checaAndOrNot',1,'p_nt_checaAndOrNot','CSP_yacc.py',504),
  ('EXPRESION_NOT -> not nt_pushPOper','EXPRESION_NOT',2,'p_EXPRESION_NOT','CSP_yacc.py',551),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',552),
  ('EXPRESION_B -> and nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',557),
  ('EXPRESION_B -> or nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',558),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',559),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',564),
  ('EXPRESIONLOGICA_AUX -> lt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',569),
  ('EXPRESIONLOGICA_AUX -> gt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',570),
  ('EXPRESIONLOGICA_AUX -> ne nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',571),
  ('EXPRESIONLOGICA_AUX -> ge nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',572),
  ('EXPRESIONLOGICA_AUX -> le nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',573),
  ('EXPRESIONLOGICA_AUX -> et nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',574),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',575),
  ('nt_checarRelop -> empty','nt_checarRelop',1,'p_nt_checarRelop','CSP_yacc.py',580),
  ('EXP -> TERMINO nt_checar_sumas EXP_AUX','EXP',3,'p_EXP','CSP_yacc.py',612),
  ('nt_checar_sumas -> empty','nt_checar_sumas',1,'p_nt_checar_sumas','CSP_yacc.py',617),
  ('EXP_AUX -> plus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',651),
  ('EXP_AUX -> minus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',652),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',653),
  ('TERMINO -> FACTOR nt_checar_multis TERMINO_AUX','TERMINO',3,'p_TERMINO','CSP_yacc.py',659),
  ('nt_checar_multis -> empty','nt_checar_multis',1,'p_nt_checar_multis','CSP_yacc.py',664),
  ('TERMINO_AUX -> multiply nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',697),
  ('TERMINO_AUX -> divide nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',698),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',699),
  ('FACTOR -> left_par nt_pushPOper EXPRESION right_par nt_popPOper','FACTOR',5,'p_FACTOR','CSP_yacc.py',704),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',705),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',706),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',707),
  ('FACTOR_AUX -> id nt_pushPilaO','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',712),
  ('FACTOR_AUX -> id LLAMADA_F','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',713),
  ('LLAMADA_F -> left_par EXPRESION LLAMADAF_AUX right_par','LLAMADA_F',4,'p_LLAMADAF','CSP_yacc.py',718),
  ('LLAMADAF_AUX -> comma EXPRESION LLAMADAF_AUX','LLAMADAF_AUX',3,'p_LLAMADAF_AUX','CSP_yacc.py',723),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',724),
  ('LISTA -> id left_sb EXP right_sb','LISTA',4,'p_LISTA','CSP_yacc.py',729),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',734),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',735),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',736),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',742),
  ('NUMERICA -> plus nt_sigMas NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',743),
  ('NUMERICA -> minus nt_sigMenos NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',744),
  ('nt_sigMas -> empty','nt_sigMas',1,'p_nt_sigMas','CSP_yacc.py',749),
  ('nt_sigMenos -> empty','nt_sigMenos',1,'p_nt_sigMenos','CSP_yacc.py',756),
  ('NUMERICA_AUX -> cteInt nt_pushInt','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',763),
  ('NUMERICA_AUX -> cteFloat nt_pushFloat','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',764),
  ('nt_pushInt -> empty','nt_pushInt',1,'p_nt_pushInt','CSP_yacc.py',770),
  ('nt_pushFloat -> empty','nt_pushFloat',1,'p_nt_pushFloat','CSP_yacc.py',789),
  ('BOOLEANA -> true','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',808),
  ('BOOLEANA -> false','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',809),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',819),
  ('ASIGNACION -> ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon','ASIGNACION',6,'p_ASIGNACION','CSP_yacc.py',829),
  ('nt_checaEquals -> empty','nt_checaEquals',1,'p_nt_checaEquals','CSP_yacc.py',834),
  ('ASIGNACION_AUX -> id nt_pushPilaO','ASIGNACION_AUX',2,'p_ASIGNACION_AUX','CSP_yacc.py',862),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',863),
  ('nt_pushPilaO -> empty','nt_pushPilaO',1,'p_nt_pushPilaO','CSP_yacc.py',868),
  ('nt_pushPOper -> empty','nt_pushPOper',1,'p_nt_pushPOper','CSP_yacc.py',888),
  ('nt_popPOper -> empty','nt_popPOper',1,'p_nt_popPOper','CSP_yacc.py',897),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',904),
]
