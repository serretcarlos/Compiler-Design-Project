
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool comma cread cteFloat cteInt cteString cwrite divide else elseif equals et false float ge gt id if int le left_cb left_dblquotes left_par left_sb list lt main minus multiply ne not or plus program return right_cb right_dblquotes right_par right_sb semicolon string true var void while\n    PROGRAMA : program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO\n    \n    nt_cambiarScope : empty\n    \n    nt_ambienteMain : nt_cambiarScope\n    \n    nt_pushJmpMain : empty\n    \n    PROGRAMA_VARS : VARS\n                  | empty\n    \n    PROGRAMA_FUNC : PROGRAMA_FUNC_AUX\n                  | PROGRAMA_FUNC PROGRAMA_FUNC_AUX\n    \n    PROGRAMA_FUNC_AUX : FUNC\n                      | empty\n    \n    VARS : VARS_AUX\n    \n    VARS_AUX : VARS_LIST_VAR\n             | VARS_AUX VARS_LIST_VAR\n    \n    VARS_LIST_VAR : VARS_LIST\n                  | VARS_VAR\n    \n    VARS_LIST : list nt_hacerLista TIPO VARS_LIST_AUX semicolon\n    \n    nt_hacerLista : empty\n    \n    VARS_LIST_AUX : id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n                  | VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar\n    \n    nt_agregarId : empty\n    \n    nt_agregarCteLista : empty\n    \n    nt_agregarDicVar : empty\n    \n    VARS_VAR : var nt_hacerVar TIPO VARS_VAR_AUX semicolon\n    \n    nt_hacerVar : empty\n    \n    VARS_VAR_AUX : id nt_agregarId nt_agregarDicVar\n                 | VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar\n    \n    TIPO : int nt_cambioTipoActual\n         | float nt_cambioTipoActual\n         | bool nt_cambioTipoActual\n         | string nt_cambioTipoActual\n    \n    nt_cambioTipoActual : empty\n    \n    CUERPO : left_cb CUERPO_AUX right_cb\n    \n    CUERPO_AUX : CUERPO_VARS CUERPO_ESTATUTO\n               | CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO\n\n    \n    CUERPO_VARS : VARS\n                | empty\n    \n    CUERPO_ESTATUTO : ESTATUTO\n                    | empty\n    \n    CUERPOFUNC : CUERPOFUNC_AUX\n    \n    CUERPOFUNC_AUX : CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n                   | CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO\n    \n    nt_funcInicio : empty\n    \n    CUERPOFUNC_VARS : VARS \n                    | empty\n    \n    CUERPOFUNC_ESTATUTO : ESTATUTO\n                        | empty\n    \n    CUERPORETORNO : left_cb CUERPORETORNO_AUX right_cb\n    \n    CUERPORETORNO_AUX : CUERPORETORNO_CF_AUX RETORNO\n                      | CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO\n    \n    CUERPORETORNO_CF_AUX : CUERPOFUNC\n                         | empty\n    \n    RETORNO : return EXP semicolon\n    \n    FUNC : TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub\n         | VOIDFUNC nt_pushEndsub\n    \n    nt_pushEndsub : empty\n    \n    test_print : empty\n    \n    nt_cambioFuncActual : empty\n    \n    nt_agregarIdFunc : empty\n    \n    FUNC_PARA : TIPO id nt_agregarParametro\n              | FUNC_PARA comma TIPO id nt_agregarParametro\n              | empty\n    \n    nt_agregarParametro : empty\n    \n    VOIDFUNC : void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb\n    \n    nt_hacerVoid : empty\n    \n    VOIDFUNC_PARA : TIPO id nt_agregarParametro\n                  | VOIDFUNC_PARA comma TIPO id nt_agregarParametro\n    \n    ESTATUTO : ASIGNACION\n             | CONDICION\n             | CICLO\n             | LECTURA\n             | ESCRITURA\n             | LLAMADA\n    \n    CONDICION : if CONDICION_AUX\n    \n    CONDICION_AUX : left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto\n    \n    ELSE_ELIF : ELSE\n              | ELIF\n              | empty\n    \n    ELSE : else nt_pushElse CUERPO\n    \n    ELIF : elseif nt_pushElse CONDICION_AUX\n    \n    nt_checarBool : empty\n    \n    nt_pushSalto : empty\n    \n    nt_pushElse : empty\n    \n    CICLO : while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop\n    \n    nt_saltoLoop : empty\n    \n    nt_pushLoop : empty\n    \n    LECTURA : cread left_par id nt_leer right_par semicolon\n    \n    nt_leer : empty\n    \n    ESCRITURA : cwrite left_par EXPRESION nt_escribir right_par semicolon\n    \n    nt_escribir : empty\n    \n    LLAMADA : left_par LLAMADA_EXPRESION right_par semicolon\n    \n    LLAMADA_EXPRESION : EXPRESION\n                      | LLAMADA_EXPRESION comma EXPRESION\n    \n    EXPRESION : EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B\n    \n    nt_checaAndOrNot : empty\n    \n    EXPRESION_NOT : not nt_pushPOper\n                | empty\n    \n\tEXPRESION_B : and nt_pushPOper EXPRESION\n\t           | or nt_pushPOper EXPRESION\n\t\t\t   | empty\n\t\n    EXPRESIONLOGICA :  EXP EXPRESIONLOGICA_AUX\n    \n    EXPRESIONLOGICA_AUX : lt nt_pushPOper EXP nt_checarRelop\n                        | gt nt_pushPOper EXP nt_checarRelop\n                        | ne nt_pushPOper EXP nt_checarRelop\n                        | ge nt_pushPOper EXP nt_checarRelop\n                        | le nt_pushPOper EXP nt_checarRelop\n                        | et nt_pushPOper EXP nt_checarRelop\n                        | empty\n    \n    nt_checarRelop : empty\n    \n    EXP : TERMINO nt_checar_sumas EXP_AUX\n    \n    nt_checar_sumas : empty\n    \n    EXP_AUX : plus nt_pushPOper EXP\n            | minus nt_pushPOper EXP\n            | empty\n    \n    TERMINO : FACTOR nt_checar_multis TERMINO_AUX\n    \n    nt_checar_multis : empty\n    \n    TERMINO_AUX : multiply nt_pushPOper TERMINO\n                | divide nt_pushPOper TERMINO\n                | empty\n    \n    FACTOR : left_par nt_pushPOper EXPRESION right_par nt_popPOper\n            | CONSTANTE\n            | LISTA\n            | FACTOR_AUX\n    \n    FACTOR_AUX : id nt_pushPilaO\n                | id LLAMADA_F\n    \n    LLAMADA_F : left_par EXPRESION LLAMADAF_AUX right_par\n    \n    LLAMADAF_AUX : comma EXPRESION LLAMADAF_AUX\n                    | empty\n    \n    LISTA : id left_sb EXP right_sb\n    \n    CONSTANTE : NUMERICA\n              | BOOLEANA\n              | STRINGS\n    \n    NUMERICA : NUMERICA_AUX\n             | plus nt_sigMas NUMERICA_AUX\n             | minus nt_sigMenos NUMERICA_AUX\n    \n    nt_sigMas : empty\n    \n    nt_sigMenos : empty\n    \n    NUMERICA_AUX : cteInt nt_pushInt\n                 | cteFloat nt_pushFloat\n    \n    nt_pushInt : empty\n    \n    nt_pushFloat : empty\n    \n    BOOLEANA : true\n             | false\n    \n    STRINGS : cteString\n    \n    ASIGNACION : ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon\n    \n    nt_checaEquals : empty\n    \n    ASIGNACION_AUX : id nt_pushPilaO\n                   | LISTA\n    \n    nt_pushPilaO : empty\n    \n    nt_pushPOper : empty\n    \n    nt_popPOper : empty\n    \n    empty :\n    '
    
_lr_action_items = {'and':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,180,181,202,203,204,205,207,210,211,213,214,215,216,222,223,226,231,247,249,251,253,256,257,281,288,289,290,291,292,293,301,303,304,305,306,307,308,311,312,313,314,315,316,317,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,-151,-151,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,261,-94,-100,-107,-133,-113,-109,-114,-118,-134,-151,-151,-151,-151,-151,-151,-151,-125,-112,-111,-119,-150,-117,-116,-104,-108,-102,-103,-101,-105,-106,]),'gt':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,181,202,203,204,205,207,210,211,213,214,215,216,247,249,251,253,256,257,281,301,303,304,305,306,307,308,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,225,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-133,-113,-109,-114,-118,-134,-151,-125,-112,-111,-119,-150,-117,-116,]),'false':([110,127,129,132,133,135,137,138,167,178,179,182,184,185,194,206,212,224,225,227,228,229,230,248,250,254,255,261,263,265,266,267,268,269,270,277,279,280,282,283,286,287,],[-151,-151,158,-151,-151,158,-151,-96,-151,-149,-151,-151,-95,-151,158,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,158,158,158,158,158,158,-151,158,158,158,158,-151,-151,]),'right_sb':([80,92,93,119,131,145,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,202,203,204,205,207,210,211,213,214,215,216,247,249,251,253,256,257,281,301,303,304,305,306,307,308,],[-151,120,-21,-151,-148,189,-142,202,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-133,-113,-109,-114,-118,-134,-151,-125,-112,-111,-119,-150,-117,-116,]),'semicolon':([3,4,5,50,51,52,59,60,69,70,71,78,90,120,131,146,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,180,181,183,189,202,203,204,205,207,210,211,213,214,215,216,221,222,223,226,231,237,240,244,247,249,251,253,256,257,258,259,260,262,264,281,288,289,290,291,292,293,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,],[-151,6,-4,57,-151,61,-20,-151,-151,-25,-22,-151,-26,-151,-148,-18,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,-151,-151,233,-151,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-151,-151,-94,-100,-107,-19,273,274,-133,-113,-109,-114,-118,-134,284,285,-145,-93,-99,-151,-151,-151,-151,-151,-151,-151,-125,-112,-111,-119,-150,-117,-116,-97,-98,-104,-108,-102,-103,-101,-105,-106,]),'int':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,117,123,147,191,235,],[-151,-5,-151,-14,-151,-6,-12,-15,-151,-11,23,-2,23,-24,23,-17,-13,23,-7,-151,-10,-9,-8,-10,-54,-55,-23,-16,23,23,23,23,-151,-53,-47,-63,]),'float':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,117,123,147,191,235,],[-151,-5,-151,-14,-151,-6,-12,-15,-151,-11,24,-2,24,-24,24,-17,-13,24,-7,-151,-10,-9,-8,-10,-54,-55,-23,-16,24,24,24,24,-151,-53,-47,-63,]),'cteFloat':([110,127,129,132,133,135,137,138,163,167,176,178,179,182,184,185,194,206,208,209,212,217,218,224,225,227,228,229,230,248,250,254,255,261,263,265,266,267,268,269,270,277,279,280,282,283,286,287,],[-151,-151,160,-151,-151,160,-151,-96,-151,-151,-151,-149,-151,-151,-95,-151,160,-151,160,-135,-151,-136,160,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,160,160,160,160,160,160,-151,160,160,160,160,-151,-151,]),'left_sb':([53,59,63,72,79,103,162,],[-151,-20,73,-151,91,129,129,]),'multiply':([131,158,160,161,162,164,166,168,169,170,171,172,173,174,175,202,203,204,205,207,213,214,215,216,247,257,281,301,305,306,],[-148,-142,-151,-130,-151,-122,-143,-141,-131,-120,-151,-132,-129,-151,-121,-128,-138,-140,-123,-124,-139,-137,255,-115,-133,-134,-151,-125,-119,-150,]),'ge':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,181,202,203,204,205,207,210,211,213,214,215,216,247,249,251,253,256,257,281,301,303,304,305,306,307,308,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,224,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-133,-113,-109,-114,-118,-134,-151,-125,-112,-111,-119,-150,-117,-116,]),'comma':([50,51,52,59,60,69,70,71,74,78,82,83,88,90,94,118,120,121,122,131,134,136,144,146,155,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,180,181,188,189,197,202,203,204,205,207,210,211,213,214,215,216,222,223,226,231,232,236,237,246,247,249,251,253,256,257,262,264,281,288,289,290,291,292,293,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,],[58,-151,62,-20,-151,-151,-25,-22,-151,-151,-61,96,117,-26,-151,-151,-151,-62,-59,-148,-91,182,-65,-18,-151,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,-151,-151,-151,-151,-60,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-151,-94,-100,-107,-92,-66,-19,277,-133,-113,-109,-114,-118,-134,-93,-99,-151,-151,-151,-151,-151,-151,-151,-125,277,-112,-111,-119,-150,-117,-116,-97,-98,-104,-108,-102,-103,-101,-105,-106,]),'cread':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,111,114,115,124,128,141,142,149,150,152,153,154,187,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[-14,-12,-15,-11,-13,-23,-16,-151,98,-35,-36,-151,-69,-70,-67,-37,-71,-38,-72,-68,-33,98,-32,-151,-73,-34,-151,-151,-151,-43,-151,-44,-44,-151,-48,-42,98,-90,-49,98,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'right_par':([74,82,83,88,94,118,121,122,131,134,136,144,155,156,157,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,177,180,181,188,197,198,199,200,201,202,203,204,205,207,210,211,213,214,215,216,219,220,222,223,226,231,232,234,236,246,247,249,251,252,253,256,257,262,264,271,276,278,281,288,289,290,291,292,293,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,324,],[-151,-61,95,116,-151,-151,-62,-59,-148,-91,183,-65,-151,-151,-151,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,-151,-151,-151,-151,-60,244,-87,245,-80,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,258,-89,-151,-94,-100,-107,-92,-151,-66,-151,-133,-113,-109,281,-114,-118,-134,-93,-99,294,301,-127,-151,-151,-151,-151,-151,-151,-151,-125,-151,-112,-111,-119,-150,-117,-116,-97,-98,-104,-108,-102,-103,-101,-105,-106,-126,]),'cteString':([110,127,129,132,133,135,137,138,167,178,179,182,184,185,194,206,212,224,225,227,228,229,230,248,250,254,255,261,263,265,266,267,268,269,270,277,279,280,282,283,286,287,],[-151,-151,166,-151,-151,166,-151,-96,-151,-149,-151,-151,-95,-151,166,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,166,166,166,166,166,166,-151,166,166,166,166,-151,-151,]),'id':([1,9,12,13,15,22,23,24,25,28,31,32,34,35,36,37,38,39,40,44,47,48,49,57,58,61,62,76,81,84,85,86,87,89,97,99,101,102,106,107,108,109,110,111,114,115,124,125,126,127,128,129,132,133,135,137,138,141,142,143,149,150,152,153,154,167,178,179,182,184,185,187,192,193,194,195,196,206,212,224,225,227,228,229,230,233,238,239,241,242,243,248,250,254,255,261,263,265,266,267,268,269,270,272,273,274,275,277,279,280,282,283,284,285,286,287,295,296,297,300,318,319,320,325,326,327,328,],[3,-14,-12,-15,-11,-13,-151,-151,-151,-151,-151,-151,51,53,-27,-31,-28,54,-57,-29,-30,-64,56,-23,69,-16,72,-151,94,103,-35,-36,-151,118,-69,-70,-67,-37,-71,-38,-72,-68,-151,-33,103,-32,-151,155,156,-151,-73,162,-151,-151,162,-151,-96,-34,-151,188,-151,-151,-43,-151,-44,-151,-149,-151,-151,-95,-151,-44,-151,-48,162,-42,103,-151,-151,-151,-151,-151,-151,-151,-151,-90,-49,103,-40,-45,-46,-151,-151,-151,-151,-151,-151,162,162,162,162,162,162,-41,-52,-86,-151,-151,162,162,162,162,-88,-144,-151,-151,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'if':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,111,114,115,124,128,141,142,149,150,152,153,154,187,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[-14,-12,-15,-11,-13,-23,-16,-151,100,-35,-36,-151,-69,-70,-67,-37,-71,-38,-72,-68,-33,100,-32,-151,-73,-34,-151,-151,-151,-43,-151,-44,-44,-151,-48,-42,100,-90,-49,100,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'le':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,181,202,203,204,205,207,210,211,213,214,215,216,247,249,251,253,256,257,281,301,303,304,305,306,307,308,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,229,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-133,-113,-109,-114,-118,-134,-151,-125,-112,-111,-119,-150,-117,-116,]),'divide':([131,158,160,161,162,164,166,168,169,170,171,172,173,174,175,202,203,204,205,207,213,214,215,216,247,257,281,301,305,306,],[-148,-142,-151,-130,-151,-122,-143,-141,-131,-120,-151,-132,-129,-151,-121,-128,-138,-140,-123,-124,-139,-137,254,-115,-133,-134,-151,-125,-119,-150,]),'right_cb':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,111,114,115,128,141,142,149,150,152,153,186,187,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[-14,-12,-15,-11,-13,-23,-16,-151,-151,-35,-36,115,-69,-70,-67,-37,-71,-38,-72,-68,-33,-151,-32,-73,-34,-151,191,-39,-43,-151,235,-44,-151,-48,-42,-151,-90,-49,-151,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'ne':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,181,202,203,204,205,207,210,211,213,214,215,216,247,249,251,253,256,257,281,301,303,304,305,306,307,308,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,227,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-133,-113,-109,-114,-118,-134,-151,-125,-112,-111,-119,-150,-117,-116,]),'lt':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,181,202,203,204,205,207,210,211,213,214,215,216,247,249,251,253,256,257,281,301,303,304,305,306,307,308,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,228,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-133,-113,-109,-114,-118,-134,-151,-125,-112,-111,-119,-150,-117,-116,]),'program':([0,],[1,]),'bool':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,117,123,147,191,235,],[-151,-5,-151,-14,-151,-6,-12,-15,-151,-11,28,-2,28,-24,28,-17,-13,28,-7,-151,-10,-9,-8,-10,-54,-55,-23,-16,28,28,28,28,-151,-53,-47,-63,]),'cwrite':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,111,114,115,124,128,141,142,149,150,152,153,154,187,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[-14,-12,-15,-11,-13,-23,-16,-151,104,-35,-36,-151,-69,-70,-67,-37,-71,-38,-72,-68,-33,104,-32,-151,-73,-34,-151,-151,-151,-43,-151,-44,-44,-151,-48,-42,104,-90,-49,104,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'var':([6,9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,111,114,115,124,128,141,142,149,150,152,153,154,187,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[10,-14,-12,-15,10,-13,-23,-16,10,-151,-35,-36,10,-69,-70,-67,-37,-71,-38,-72,-68,-33,-151,-32,10,-73,-34,10,10,10,-43,-151,-44,-44,-151,-48,-42,-151,-90,-49,-151,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'main':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,43,45,46,57,61,123,147,191,235,],[-151,-5,-151,-14,-6,-12,-15,-11,-151,-2,-13,-151,-7,-151,-10,-9,-8,-2,55,-54,-55,-23,-16,-151,-53,-47,-63,]),'$end':([2,75,115,],[0,-1,-32,]),'return':([9,12,13,15,22,57,61,97,99,101,106,108,109,115,124,128,148,149,150,151,152,153,154,187,190,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[-14,-12,-15,-11,-13,-23,-16,-69,-70,-67,-71,-72,-68,-32,-151,-73,-50,-151,-39,194,-43,-151,-44,-44,194,-151,-48,-42,-151,-90,-49,-151,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'string':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,29,30,33,41,42,45,46,57,61,74,77,96,117,123,147,191,235,],[-151,-5,-151,-14,-151,-6,-12,-15,-151,-11,31,-2,31,-24,31,-17,-13,31,-7,-151,-10,-9,-8,-10,-54,-55,-23,-16,31,31,31,31,-151,-53,-47,-63,]),'et':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,181,202,203,204,205,207,210,211,213,214,215,216,247,249,251,253,256,257,281,301,303,304,305,306,307,308,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,230,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,-133,-113,-109,-114,-118,-134,-151,-125,-112,-111,-119,-150,-117,-116,]),'void':([6,7,8,9,11,12,13,15,16,17,22,26,27,29,30,33,41,42,45,46,57,61,123,147,191,235,],[-151,-5,-151,-14,-6,-12,-15,-11,32,-2,-13,32,-7,-151,-10,-9,-8,-10,-54,-55,-23,-16,-151,-53,-47,-63,]),'equals':([103,105,113,130,131,202,],[-151,133,-147,-146,-148,-128,]),'else':([115,275,],[-32,299,]),'elseif':([115,275,],[-32,298,]),'left_par':([9,12,13,15,22,54,56,57,61,64,65,68,76,84,85,86,87,97,98,99,100,101,102,104,106,107,108,109,110,111,112,114,115,124,127,128,129,132,133,135,137,138,139,140,141,142,149,150,152,153,154,162,167,178,179,182,184,185,187,192,193,194,195,196,206,212,224,225,227,228,229,230,233,238,239,241,242,243,248,250,254,255,261,263,265,266,267,268,269,270,272,273,274,275,277,279,280,282,283,284,285,286,287,295,296,297,298,300,318,319,320,321,322,325,326,327,328,],[-14,-12,-15,-11,-13,-151,-151,-23,-16,74,-58,77,-151,110,-35,-36,-151,-69,126,-70,127,-67,-37,132,-71,-38,-72,-68,-151,-33,-151,110,-32,-151,-151,-73,167,-151,-151,167,-151,-96,-84,185,-34,-151,-151,-151,-43,-151,-44,206,-151,-149,-151,-151,-95,-151,-44,-151,-48,167,-42,110,-151,-151,-151,-151,-151,-151,-151,-151,-90,-49,110,-40,-45,-46,-151,-151,-151,-151,-151,-151,167,167,167,167,167,167,-41,-52,-86,-151,-151,167,167,167,167,-88,-144,-151,-151,-151,-76,-75,-151,-77,-151,-74,-81,127,-82,-83,-85,-79,-78,]),'not':([110,127,132,133,167,178,179,182,185,206,212,261,263,277,286,287,],[137,137,137,-151,-151,-149,137,137,137,137,137,-151,-151,137,137,137,]),'true':([110,127,129,132,133,135,137,138,167,178,179,182,184,185,194,206,212,224,225,227,228,229,230,248,250,254,255,261,263,265,266,267,268,269,270,277,279,280,282,283,286,287,],[-151,-151,168,-151,-151,168,-151,-96,-151,-149,-151,-151,-95,-151,168,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,168,168,168,168,168,168,-151,168,168,168,168,-151,-151,]),'left_cb':([17,55,66,67,95,116,245,294,299,322,323,],[-2,-151,76,-3,124,142,76,76,-151,-82,76,]),'cteInt':([73,91,110,127,129,132,133,135,137,138,163,167,176,178,179,182,184,185,194,206,208,209,212,217,218,224,225,227,228,229,230,248,250,254,255,261,263,265,266,267,268,269,270,277,279,280,282,283,286,287,],[80,119,-151,-151,171,-151,-151,171,-151,-96,-151,-151,-151,-149,-151,-151,-95,-151,171,-151,171,-135,-151,-136,171,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,-151,171,171,171,171,171,171,-151,171,171,171,171,-151,-151,]),'list':([6,9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,111,114,115,124,128,141,142,149,150,152,153,154,187,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[14,-14,-12,-15,14,-13,-23,-16,14,-151,-35,-36,14,-69,-70,-67,-37,-71,-38,-72,-68,-33,-151,-32,14,-73,-34,14,14,14,-43,-151,-44,-44,-151,-48,-42,-151,-90,-49,-151,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'or':([131,158,160,161,162,164,165,166,168,169,170,171,172,173,174,175,180,181,202,203,204,205,207,210,211,213,214,215,216,222,223,226,231,247,249,251,253,256,257,281,288,289,290,291,292,293,301,303,304,305,306,307,308,311,312,313,314,315,316,317,],[-148,-142,-151,-130,-151,-122,-151,-143,-141,-131,-120,-151,-132,-129,-151,-121,-151,-151,-128,-138,-140,-123,-124,-110,-151,-139,-137,-151,-115,263,-94,-100,-107,-133,-113,-109,-114,-118,-134,-151,-151,-151,-151,-151,-151,-151,-125,-112,-111,-119,-150,-117,-116,-104,-108,-102,-103,-101,-105,-106,]),'while':([9,12,13,15,22,57,61,76,84,85,86,87,97,99,101,102,106,107,108,109,111,114,115,124,128,141,142,149,150,152,153,154,187,192,193,195,196,233,238,239,241,242,243,272,273,274,275,284,285,295,296,297,300,318,319,320,325,326,327,328,],[-14,-12,-15,-11,-13,-23,-16,-151,112,-35,-36,-151,-69,-70,-67,-37,-71,-38,-72,-68,-33,112,-32,-151,-73,-34,-151,-151,-151,-43,-151,-44,-44,-151,-48,-42,112,-90,-49,112,-40,-45,-46,-41,-52,-86,-151,-88,-144,-151,-76,-75,-77,-151,-74,-81,-83,-85,-79,-78,]),'plus':([110,127,129,131,132,133,135,137,138,158,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,178,179,182,184,185,194,202,203,204,205,206,207,210,211,212,213,214,215,216,224,225,227,228,229,230,247,248,250,253,254,255,256,257,261,263,265,266,267,268,269,270,277,279,280,281,282,283,286,287,301,305,306,307,308,],[-151,-151,163,-148,-151,-151,163,-151,-96,-142,-151,-130,-151,-122,-151,-143,-151,-141,-131,-120,-151,-132,-129,-151,-121,-149,-151,-151,-95,-151,163,-128,-138,-140,-123,-151,-124,-110,250,-151,-139,-137,-151,-115,-151,-151,-151,-151,-151,-151,-133,-151,-151,-114,-151,-151,-118,-134,-151,-151,163,163,163,163,163,163,-151,163,163,-151,163,163,-151,-151,-125,-119,-150,-117,-116,]),'minus':([110,127,129,131,132,133,135,137,138,158,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,178,179,182,184,185,194,202,203,204,205,206,207,210,211,212,213,214,215,216,224,225,227,228,229,230,247,248,250,253,254,255,256,257,261,263,265,266,267,268,269,270,277,279,280,281,282,283,286,287,301,305,306,307,308,],[-151,-151,176,-148,-151,-151,176,-151,-96,-142,-151,-130,-151,-122,-151,-143,-151,-141,-131,-120,-151,-132,-129,-151,-121,-149,-151,-151,-95,-151,176,-128,-138,-140,-123,-151,-124,-110,248,-151,-139,-137,-151,-115,-151,-151,-151,-151,-151,-151,-133,-151,-151,-114,-151,-151,-118,-134,-151,-151,176,176,176,176,176,176,-151,176,176,-151,176,176,-151,-151,-125,-119,-150,-117,-116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'nt_cambioFuncActual':([25,],[39,]),'CICLO':([84,114,196,239,],[97,97,97,97,]),'VARS_LIST':([6,15,76,87,124,142,149,150,],[9,9,9,9,9,9,9,9,]),'TERMINO_AUX':([215,],[253,]),'CUERPO':([66,245,294,323,],[75,275,318,328,]),'EXP':([129,135,194,265,266,267,268,269,270,279,280,],[159,181,240,288,289,290,291,292,293,303,304,]),'CUERPO_AUX':([76,],[87,]),'nt_hacerVoid':([32,],[49,]),'LECTURA':([84,114,196,239,],[99,99,99,99,]),'ESCRITURA':([84,114,196,239,],[106,106,106,106,]),'nt_checarRelop':([288,289,290,291,292,293,],[311,313,314,315,316,317,]),'VOIDFUNC_PARA':([77,],[88,]),'nt_pushLoop':([318,],[325,]),'VOIDFUNC':([16,26,],[29,29,]),'EXPRESION_B':([222,],[262,]),'LLAMADA':([84,114,196,239,],[108,108,108,108,]),'nt_checar_multis':([174,],[215,]),'CONDICION':([84,114,196,239,],[109,109,109,109,]),'RETORNO':([151,190,],[193,238,]),'STRINGS':([129,135,194,265,266,267,268,269,270,279,280,282,283,],[169,169,169,169,169,169,169,169,169,169,169,169,169,]),'nt_agregarId':([51,53,69,72,],[60,63,78,79,]),'CUERPORETORNO_AUX':([124,],[149,]),'nt_pushPilaO':([103,162,],[130,205,]),'PROGRAMA':([0,],[2,]),'nt_sigMas':([163,],[208,]),'nt_cambiarScope':([8,26,55,],[16,43,67,]),'LISTA':([84,114,129,135,194,196,239,265,266,267,268,269,270,279,280,282,283,],[113,113,175,175,175,113,113,175,175,175,175,175,175,175,175,175,175,]),'FUNC_PARA':([74,],[83,]),'EXPRESIONLOGICA':([135,],[180,]),'nt_pushEndsub':([29,123,],[45,147,]),'PROGRAMA_VARS':([6,],[8,]),'nt_pushFloat':([160,],[203,]),'nt_funcInicio':([153,192,],[196,239,]),'nt_leer':([156,],[198,]),'CUERPOFUNC_AUX':([124,142,149,],[150,150,150,]),'CONDICION_AUX':([100,321,],[128,327,]),'nt_saltoLoop':([112,],[140,]),'CUERPOFUNC_ESTATUTO':([196,239,],[241,272,]),'nt_checaEquals':([221,],[259,]),'ASIGNACION':([84,114,196,239,],[101,101,101,101,]),'VARS_AUX':([6,76,87,124,142,149,150,],[15,15,15,15,15,15,15,]),'VARS_LIST_AUX':([35,],[52,]),'nt_pushElse':([298,299,],[321,323,]),'PROGRAMA_FUNC_AUX':([16,26,],[27,41,]),'nt_popPOper':([281,],[305,]),'CUERPOFUNC_VARS':([124,142,149,150,],[153,153,153,192,]),'ASIGNACION_AUX':([84,114,196,239,],[105,105,105,105,]),'FACTOR_AUX':([129,135,194,265,266,267,268,269,270,279,280,282,283,],[164,164,164,164,164,164,164,164,164,164,164,164,164,]),'NUMERICA_AUX':([129,135,194,208,218,265,266,267,268,269,270,279,280,282,283,],[172,172,172,247,257,172,172,172,172,172,172,172,172,172,172,]),'nt_sigMenos':([176,],[218,]),'ELSE':([275,],[297,]),'CUERPORETORNO':([95,],[123,]),'FUNC':([16,26,],[33,33,]),'CUERPO_ESTATUTO':([84,114,],[111,141,]),'nt_hacerVar':([10,],[18,]),'CONSTANTE':([129,135,194,265,266,267,268,269,270,279,280,282,283,],[170,170,170,170,170,170,170,170,170,170,170,170,170,]),'NUMERICA':([129,135,194,265,266,267,268,269,270,279,280,282,283,],[173,173,173,173,173,173,173,173,173,173,173,173,173,]),'FACTOR':([129,135,194,265,266,267,268,269,270,279,280,282,283,],[174,174,174,174,174,174,174,174,174,174,174,174,174,]),'nt_checar_sumas':([165,],[211,]),'EXPRESION':([110,127,132,179,182,185,206,212,277,286,287,],[134,157,177,221,232,234,246,252,302,309,310,]),'EXPRESION_NOT':([110,127,132,179,182,185,206,212,277,286,287,],[135,135,135,135,135,135,135,135,135,135,135,]),'ELSE_ELIF':([275,],[295,]),'nt_agregarDicVar':([60,78,120,189,],[70,90,146,237,]),'BOOLEANA':([129,135,194,265,266,267,268,269,270,279,280,282,283,],[161,161,161,161,161,161,161,161,161,161,161,161,161,]),'nt_pushJmpMain':([3,],[4,]),'CUERPORETORNO_CF_AUX':([124,149,],[151,190,]),'CUERPOFUNC':([124,142,149,],[148,186,148,]),'nt_checaAndOrNot':([180,],[222,]),'PROGRAMA_FUNC':([16,],[26,]),'TERMINO':([129,135,194,265,266,267,268,269,270,279,280,282,283,],[165,165,165,165,165,165,165,165,165,165,165,307,308,]),'nt_pushInt':([171,],[214,]),'EXP_AUX':([211,],[251,]),'empty':([3,6,8,10,14,16,23,24,25,26,28,29,31,32,51,53,54,55,56,60,69,72,74,76,78,80,84,87,94,103,110,112,114,118,119,120,123,124,127,132,133,137,142,149,150,153,155,156,157,160,162,163,165,167,171,174,176,177,179,180,181,182,185,188,189,192,196,206,211,212,215,221,222,224,225,227,228,229,230,234,239,246,248,250,254,255,261,263,275,277,281,286,287,288,289,290,291,292,293,295,298,299,302,318,],[5,11,17,19,21,30,37,37,40,42,37,46,37,48,59,59,65,17,65,71,59,59,82,86,71,93,107,86,121,131,138,139,107,121,93,71,46,154,138,138,178,178,187,154,187,195,121,199,201,204,131,209,210,178,213,216,217,220,138,223,231,138,138,121,71,195,243,138,249,138,256,260,264,178,178,178,178,178,178,201,243,278,178,178,178,178,178,178,300,138,306,138,138,312,312,312,312,312,312,320,322,322,278,326,]),'nt_pushSalto':([295,],[319,]),'VARS_VAR_AUX':([34,],[50,]),'VARS_LIST_VAR':([6,15,76,87,124,142,149,150,],[12,22,12,12,12,12,12,12,]),'nt_agregarIdFunc':([54,56,],[64,68,]),'VARS_VAR':([6,15,76,87,124,142,149,150,],[13,13,13,13,13,13,13,13,]),'CUERPO_VARS':([76,87,],[84,114,]),'nt_hacerLista':([14,],[20,]),'nt_escribir':([177,],[219,]),'nt_agregarCteLista':([80,119,],[92,145,]),'ELIF':([275,],[296,]),'LLAMADA_EXPRESION':([110,],[136,]),'nt_ambienteMain':([55,],[66,]),'VARS':([6,76,87,124,142,149,150,],[7,85,85,152,152,152,152,]),'nt_checarBool':([157,234,],[200,271,]),'LLAMADA_F':([162,],[207,]),'TIPO':([16,18,20,26,74,77,96,117,],[25,34,35,25,81,89,125,143,]),'ESTATUTO':([84,114,196,239,],[102,102,242,242,]),'nt_cambioTipoActual':([23,24,28,31,],[36,38,44,47,]),'nt_agregarParametro':([94,118,155,188,],[122,144,197,236,]),'nt_pushPOper':([133,137,167,224,225,227,228,229,230,248,250,254,255,261,263,],[179,184,212,265,266,267,268,269,270,279,280,282,283,286,287,]),'LLAMADAF_AUX':([246,302,],[276,324,]),'EXPRESIONLOGICA_AUX':([181,],[226,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id nt_pushJmpMain semicolon PROGRAMA_VARS nt_cambiarScope PROGRAMA_FUNC nt_cambiarScope main nt_ambienteMain CUERPO','PROGRAMA',11,'p_PROGRAMA','CSP_yacc.py',33),
  ('nt_cambiarScope -> empty','nt_cambiarScope',1,'p_nt_cambiarScope','CSP_yacc.py',63),
  ('nt_ambienteMain -> nt_cambiarScope','nt_ambienteMain',1,'p_nt_ambienteMain','CSP_yacc.py',73),
  ('nt_pushJmpMain -> empty','nt_pushJmpMain',1,'p_nt_pushJmpMain','CSP_yacc.py',78),
  ('PROGRAMA_VARS -> VARS','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',88),
  ('PROGRAMA_VARS -> empty','PROGRAMA_VARS',1,'p_PROGRAMA_VARS','CSP_yacc.py',89),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',1,'p_PROGRAMA_FUNC','CSP_yacc.py',94),
  ('PROGRAMA_FUNC -> PROGRAMA_FUNC PROGRAMA_FUNC_AUX','PROGRAMA_FUNC',2,'p_PROGRAMA_FUNC','CSP_yacc.py',95),
  ('PROGRAMA_FUNC_AUX -> FUNC','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',100),
  ('PROGRAMA_FUNC_AUX -> empty','PROGRAMA_FUNC_AUX',1,'p_PROGRAMA_FUNC_AUX','CSP_yacc.py',101),
  ('VARS -> VARS_AUX','VARS',1,'p_VARS','CSP_yacc.py',106),
  ('VARS_AUX -> VARS_LIST_VAR','VARS_AUX',1,'p_VARS_AUX','CSP_yacc.py',111),
  ('VARS_AUX -> VARS_AUX VARS_LIST_VAR','VARS_AUX',2,'p_VARS_AUX','CSP_yacc.py',112),
  ('VARS_LIST_VAR -> VARS_LIST','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',117),
  ('VARS_LIST_VAR -> VARS_VAR','VARS_LIST_VAR',1,'p_VARS_LIST_VAR','CSP_yacc.py',118),
  ('VARS_LIST -> list nt_hacerLista TIPO VARS_LIST_AUX semicolon','VARS_LIST',5,'p_VARS_LIST','CSP_yacc.py',123),
  ('nt_hacerLista -> empty','nt_hacerLista',1,'p_nt_hacerLista','CSP_yacc.py',128),
  ('VARS_LIST_AUX -> id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',7,'p_VARS_LIST_AUX','CSP_yacc.py',135),
  ('VARS_LIST_AUX -> VARS_LIST_AUX comma id nt_agregarId left_sb cteInt nt_agregarCteLista right_sb nt_agregarDicVar','VARS_LIST_AUX',9,'p_VARS_LIST_AUX','CSP_yacc.py',136),
  ('nt_agregarId -> empty','nt_agregarId',1,'p_nt_agregarId','CSP_yacc.py',141),
  ('nt_agregarCteLista -> empty','nt_agregarCteLista',1,'p_nt_agregarCteLista','CSP_yacc.py',148),
  ('nt_agregarDicVar -> empty','nt_agregarDicVar',1,'p_nt_agregarDicVar','CSP_yacc.py',155),
  ('VARS_VAR -> var nt_hacerVar TIPO VARS_VAR_AUX semicolon','VARS_VAR',5,'p_VARS_VAR','CSP_yacc.py',171),
  ('nt_hacerVar -> empty','nt_hacerVar',1,'p_nt_hacerVar','CSP_yacc.py',175),
  ('VARS_VAR_AUX -> id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',3,'p_VARS_VAR_AUX','CSP_yacc.py',182),
  ('VARS_VAR_AUX -> VARS_VAR_AUX comma id nt_agregarId nt_agregarDicVar','VARS_VAR_AUX',5,'p_VARS_VAR_AUX','CSP_yacc.py',183),
  ('TIPO -> int nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',188),
  ('TIPO -> float nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',189),
  ('TIPO -> bool nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',190),
  ('TIPO -> string nt_cambioTipoActual','TIPO',2,'p_TIPO','CSP_yacc.py',191),
  ('nt_cambioTipoActual -> empty','nt_cambioTipoActual',1,'p_nt_cambioTipoActual','CSP_yacc.py',196),
  ('CUERPO -> left_cb CUERPO_AUX right_cb','CUERPO',3,'p_CUERPO','CSP_yacc.py',203),
  ('CUERPO_AUX -> CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',2,'p_CUERPO_AUX','CSP_yacc.py',208),
  ('CUERPO_AUX -> CUERPO_AUX CUERPO_VARS CUERPO_ESTATUTO','CUERPO_AUX',3,'p_CUERPO_AUX','CSP_yacc.py',209),
  ('CUERPO_VARS -> VARS','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',215),
  ('CUERPO_VARS -> empty','CUERPO_VARS',1,'p_CUERPO_VARS','CSP_yacc.py',216),
  ('CUERPO_ESTATUTO -> ESTATUTO','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',221),
  ('CUERPO_ESTATUTO -> empty','CUERPO_ESTATUTO',1,'p_CUERPO_ESTATUTO','CSP_yacc.py',222),
  ('CUERPOFUNC -> CUERPOFUNC_AUX','CUERPOFUNC',1,'p_CUERPOFUNC','CSP_yacc.py',227),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',3,'p_CUERPOFUNC_AUX','CSP_yacc.py',232),
  ('CUERPOFUNC_AUX -> CUERPOFUNC_AUX CUERPOFUNC_VARS nt_funcInicio CUERPOFUNC_ESTATUTO','CUERPOFUNC_AUX',4,'p_CUERPOFUNC_AUX','CSP_yacc.py',233),
  ('nt_funcInicio -> empty','nt_funcInicio',1,'p_nt_funcInicio','CSP_yacc.py',237),
  ('CUERPOFUNC_VARS -> VARS','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',246),
  ('CUERPOFUNC_VARS -> empty','CUERPOFUNC_VARS',1,'p_CUERPOFUNC_VARS','CSP_yacc.py',247),
  ('CUERPOFUNC_ESTATUTO -> ESTATUTO','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',252),
  ('CUERPOFUNC_ESTATUTO -> empty','CUERPOFUNC_ESTATUTO',1,'p_CUERPOFUNC_ESTATUTO','CSP_yacc.py',253),
  ('CUERPORETORNO -> left_cb CUERPORETORNO_AUX right_cb','CUERPORETORNO',3,'p_CUERPORETORNO','CSP_yacc.py',259),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',2,'p_CUERPORETORNO_AUX','CSP_yacc.py',264),
  ('CUERPORETORNO_AUX -> CUERPORETORNO_AUX CUERPORETORNO_CF_AUX RETORNO','CUERPORETORNO_AUX',3,'p_CUERPORETORNO_AUX','CSP_yacc.py',265),
  ('CUERPORETORNO_CF_AUX -> CUERPOFUNC','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',270),
  ('CUERPORETORNO_CF_AUX -> empty','CUERPORETORNO_CF_AUX',1,'p_CUERPORETORNO_CF_AUX','CSP_yacc.py',271),
  ('RETORNO -> return EXP semicolon','RETORNO',3,'p_RETORNO','CSP_yacc.py',278),
  ('FUNC -> TIPO nt_cambioFuncActual id nt_agregarIdFunc left_par FUNC_PARA right_par CUERPORETORNO nt_pushEndsub','FUNC',9,'p_FUNC','CSP_yacc.py',283),
  ('FUNC -> VOIDFUNC nt_pushEndsub','FUNC',2,'p_FUNC','CSP_yacc.py',284),
  ('nt_pushEndsub -> empty','nt_pushEndsub',1,'p_nt_pushEndsub','CSP_yacc.py',300),
  ('test_print -> empty','test_print',1,'p_test_print','CSP_yacc.py',311),
  ('nt_cambioFuncActual -> empty','nt_cambioFuncActual',1,'p_nt_cambioFuncActual','CSP_yacc.py',330),
  ('nt_agregarIdFunc -> empty','nt_agregarIdFunc',1,'p_nt_agregarIdFunc','CSP_yacc.py',338),
  ('FUNC_PARA -> TIPO id nt_agregarParametro','FUNC_PARA',3,'p_FUNC_PARA','CSP_yacc.py',345),
  ('FUNC_PARA -> FUNC_PARA comma TIPO id nt_agregarParametro','FUNC_PARA',5,'p_FUNC_PARA','CSP_yacc.py',346),
  ('FUNC_PARA -> empty','FUNC_PARA',1,'p_FUNC_PARA','CSP_yacc.py',347),
  ('nt_agregarParametro -> empty','nt_agregarParametro',1,'p_nt_agregarParametro','CSP_yacc.py',352),
  ('VOIDFUNC -> void nt_hacerVoid id nt_agregarIdFunc left_par VOIDFUNC_PARA right_par left_cb CUERPOFUNC right_cb','VOIDFUNC',10,'p_VOIDFUNC','CSP_yacc.py',365),
  ('nt_hacerVoid -> empty','nt_hacerVoid',1,'p_nt_hacerVoid','CSP_yacc.py',370),
  ('VOIDFUNC_PARA -> TIPO id nt_agregarParametro','VOIDFUNC_PARA',3,'p_VOIDFUNC_PARA','CSP_yacc.py',379),
  ('VOIDFUNC_PARA -> VOIDFUNC_PARA comma TIPO id nt_agregarParametro','VOIDFUNC_PARA',5,'p_VOIDFUNC_PARA','CSP_yacc.py',380),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',385),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',386),
  ('ESTATUTO -> CICLO','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',387),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',388),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',389),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','CSP_yacc.py',390),
  ('CONDICION -> if CONDICION_AUX','CONDICION',2,'p_CONDICION','CSP_yacc.py',395),
  ('CONDICION_AUX -> left_par EXPRESION nt_checarBool right_par CUERPO ELSE_ELIF nt_pushSalto','CONDICION_AUX',7,'p_CONDICION_AUX','CSP_yacc.py',400),
  ('ELSE_ELIF -> ELSE','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',404),
  ('ELSE_ELIF -> ELIF','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',405),
  ('ELSE_ELIF -> empty','ELSE_ELIF',1,'p_ELSE_ELIF','CSP_yacc.py',406),
  ('ELSE -> else nt_pushElse CUERPO','ELSE',3,'p_ELSE','CSP_yacc.py',411),
  ('ELIF -> elseif nt_pushElse CONDICION_AUX','ELIF',3,'p_ELIF','CSP_yacc.py',416),
  ('nt_checarBool -> empty','nt_checarBool',1,'p_nt_checarBool','CSP_yacc.py',423),
  ('nt_pushSalto -> empty','nt_pushSalto',1,'p_nt_pushSalto','CSP_yacc.py',447),
  ('nt_pushElse -> empty','nt_pushElse',1,'p_nt_pushElse','CSP_yacc.py',459),
  ('CICLO -> while nt_saltoLoop left_par EXPRESION nt_checarBool right_par CUERPO nt_pushLoop','CICLO',8,'p_CICLO','CSP_yacc.py',476),
  ('nt_saltoLoop -> empty','nt_saltoLoop',1,'p_nt_saltoLoop','CSP_yacc.py',481),
  ('nt_pushLoop -> empty','nt_pushLoop',1,'p_nt_pushLoop','CSP_yacc.py',490),
  ('LECTURA -> cread left_par id nt_leer right_par semicolon','LECTURA',6,'p_LECTURA','CSP_yacc.py',504),
  ('nt_leer -> empty','nt_leer',1,'p_nt_leer','CSP_yacc.py',510),
  ('ESCRITURA -> cwrite left_par EXPRESION nt_escribir right_par semicolon','ESCRITURA',6,'p_ESCRITURA','CSP_yacc.py',534),
  ('nt_escribir -> empty','nt_escribir',1,'p_nt_escribir','CSP_yacc.py',539),
  ('LLAMADA -> left_par LLAMADA_EXPRESION right_par semicolon','LLAMADA',4,'p_LLAMADA','CSP_yacc.py',555),
  ('LLAMADA_EXPRESION -> EXPRESION','LLAMADA_EXPRESION',1,'p_LLAMADA_EXPRESION','CSP_yacc.py',560),
  ('LLAMADA_EXPRESION -> LLAMADA_EXPRESION comma EXPRESION','LLAMADA_EXPRESION',3,'p_LLAMADA_EXPRESION','CSP_yacc.py',561),
  ('EXPRESION -> EXPRESION_NOT EXPRESIONLOGICA nt_checaAndOrNot EXPRESION_B','EXPRESION',4,'p_EXPRESION','CSP_yacc.py',566),
  ('nt_checaAndOrNot -> empty','nt_checaAndOrNot',1,'p_nt_checaAndOrNot','CSP_yacc.py',571),
  ('EXPRESION_NOT -> not nt_pushPOper','EXPRESION_NOT',2,'p_EXPRESION_NOT','CSP_yacc.py',618),
  ('EXPRESION_NOT -> empty','EXPRESION_NOT',1,'p_EXPRESION_NOT','CSP_yacc.py',619),
  ('EXPRESION_B -> and nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',624),
  ('EXPRESION_B -> or nt_pushPOper EXPRESION','EXPRESION_B',3,'p_EXPRESION_B','CSP_yacc.py',625),
  ('EXPRESION_B -> empty','EXPRESION_B',1,'p_EXPRESION_B','CSP_yacc.py',626),
  ('EXPRESIONLOGICA -> EXP EXPRESIONLOGICA_AUX','EXPRESIONLOGICA',2,'p_EXPRESIONLOGICA','CSP_yacc.py',631),
  ('EXPRESIONLOGICA_AUX -> lt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',636),
  ('EXPRESIONLOGICA_AUX -> gt nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',637),
  ('EXPRESIONLOGICA_AUX -> ne nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',638),
  ('EXPRESIONLOGICA_AUX -> ge nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',639),
  ('EXPRESIONLOGICA_AUX -> le nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',640),
  ('EXPRESIONLOGICA_AUX -> et nt_pushPOper EXP nt_checarRelop','EXPRESIONLOGICA_AUX',4,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',641),
  ('EXPRESIONLOGICA_AUX -> empty','EXPRESIONLOGICA_AUX',1,'p_EXPRESIONLOGICA_AUX','CSP_yacc.py',642),
  ('nt_checarRelop -> empty','nt_checarRelop',1,'p_nt_checarRelop','CSP_yacc.py',647),
  ('EXP -> TERMINO nt_checar_sumas EXP_AUX','EXP',3,'p_EXP','CSP_yacc.py',679),
  ('nt_checar_sumas -> empty','nt_checar_sumas',1,'p_nt_checar_sumas','CSP_yacc.py',684),
  ('EXP_AUX -> plus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',718),
  ('EXP_AUX -> minus nt_pushPOper EXP','EXP_AUX',3,'p_EXP_AUX','CSP_yacc.py',719),
  ('EXP_AUX -> empty','EXP_AUX',1,'p_EXP_AUX','CSP_yacc.py',720),
  ('TERMINO -> FACTOR nt_checar_multis TERMINO_AUX','TERMINO',3,'p_TERMINO','CSP_yacc.py',726),
  ('nt_checar_multis -> empty','nt_checar_multis',1,'p_nt_checar_multis','CSP_yacc.py',731),
  ('TERMINO_AUX -> multiply nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',764),
  ('TERMINO_AUX -> divide nt_pushPOper TERMINO','TERMINO_AUX',3,'p_TERMINO_AUX','CSP_yacc.py',765),
  ('TERMINO_AUX -> empty','TERMINO_AUX',1,'p_TERMINO_AUX','CSP_yacc.py',766),
  ('FACTOR -> left_par nt_pushPOper EXPRESION right_par nt_popPOper','FACTOR',5,'p_FACTOR','CSP_yacc.py',771),
  ('FACTOR -> CONSTANTE','FACTOR',1,'p_FACTOR','CSP_yacc.py',772),
  ('FACTOR -> LISTA','FACTOR',1,'p_FACTOR','CSP_yacc.py',773),
  ('FACTOR -> FACTOR_AUX','FACTOR',1,'p_FACTOR','CSP_yacc.py',774),
  ('FACTOR_AUX -> id nt_pushPilaO','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',779),
  ('FACTOR_AUX -> id LLAMADA_F','FACTOR_AUX',2,'p_FACTOR_AUX','CSP_yacc.py',780),
  ('LLAMADA_F -> left_par EXPRESION LLAMADAF_AUX right_par','LLAMADA_F',4,'p_LLAMADAF','CSP_yacc.py',785),
  ('LLAMADAF_AUX -> comma EXPRESION LLAMADAF_AUX','LLAMADAF_AUX',3,'p_LLAMADAF_AUX','CSP_yacc.py',790),
  ('LLAMADAF_AUX -> empty','LLAMADAF_AUX',1,'p_LLAMADAF_AUX','CSP_yacc.py',791),
  ('LISTA -> id left_sb EXP right_sb','LISTA',4,'p_LISTA','CSP_yacc.py',796),
  ('CONSTANTE -> NUMERICA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',801),
  ('CONSTANTE -> BOOLEANA','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',802),
  ('CONSTANTE -> STRINGS','CONSTANTE',1,'p_CONSTANTE','CSP_yacc.py',803),
  ('NUMERICA -> NUMERICA_AUX','NUMERICA',1,'p_NUMERICA','CSP_yacc.py',809),
  ('NUMERICA -> plus nt_sigMas NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',810),
  ('NUMERICA -> minus nt_sigMenos NUMERICA_AUX','NUMERICA',3,'p_NUMERICA','CSP_yacc.py',811),
  ('nt_sigMas -> empty','nt_sigMas',1,'p_nt_sigMas','CSP_yacc.py',816),
  ('nt_sigMenos -> empty','nt_sigMenos',1,'p_nt_sigMenos','CSP_yacc.py',823),
  ('NUMERICA_AUX -> cteInt nt_pushInt','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',830),
  ('NUMERICA_AUX -> cteFloat nt_pushFloat','NUMERICA_AUX',2,'p_NUMERICA_AUX','CSP_yacc.py',831),
  ('nt_pushInt -> empty','nt_pushInt',1,'p_nt_pushInt','CSP_yacc.py',837),
  ('nt_pushFloat -> empty','nt_pushFloat',1,'p_nt_pushFloat','CSP_yacc.py',856),
  ('BOOLEANA -> true','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',875),
  ('BOOLEANA -> false','BOOLEANA',1,'p_BOOLEANA','CSP_yacc.py',876),
  ('STRINGS -> cteString','STRINGS',1,'p_STRINGS','CSP_yacc.py',886),
  ('ASIGNACION -> ASIGNACION_AUX equals nt_pushPOper EXPRESION nt_checaEquals semicolon','ASIGNACION',6,'p_ASIGNACION','CSP_yacc.py',896),
  ('nt_checaEquals -> empty','nt_checaEquals',1,'p_nt_checaEquals','CSP_yacc.py',901),
  ('ASIGNACION_AUX -> id nt_pushPilaO','ASIGNACION_AUX',2,'p_ASIGNACION_AUX','CSP_yacc.py',929),
  ('ASIGNACION_AUX -> LISTA','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','CSP_yacc.py',930),
  ('nt_pushPilaO -> empty','nt_pushPilaO',1,'p_nt_pushPilaO','CSP_yacc.py',935),
  ('nt_pushPOper -> empty','nt_pushPOper',1,'p_nt_pushPOper','CSP_yacc.py',955),
  ('nt_popPOper -> empty','nt_popPOper',1,'p_nt_popPOper','CSP_yacc.py',964),
  ('empty -> <empty>','empty',0,'p_empty','CSP_yacc.py',971),
]
