import sys
# simbolos de operadores

dicSimbolos = {
	'error' : -1,
	'int' : 0,
	'float' : 1,
	'string' : 2,
	'bool' : 3,
	'+' : 4,
	'plus' : 4,
	'-' : 5,
	'minus' : 5,
	'*' : 6,
	'multiply' : 6,
	'/' : 7,
	'divide' : 7,
	'<' : 8,
	'lt' : 8,
	'>' : 9,
	'gt' : 9,
	'<=' : 10,
	'le' : 10,
	'>=' : 11,
	'ge' : 11,
	'!=' : 12,
	'ne' : 12,
	'==' : 13,
	'et' : 13,
	'=' : 14,
	'equals' : 14,
	'||' : 15,
	'or' : 15,
	'&&' : 16,
	'and' : 16
}

cubo = {
	0: {
		0: {
			4:0, 5:0, 6:0, 7:0, 8:3, 9:3, 10:3, 11:3, 12:3, 13:3, 14:0, 15:-1, 16:-1 
		},
		1: {
			4:1, 5:1, 6:1, 7:1, 8:3, 9:3, 10:3, 11:3, 12:3, 13:3, 14:0, 15:-1, 16:-1
		},
		2: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		},
		3: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		}
	},
	1: {
		0: {
			4:1, 5:1, 6:1, 7:1, 8:3, 9:3, 10:3, 11:3, 12:3, 13:3, 14:1, 15:-1, 16:-1 
		},
		1: {
			4:1, 5:1, 6:1, 7:1, 8:3, 9:3, 10:3, 11:3, 12:3, 13:3, 14:1, 15:-1, 16:-1 
		},
		2: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		},
		3: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		}
	},
	2: {
		0: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		},
		1: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		},
		2: {
			4:2, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:2, 15:-1, 16:-1
		},
		3: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		}
	},
	3: {
		0: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		},
		1: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		},
		2: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:-1, 15:-1, 16:-1
		},
		3: {
			4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1, 12:3, 13:3, 14:3, 15:3, 16:3
		}
	}
}

def buscarCubo(operando1, operando2, operador):
	op1 = transformarAEntero(operando1)
	op2 = transformarAEntero(operando2)
	op = transformarAEntero(operador)
	valor = cubo[op1][op2][op]
	valor = regresarSimbolo(valor)
	return valor

def transformarAEntero(string1):
	return dicSimbolos[string1]

def regresarSimbolo(int1):
	return list(dicSimbolos.keys())[list(dicSimbolos.values()).index(int1)]


